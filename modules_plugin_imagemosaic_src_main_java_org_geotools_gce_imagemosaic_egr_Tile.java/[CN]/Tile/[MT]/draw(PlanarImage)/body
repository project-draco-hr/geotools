{
  initRaster(false);
  final Rectangle tileBounds=raster.getBounds();
  final Rectangle imageBounds=binaryImage.getBounds();
  final Rectangle overlapArea=imageBounds.intersection(tileBounds);
  if (overlapArea.isEmpty()) {
    return false;
  }
  RandomIter sourceIter=RandomIterFactory.create(binaryImage,overlapArea,true,true);
  WritableRandomIter rasterIter=RandomIterFactory.createWritable(raster,overlapArea);
  boolean added=false;
  final int maxCol=overlapArea.x + overlapArea.width;
  final int maxRow=overlapArea.y + overlapArea.height;
  for (int row=overlapArea.y; row < maxRow; row++) {
    for (int col=overlapArea.x; col < maxCol; col++) {
      int maskValue=sourceIter.getSample(col,row,0);
      int rasValue=rasterIter.getSample(col,row,0);
      if (maskValue == 1 && rasValue == 0) {
        rasterIter.setSample(col,row,0,1);
        coverageCount++;
        added=true;
      }
    }
  }
  return added;
}
