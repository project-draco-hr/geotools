{
  assertTrue("Assertions should be enabled.",ImageWorker.class.desiredAssertionStatus());
  ImageWorker worker=new ImageWorker(sstImage);
  worker.forceBitmaskIndexColorModel();
  assertEquals(1,worker.getNumBands());
  assertEquals(-1,worker.getTransparentPixel());
  assertTrue(worker.isBytes());
  assertFalse(worker.isBinary());
  assertTrue(worker.isIndexed());
  assertTrue(worker.isColorSpaceRGB());
  assertFalse(worker.isColorSpaceGRAYScale());
  assertFalse(worker.isTranslucent());
  final BufferedImage directRGB=getSyntheticRGB(true);
  worker=new ImageWorker(directRGB);
  worker.forceBitmaskIndexColorModel();
  assertEquals(1,worker.getNumBands());
  assertEquals(-1,worker.getTransparentPixel());
  assertTrue(worker.isBytes());
  assertFalse(worker.isBinary());
  assertTrue(worker.isIndexed());
  assertTrue(worker.isColorSpaceRGB());
  assertFalse(worker.isColorSpaceGRAYScale());
  assertFalse(worker.isTranslucent());
  final BufferedImage componentRGB=getSyntheticRGB(false);
  worker=new ImageWorker(componentRGB);
  worker.forceBitmaskIndexColorModel();
  assertEquals(1,worker.getNumBands());
  assertEquals(-1,worker.getTransparentPixel());
  assertTrue(worker.isBytes());
  assertFalse(worker.isBinary());
  assertTrue(worker.isIndexed());
  assertTrue(worker.isColorSpaceRGB());
  assertFalse(worker.isColorSpaceGRAYScale());
  assertFalse(worker.isTranslucent());
  final BufferedImage translucentIndexed=getSyntheticTranslucentIndexed();
  worker=new ImageWorker(translucentIndexed);
  assertTrue(worker.isBytes());
  assertFalse(worker.isBinary());
  assertTrue(worker.isIndexed());
  assertTrue(worker.isColorSpaceRGB());
  assertTrue(worker.isTranslucent());
  worker.forceIndexColorModelForGIF(true);
  assertEquals(1,worker.getNumBands());
  assertEquals(0,worker.getTransparentPixel());
  assertTrue(worker.isBytes());
  assertFalse(worker.isBinary());
  assertTrue(worker.isIndexed());
  assertTrue(worker.isColorSpaceRGB());
  assertFalse(worker.isTranslucent());
}
