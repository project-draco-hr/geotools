{
  int pixelsPerCell=1;
  if (argPixelsPerCell != null && argPixelsPerCell > 1) {
    pixelsPerCell=argPixelsPerCell;
  }
  int outputWidth=argOutputWidth;
  int outputHeight=argOutputHeight;
  int gridWidth=outputWidth;
  int gridHeight=outputHeight;
  if (pixelsPerCell > 1) {
    gridWidth=outputWidth / pixelsPerCell;
    gridHeight=outputHeight / pixelsPerCell;
  }
  CoordinateReferenceSystem srcCRS=obsFeatures.getSchema().getCoordinateReferenceSystem();
  CoordinateReferenceSystem dstCRS=argOutputEnv.getCoordinateReferenceSystem();
  MathTransform trans=null;
  try {
    trans=CRS.findMathTransform(srcCRS,dstCRS);
  }
 catch (  FactoryException e) {
    throw new ProcessException(e);
  }
  int radiusCells=100;
  if (argRadiusPixels != null)   radiusCells=argRadiusPixels;
  if (pixelsPerCell > 1) {
    radiusCells/=pixelsPerCell;
  }
  HeatmapSurface heatMap=new HeatmapSurface(radiusCells,argOutputEnv,gridWidth,gridHeight);
  try {
    extractPoints(obsFeatures,valueAttr,trans,heatMap);
  }
 catch (  CQLException e) {
    throw new ProcessException(e);
  }
  float[][] heatMapGrid=heatMap.computeSurface();
  heatMapGrid=flipXY(heatMapGrid);
  float[][] outGrid=heatMapGrid;
  if (pixelsPerCell > 1)   outGrid=upsample(heatMapGrid,-999,outputWidth,outputHeight);
  GridCoverageFactory gcf=CoverageFactoryFinder.getGridCoverageFactory(GeoTools.getDefaultHints());
  GridCoverage2D gridCov=gcf.create("Process Results",outGrid,argOutputEnv);
  return gridCov;
}
