{
  URL statURL=TestData.url(this,(new StringBuffer(this.fileName).append(".DEM").toString()));
  AbstractGridFormat format=(AbstractGridFormat)new GTopo30FormatFactory().createFormat();
  if (format.accepts(statURL)) {
    GridCoverage2DReader reader=format.getReader(statURL);
    final ImageLayout layout=reader.getImageLayout();
    assertNotNull(layout);
    assertNotNull(layout.getColorModel(null));
    assertNotNull(layout.getSampleModel(null));
    assertEquals(0,layout.getMinX(null));
    assertEquals(0,layout.getMinY(null));
    assertTrue(layout.getWidth(null) > 0);
    assertTrue(layout.getHeight(null) > 0);
    assertEquals(0,layout.getTileGridXOffset(null));
    assertEquals(0,layout.getTileGridYOffset(null));
    assertTrue(layout.getTileHeight(null) > 0);
    assertTrue(layout.getTileWidth(null) > 0);
    gc=((GridCoverage2D)reader.read(null));
    if (TestData.isInteractiveTest())     gc.show();
    File testDir=TestData.file(this,"");
    newDir=new File(testDir.getAbsolutePath() + "/newDir");
    newDir.mkdir();
    GridCoverageWriter writer=format.getWriter(newDir);
    writer.write(gc,null);
    statURL=TestData.getResource(this,"newDir/" + this.fileName + ".DEM");
    reader=format.getReader(statURL);
    gc=((GridCoverage2D)reader.read(null));
    GridCoverage2D gc1=gc;
    if (TestData.isInteractiveTest()) {
      gc1.show();
      logger.info(gc.getCoordinateReferenceSystem2D().toWKT() + "\n" + gc.toString());
      logger.info(gc1.getCoordinateReferenceSystem2D().toWKT() + "\n" + gc1.toString());
    }
 else {
      gc1.getRenderedImage().getData();
    }
  }
}
