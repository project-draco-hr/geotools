{
  if ((subsx <= 0) || (subsx >= src.getWidth())) {
    throw new IllegalArgumentException("Invalid subsample x size");
  }
  if ((subsy <= 0) || (subsy >= src.getWidth())) {
    throw new IllegalArgumentException("Invalid subsample y size");
  }
  this.alphaThreshold=alpha_th;
  this.src=src;
  this.srcColorModel=src.getColorModel();
  this.numBands=srcColorModel.getNumComponents();
  this.subsampleX=subsx;
  this.subsampley=subsy;
  this.transparency=srcColorModel.getTransparency();
  if (transparency != Transparency.OPAQUE) {
    transparency=Transparency.BITMASK;
    this.requiredSize=size - 1;
    transColor=new ColorNode();
    transColor.isLeaf=true;
  }
 else {
    this.requiredSize=size;
  }
  if (this.requiredSize > 256) {
    throw new IllegalArgumentException("Unvalid number of colors require.");
  }
  this.maxLevel=(int)Math.ceil(Math.log(requiredSize) / Math.log(2));
}
