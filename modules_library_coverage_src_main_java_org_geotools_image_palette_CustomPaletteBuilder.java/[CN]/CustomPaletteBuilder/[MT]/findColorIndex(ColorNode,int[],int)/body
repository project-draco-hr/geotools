{
  if ((transparency != Transparency.OPAQUE) && (rgba[transpBand] < alphaThreshold)) {
    return 0;
  }
  try {
    if (aNode.isLeaf) {
      return aNode.paletteIndex;
    }
 else {
      int childIndex=getBranchIndex(rgba,aNode.level);
      if (aNode.children[childIndex] == null) {
        int i=1;
        for (; i < 8; i++) {
          if (((childIndex + i) < 8) && (aNode.children[childIndex + i] != null)) {
            childIndex+=i;
            break;
          }
          if (((childIndex - i) >= 0) && (aNode.children[childIndex - i] != null)) {
            childIndex-=i;
            break;
          }
        }
      }
      return findColorIndex(aNode.children[childIndex],rgba,transpBand);
    }
  }
 catch (  Exception e) {
  }
  return 0;
}
