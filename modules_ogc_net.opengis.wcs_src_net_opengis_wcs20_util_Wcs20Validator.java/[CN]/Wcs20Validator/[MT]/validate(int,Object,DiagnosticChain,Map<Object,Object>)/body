{
switch (classifierID) {
case Wcs20Package.CAPABILITIES_TYPE:
    return validateCapabilitiesType((CapabilitiesType)value,diagnostics,context);
case Wcs20Package.CONTENTS_TYPE:
  return validateContentsType((ContentsType)value,diagnostics,context);
case Wcs20Package.COVERAGE_DESCRIPTIONS_TYPE:
return validateCoverageDescriptionsType((CoverageDescriptionsType)value,diagnostics,context);
case Wcs20Package.COVERAGE_DESCRIPTION_TYPE:
return validateCoverageDescriptionType((CoverageDescriptionType)value,diagnostics,context);
case Wcs20Package.COVERAGE_OFFERINGS_TYPE:
return validateCoverageOfferingsType((CoverageOfferingsType)value,diagnostics,context);
case Wcs20Package.COVERAGE_SUBTYPE_PARENT_TYPE:
return validateCoverageSubtypeParentType((CoverageSubtypeParentType)value,diagnostics,context);
case Wcs20Package.COVERAGE_SUMMARY_TYPE:
return validateCoverageSummaryType((CoverageSummaryType)value,diagnostics,context);
case Wcs20Package.DESCRIBE_COVERAGE_TYPE:
return validateDescribeCoverageType((DescribeCoverageType)value,diagnostics,context);
case Wcs20Package.DIMENSION_SLICE_TYPE:
return validateDimensionSliceType((DimensionSliceType)value,diagnostics,context);
case Wcs20Package.DIMENSION_SUBSET_TYPE:
return validateDimensionSubsetType((DimensionSubsetType)value,diagnostics,context);
case Wcs20Package.DIMENSION_TRIM_TYPE:
return validateDimensionTrimType((DimensionTrimType)value,diagnostics,context);
case Wcs20Package.DOCUMENT_ROOT:
return validateDocumentRoot((DocumentRoot)value,diagnostics,context);
case Wcs20Package.EXTENSION_TYPE:
return validateExtensionType((ExtensionType)value,diagnostics,context);
case Wcs20Package.GET_CAPABILITIES_TYPE:
return validateGetCapabilitiesType((GetCapabilitiesType)value,diagnostics,context);
case Wcs20Package.GET_COVERAGE_TYPE:
return validateGetCoverageType((GetCoverageType)value,diagnostics,context);
case Wcs20Package.OFFERED_COVERAGE_TYPE:
return validateOfferedCoverageType((OfferedCoverageType)value,diagnostics,context);
case Wcs20Package.REQUEST_BASE_TYPE:
return validateRequestBaseType((RequestBaseType)value,diagnostics,context);
case Wcs20Package.SERVICE_METADATA_TYPE:
return validateServiceMetadataType((ServiceMetadataType)value,diagnostics,context);
case Wcs20Package.SERVICE_PARAMETERS_TYPE:
return validateServiceParametersType((ServiceParametersType)value,diagnostics,context);
case Wcs20Package.OBJECT:
return validateObject((Object)value,diagnostics,context);
case Wcs20Package.EXTENSION_ITEM_TYPE:
return validateExtensionItemType((ExtensionItemType)value,diagnostics,context);
case Wcs20Package.RANGE_INTERVAL_TYPE:
return validateRangeIntervalType((RangeIntervalType)value,diagnostics,context);
case Wcs20Package.RANGE_ITEM_TYPE:
return validateRangeItemType((RangeItemType)value,diagnostics,context);
case Wcs20Package.RANGE_SUBSET_TYPE:
return validateRangeSubsetType((RangeSubsetType)value,diagnostics,context);
case Wcs20Package.SCALE_AXIS_BY_FACTOR_TYPE:
return validateScaleAxisByFactorType((ScaleAxisByFactorType)value,diagnostics,context);
case Wcs20Package.SCALE_AXIS_TYPE:
return validateScaleAxisType((ScaleAxisType)value,diagnostics,context);
case Wcs20Package.SCALE_BY_FACTOR_TYPE:
return validateScaleByFactorType((ScaleByFactorType)value,diagnostics,context);
case Wcs20Package.SCALE_TO_EXTENT_TYPE:
return validateScaleToExtentType((ScaleToExtentType)value,diagnostics,context);
case Wcs20Package.SCALE_TO_SIZE_TYPE:
return validateScaleToSizeType((ScaleToSizeType)value,diagnostics,context);
case Wcs20Package.SCALING_TYPE:
return validateScalingType((ScalingType)value,diagnostics,context);
case Wcs20Package.TARGET_AXIS_EXTENT_TYPE:
return validateTargetAxisExtentType((TargetAxisExtentType)value,diagnostics,context);
case Wcs20Package.TARGET_AXIS_SIZE_TYPE:
return validateTargetAxisSizeType((TargetAxisSizeType)value,diagnostics,context);
case Wcs20Package.INTERPOLATION_AXES_TYPE:
return validateInterpolationAxesType((InterpolationAxesType)value,diagnostics,context);
case Wcs20Package.INTERPOLATION_AXIS_TYPE:
return validateInterpolationAxisType((InterpolationAxisType)value,diagnostics,context);
case Wcs20Package.INTERPOLATION_METHOD_TYPE:
return validateInterpolationMethodType((InterpolationMethodType)value,diagnostics,context);
case Wcs20Package.INTERPOLATION_TYPE:
return validateInterpolationType((InterpolationType)value,diagnostics,context);
case Wcs20Package.VERSION_STRING_TYPE:
return validateVersionStringType((String)value,diagnostics,context);
case Wcs20Package.VERSION_STRING_TYPE_1:
return validateVersionStringType_1((String)value,diagnostics,context);
case Wcs20Package.QNAME:
return validateQName((QName)value,diagnostics,context);
default :
return true;
}
}
