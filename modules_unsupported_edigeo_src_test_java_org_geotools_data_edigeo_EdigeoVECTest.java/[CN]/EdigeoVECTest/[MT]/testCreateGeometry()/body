{
  List<Coordinate[]> coordList=null;
  Geometry geom=null;
  String idObj=null;
  try {
    idObj="Objet_434514";
    eVecS1.geoType="POINT";
    coordList=eVecS1.getRelation(idObj);
    geom=eVecS1.createGeometry(coordList,idObj);
    assertTrue("geom should be an instance of Point",geom instanceof Point);
  }
 catch (  IOException e) {
    assertFalse(e.getMessage(),true);
  }
  try {
    idObj="Objet_3351611";
    eVecS1.geoType="LINESTRING";
    coordList=eVecS1.getRelation(idObj);
    geom=eVecS1.createGeometry(coordList,idObj);
    assertTrue("geom should be an instance of LineString",geom instanceof LineString);
  }
 catch (  IOException e) {
    assertFalse(e.getMessage(),true);
  }
  try {
    idObj="Objet_647020";
    eVecS1.geoType="POLYGON";
    coordList=eVecS1.getRelation(idObj);
    geom=eVecS1.createGeometry(coordList,idObj);
    assertTrue("geom should be an instance of Polygon",geom instanceof Polygon);
  }
 catch (  IOException e) {
    assertFalse(e.getMessage(),true);
  }
  try {
    idObj="Objet_966450";
    eVecT3.geoType="MULTIPOLYGON";
    coordList=eVecT3.getRelation(idObj);
    geom=eVecT3.createGeometry(coordList,idObj);
    assertTrue("geom should be an instance of MultiPolygon",geom instanceof MultiPolygon);
  }
 catch (  IOException e) {
    assertFalse(e.getMessage(),true);
  }
  try {
    idObj="Objet_434764";
    eVecT1.geoType="POLYGON";
    eVecT1.topo=true;
    coordList=eVecT1.getRelation(idObj);
    assertTrue("Coordinate list should contains at least two edges in order to construct a polygon",coordList.size() > 1);
    geom=eVecT1.createGeometry(coordList,idObj);
    assertTrue("geom should be an instance of Polygon",geom instanceof Polygon);
  }
 catch (  IOException e) {
    assertFalse(e.getMessage(),true);
  }
}
