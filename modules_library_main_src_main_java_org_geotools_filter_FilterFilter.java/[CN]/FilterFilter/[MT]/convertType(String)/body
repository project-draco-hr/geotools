{
  if (filterType.equals("Or")) {
    return Filter.LOGIC_OR;
  }
 else   if (filterType.equals("And")) {
    return Filter.LOGIC_AND;
  }
 else   if (filterType.equals("Not")) {
    return Filter.LOGIC_NOT;
  }
 else   if (filterType.equals("Equals")) {
    return Filter.GEOMETRY_EQUALS;
  }
 else   if (filterType.equals("Disjoint")) {
    return Filter.GEOMETRY_DISJOINT;
  }
 else   if (filterType.equals("DWithin")) {
    return Filter.GEOMETRY_DWITHIN;
  }
 else   if (filterType.equals("Intersects")) {
    return Filter.GEOMETRY_INTERSECTS;
  }
 else   if (filterType.equals("Touches")) {
    return Filter.GEOMETRY_TOUCHES;
  }
 else   if (filterType.equals("Crosses")) {
    return Filter.GEOMETRY_CROSSES;
  }
 else   if (filterType.equals("Within")) {
    return Filter.GEOMETRY_WITHIN;
  }
 else   if (filterType.equals("Contains")) {
    return Filter.GEOMETRY_CONTAINS;
  }
 else   if (filterType.equals("Overlaps")) {
    return Filter.GEOMETRY_OVERLAPS;
  }
 else   if (filterType.equals("Beyond")) {
    return Filter.GEOMETRY_BEYOND;
  }
 else   if (filterType.equals("BBOX")) {
    return Filter.GEOMETRY_BBOX;
  }
 else   if (filterType.equals("PropertyIsEqualTo")) {
    return FilterType.COMPARE_EQUALS;
  }
 else   if (filterType.equals("PropertyIsNotEqualTo")) {
    return FilterType.COMPARE_NOT_EQUALS;
  }
 else   if (filterType.equals("PropertyIsLessThan")) {
    return FilterType.COMPARE_LESS_THAN;
  }
 else   if (filterType.equals("PropertyIsGreaterThan")) {
    return FilterType.COMPARE_GREATER_THAN;
  }
 else   if (filterType.equals("PropertyIsLessThanOrEqualTo")) {
    return FilterType.COMPARE_LESS_THAN_EQUAL;
  }
 else   if (filterType.equals("PropertyIsGreaterThanOrEqualTo")) {
    return FilterType.COMPARE_GREATER_THAN_EQUAL;
  }
 else   if (filterType.equals("PropertyIsBetween")) {
    return AbstractFilter.BETWEEN;
  }
 else   if (filterType.equals("PropertyIsLike")) {
    return AbstractFilter.LIKE;
  }
 else   if (filterType.equals("PropertyIsNull")) {
    return AbstractFilter.NULL;
  }
 else   if (filterType.equals("FeatureId")) {
    return AbstractFilter.FID;
  }
 else   if (filterType.equals("Add")) {
    return DefaultExpression.MATH_ADD;
  }
 else   if (filterType.equals("Sub")) {
    return DefaultExpression.MATH_SUBTRACT;
  }
 else   if (filterType.equals("Mul")) {
    return DefaultExpression.MATH_MULTIPLY;
  }
 else   if (filterType.equals("Div")) {
    return DefaultExpression.MATH_DIVIDE;
  }
 else   if (filterType.equals("PropertyName")) {
    return DefaultExpression.LITERAL_DOUBLE;
  }
 else   if (filterType.equals("Literal")) {
    return DefaultExpression.ATTRIBUTE_DOUBLE;
  }
 else   if (filterType.equals("Function")) {
    return DefaultExpression.FUNCTION;
  }
 else {
    return -1;
  }
}
