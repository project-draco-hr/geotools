{
  StringBuilder builder=new StringBuilder();
  builder.append("SpatialRequestHelper [");
  if (requestedBBox != null) {
    builder.append("requestedBBox=");
    builder.append(requestedBBox);
    builder.append(", ");
  }
  if (computedBBox != null) {
    builder.append("cropBBox=");
    builder.append(computedBBox);
    builder.append(", ");
  }
  if (requestedRasterArea != null) {
    builder.append("requestedRasterArea=");
    builder.append(requestedRasterArea);
    builder.append(", ");
  }
  if (computedRasterArea != null) {
    builder.append("destinationRasterArea=");
    builder.append(computedRasterArea);
    builder.append(", ");
  }
  if (requestCRS != null) {
    builder.append("requestCRS=");
    builder.append(requestCRS);
    builder.append(", ");
  }
  if (requestedGridToWorld != null) {
    builder.append("requestedGridToWorld=");
    builder.append(requestedGridToWorld);
    builder.append(", ");
  }
  if (computedResolution != null) {
    builder.append("requestedResolution=");
    builder.append(Arrays.toString(computedResolution));
    builder.append(", ");
  }
  if (requestedBBOXInCoverageGeographicCRS != null) {
    builder.append("requestedBBOXInCoverageGeographicCRS=");
    builder.append(requestedBBOXInCoverageGeographicCRS);
    builder.append(", ");
  }
  if (requestCRSToCoverageGeographicCRS2D != null) {
    builder.append("requestCRSToCoverageGeographicCRS2D=");
    builder.append(requestCRSToCoverageGeographicCRS2D);
    builder.append(", ");
  }
  if (destinationToSourceTransform != null) {
    builder.append("destinationToSourceTransform=");
    builder.append(destinationToSourceTransform);
    builder.append(", ");
  }
  if (coverageProperties != null) {
    builder.append("coverageProperties=");
    builder.append(coverageProperties);
    builder.append(", ");
  }
  builder.append("accurateResolution=");
  builder.append(accurateResolution);
  builder.append(", empty=");
  builder.append(emptyRequest);
  builder.append(", needsReprojection=");
  builder.append(needsReprojection);
  builder.append(", ");
  if (approximateRequestedBBoInNativeCRS != null) {
    builder.append("approximateRequestedBBoInNativeCRS=");
    builder.append(approximateRequestedBBoInNativeCRS);
  }
  builder.append("]");
  return builder.toString();
}
