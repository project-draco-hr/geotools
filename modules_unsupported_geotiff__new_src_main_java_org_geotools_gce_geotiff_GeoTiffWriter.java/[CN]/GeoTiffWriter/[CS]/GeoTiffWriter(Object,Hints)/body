{
  this.destination=destination;
  if (destination instanceof File)   this.outStream=ImageIOExt.createImageOutputStream(null,destination);
 else   if (destination instanceof URL) {
    final URL dest=(URL)destination;
    if (dest.getProtocol().equalsIgnoreCase("file")) {
      final File destFile=DataUtilities.urlToFile(dest);
      this.outStream=ImageIOExt.createImageOutputStream(null,destFile);
    }
  }
 else   if (destination instanceof OutputStream) {
    this.outStream=ImageIOExt.createImageOutputStream(null,(OutputStream)destination);
  }
 else   if (destination instanceof ImageOutputStream)   this.outStream=(ImageOutputStream)destination;
 else   throw new IllegalArgumentException("The provided destination canno be used!");
  if (this.hints == null)   this.hints=new Hints();
  if (hints != null) {
    hints.remove(Hints.FORCE_LONGITUDE_FIRST_AXIS_ORDER);
    this.hints.add(hints);
    this.hints.add(new Hints(Hints.FORCE_LONGITUDE_FIRST_AXIS_ORDER,Boolean.TRUE));
  }
}
