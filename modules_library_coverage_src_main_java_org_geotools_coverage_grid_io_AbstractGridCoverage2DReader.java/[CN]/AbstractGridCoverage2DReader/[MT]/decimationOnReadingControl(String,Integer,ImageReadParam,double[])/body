{
{
    int w, h;
    double[] selectedRes=new double[2];
    final int choice=imageChoice.intValue();
    if (choice == 0) {
      w=getOriginalGridRange(coverageName).getSpan(0);
      h=getOriginalGridRange(coverageName).getSpan(1);
      selectedRes[0]=getHighestRes()[0];
      selectedRes[1]=getHighestRes()[1];
    }
 else {
      selectedRes[0]=overViewResolutions[choice - 1][0];
      selectedRes[1]=overViewResolutions[choice - 1][1];
      w=(int)Math.round(getOriginalEnvelope(coverageName).getSpan(0) / selectedRes[0]);
      h=(int)Math.round(getOriginalEnvelope(coverageName).getSpan(1) / selectedRes[1]);
    }
    if (requestedRes == null) {
      readP.setSourceSubsampling(1,1,0,0);
    }
 else {
      int subSamplingFactorX=(int)Math.floor(requestedRes[0] / selectedRes[0]);
      subSamplingFactorX=subSamplingFactorX == 0 ? 1 : subSamplingFactorX;
      while (w / subSamplingFactorX <= 0 && subSamplingFactorX >= 0)       subSamplingFactorX--;
      subSamplingFactorX=subSamplingFactorX == 0 ? 1 : subSamplingFactorX;
      int subSamplingFactorY=(int)Math.floor(requestedRes[1] / selectedRes[1]);
      subSamplingFactorY=subSamplingFactorY == 0 ? 1 : subSamplingFactorY;
      while (h / subSamplingFactorY <= 0 && subSamplingFactorY >= 0)       subSamplingFactorY--;
      subSamplingFactorY=subSamplingFactorY == 0 ? 1 : subSamplingFactorY;
      readP.setSourceSubsampling(subSamplingFactorX,subSamplingFactorY,0,0);
    }
  }
}
