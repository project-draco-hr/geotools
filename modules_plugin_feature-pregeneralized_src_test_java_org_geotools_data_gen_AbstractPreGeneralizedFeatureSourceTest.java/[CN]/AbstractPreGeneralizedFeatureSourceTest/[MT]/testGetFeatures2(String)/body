{
  try {
    PreGeneralizedDataStore ds=getDataStore(configName);
    SimpleFeatureSource fs=ds.getFeatureSource("GenStreams");
    assertTrue(fs.getSupportedHints().contains(Hints.GEOMETRY_DISTANCE));
    SimpleFeatureCollection fCollection;
    String typeName;
    fCollection=fs.getFeatures();
    typeName=fCollection.getSchema().getTypeName();
    assertTrue("GenStreams".equals(typeName));
    assertTrue(fCollection.size() > 0);
    assertFalse(fCollection.isEmpty());
    SimpleFeatureIterator iterator=fCollection.features();
    try {
      while (iterator.hasNext()) {
        SimpleFeature f=iterator.next();
        checkPoints(f,0.0);
      }
    }
  finally {
      iterator.close();
    }
    fCollection=fs.getFeatures(Filter.INCLUDE);
    typeName=fCollection.getSchema().getTypeName();
    assertTrue("GenStreams".equals(typeName));
    assertTrue(fCollection.size() > 0);
    assertFalse(fCollection.isEmpty());
    iterator=fCollection.features();
    try {
      while (iterator.hasNext()) {
        SimpleFeature f=iterator.next();
        checkPoints(f,0.0);
      }
    }
  finally {
      iterator.close();
    }
    ds.dispose();
  }
 catch (  Exception ex) {
    Assert.fail(ex.getMessage());
  }
}
