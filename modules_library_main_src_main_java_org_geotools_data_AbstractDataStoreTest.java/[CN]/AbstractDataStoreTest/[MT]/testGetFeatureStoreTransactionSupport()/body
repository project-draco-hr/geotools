{
  Transaction t1=new DefaultTransaction();
  Transaction t2=new DefaultTransaction();
  SimpleFeatureStore road=(SimpleFeatureStore)data.getFeatureSource("ROAD");
  SimpleFeatureStore road1=(SimpleFeatureStore)data.getFeatureSource("ROAD");
  SimpleFeatureStore road2=(SimpleFeatureStore)data.getFeatureSource("ROAD");
  road1.setTransaction(t1);
  road2.setTransaction(t2);
  SimpleFeature feature;
  SimpleFeature[] ORIGIONAL=roadFeatures;
  SimpleFeature[] REMOVE=new SimpleFeature[ORIGIONAL.length - 1];
  SimpleFeature[] ADD=new SimpleFeature[ORIGIONAL.length + 1];
  SimpleFeature[] FINAL=new SimpleFeature[ORIGIONAL.length];
  int i;
  int index;
  index=0;
  for (i=0; i < ORIGIONAL.length; i++) {
    feature=ORIGIONAL[i];
    if (!feature.getID().equals(roadFeatures[0].getID())) {
      REMOVE[index++]=feature;
    }
  }
  for (i=0; i < ORIGIONAL.length; i++) {
    ADD[i]=ORIGIONAL[i];
  }
  ADD[i]=newRoad;
  for (i=0; i < REMOVE.length; i++) {
    FINAL[i]=REMOVE[i];
  }
  FINAL[i]=newRoad;
  assertTrue(covers(road.getFeatures().features(),ORIGIONAL));
  road1.removeFeatures(rd1Filter);
  assertTrue(covers(road.getFeatures().features(),ORIGIONAL));
  assertTrue(covers(road1.getFeatures().features(),REMOVE));
  SimpleFeatureCollection collection=DataUtilities.collection(new SimpleFeature[]{newRoad});
  road2.addFeatures(collection);
  assertTrue(covers(road.getFeatures().features(),ORIGIONAL));
  assertTrue(covers(road1.getFeatures().features(),REMOVE));
  assertTrue(coversLax(road2.getFeatures().features(),ADD));
  t1.commit();
  assertTrue(covers(road.getFeatures().features(),REMOVE));
  assertTrue(covers(road1.getFeatures().features(),REMOVE));
  assertTrue(coversLax(road2.getFeatures().features(),FINAL));
  t2.commit();
  assertTrue(coversLax(road.getFeatures().features(),FINAL));
  assertTrue(coversLax(road1.getFeatures().features(),FINAL));
  assertTrue(coversLax(road2.getFeatures().features(),FINAL));
}
