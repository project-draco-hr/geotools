{
  GeometryFactoryImpl tCoordFactory=(GeometryFactoryImpl)builder.getGeometryFactory();
  DirectPosition dp1=tCoordFactory.createDirectPosition(new double[]{0,0});
  DirectPosition dp2=tCoordFactory.createDirectPosition(new double[]{100,100});
  DirectPosition dp0=tCoordFactory.createDirectPosition(new double[]{100,100});
  assertTrue(dp2.equals(dp0));
  assertTrue(dp2.getDimension() == 2);
  EnvelopeImpl env1=new EnvelopeImpl(dp1,dp2);
  assertTrue(env1.getLowerCorner().equals(dp1));
  assertTrue(env1.getUpperCorner().equals(dp2));
  EnvelopeImpl env2=new EnvelopeImpl(env1);
  assertTrue(env1.equals(env2));
  DirectPosition dp3=tCoordFactory.createDirectPosition(new double[]{0,0});
  DirectPosition dp4=tCoordFactory.createDirectPosition(new double[]{100,50});
  DirectPosition dp5=tCoordFactory.createDirectPosition(new double[]{100.01,50});
  DirectPosition dp6=tCoordFactory.createDirectPosition(new double[]{50,100});
  DirectPosition dp7=tCoordFactory.createDirectPosition(new double[]{50,100.01});
  assertTrue(env1.contains(dp3) == true);
  assertTrue(env1.contains(dp4) == true);
  assertTrue(env1.contains(dp5) == false);
  assertTrue(env1.contains(dp6) == true);
  assertTrue(env1.contains(dp7) == false);
  env1=tCoordFactory.createEnvelope(dp1.getCoordinate());
  env1.expand(dp2.getCoordinate());
  env1.expand(dp5.getCoordinate());
  env1.setValues(env2);
  DirectPosition[] dpArray=new DirectPositionImpl[2];
  dpArray[0]=dp0;
  dpArray[1]=dp4;
  EnvelopeImpl impl=env1.createEnvelope(dpArray);
  String toS=impl.toString();
  assertTrue(toS != null);
  assertTrue(toS.length() > 0);
  assertTrue(impl.intersects(dp0));
  assertFalse(impl.intersects(dp1));
  assertTrue(impl.getNECorner().equals(dp0));
  assertTrue(impl.getSWCorner().equals(dp4));
  try {
    assertTrue(impl.getSECorner().equals(dp4));
  }
 catch (  UnsupportedDimensionException e) {
    e.printStackTrace();
    fail();
  }
  try {
    assertTrue(impl.getNWCornerOld().equals(dp0));
  }
 catch (  UnsupportedDimensionException e) {
    e.printStackTrace();
    fail();
  }
}
