{
  if (wgs84) {
    final double[] c2n=new double[6];
    c2n[1]=c2;
    int sign=1;
    double esqi=esq;
    for (int i=2; i < c2n.length; i++) {
      sign*=-1;
      esqi*=esq;
      c2n[i]=sign * (3 * esqi) / ((2 * i + 1) * (2 * i + 3)) * (1 - i + (5 * i * c2 / esq));
    }
    cnmGeopCoef[3]+=c2n[1] / SQRT_05;
    cnmGeopCoef[10]+=c2n[2] / 3;
    cnmGeopCoef[21]+=c2n[3] / SQRT_13;
    if (nmax > 6)     cnmGeopCoef[36]+=c2n[4] / SQRT_17;
    if (nmax > 9)     cnmGeopCoef[55]+=c2n[5] / SQRT_21;
  }
 else {
    cnmGeopCoef[3]+=4.841732e-04;
    cnmGeopCoef[10]+=-7.8305e-07;
  }
  for (int i=0; i <= nmax; i++) {
    as[i]=-Math.sqrt(1.0 + 1.0 / (2 * (i + 1)));
  }
  for (int i=0; i <= nmax; i++) {
    for (int j=i + 1; j <= nmax; j++) {
      final int ll=locatingArray(j) + i;
      final int n=2 * j + 1;
      final int ji=(j - i) * (j + i);
      aClenshaw[ll]=Math.sqrt(n * (2 * j - 1) / (double)(ji));
      bClenshaw[ll]=Math.sqrt(n * (j + i - 1) * (j - i - 1) / (double)(ji * (2 * j - 3)));
    }
  }
}
