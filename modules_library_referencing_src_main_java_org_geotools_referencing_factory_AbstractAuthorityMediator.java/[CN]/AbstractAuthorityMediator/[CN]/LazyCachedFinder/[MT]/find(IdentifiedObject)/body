{
  IdentifiedObject candidate;
  candidate=(IdentifiedObject)findCache.get(object);
  if (candidate != null) {
    return candidate;
  }
  try {
    findCache.writeLock(object);
    IdentifiedObject found;
    AbstractCachedAuthorityFactory worker=null;
    try {
      worker=(AbstractCachedAuthorityFactory)getPool().borrowObject();
      worker.cache=ObjectCaches.chain(ObjectCaches.create("weak",3000),cache);
      worker.findCache=findCache;
      setProxy(AuthorityFactoryProxy.getInstance(worker,type));
      found=super.find(object);
    }
 catch (    Exception e) {
      throw new FactoryException(e);
    }
 finally {
      setProxy(null);
      worker.cache=cache;
      worker.findCache=findCache;
      try {
        getPool().returnObject(worker);
      }
 catch (      Exception e) {
        LOGGER.log(Level.WARNING,"Unable to return worker " + e,e);
      }
    }
    if (found == null) {
      return null;
    }
    candidate=(IdentifiedObject)findCache.peek(object);
    if (candidate == null) {
      findCache.put(object,found);
      return found;
    }
 else {
      return candidate;
    }
  }
  finally {
    findCache.writeUnLock(object);
  }
}
