{
  List bbox=new ArrayList();
  List fids=new ArrayList();
  SimpleFeatureCollection fc=data.getFeatureSource("road").getFeatures();
  for (Iterator itr=fc.iterator(); itr.hasNext(); ) {
    SimpleFeature f=(SimpleFeature)itr.next();
    bbox.add(((Geometry)f.getDefaultGeometry()).getEnvelopeInternal());
    fids.add(f.getID());
  }
  SimpleFeatureType type=data.getSchema("road");
  FilterFactory ff=FilterFactoryFinder.createFilterFactory();
  for (int i=0; i < bbox.size(); i++) {
    Envelope box=(Envelope)bbox.get(i);
    String fid=(String)fids.get(i);
    GeometryFilter filter=ff.createGeometryFilter(GeometryFilter.GEOMETRY_BBOX);
    filter.addLeftGeometry(ff.createAttributeExpression(type,"geom"));
    filter.addRightGeometry(ff.createBBoxExpression(box));
    FeatureReader<SimpleFeatureType,SimpleFeature> reader;
    reader=((PostgisDataStore)data).getFeatureReader(type,filter,Transaction.AUTO_COMMIT);
    boolean found=false;
    for (; reader.hasNext(); ) {
      SimpleFeature f=reader.next();
      if (fid.equals(f.getID()))       found=true;
    }
    reader.close();
    assertTrue(found);
  }
}
