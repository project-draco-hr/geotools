{
  Set ids=filter.getIDs();
  if (ids.isEmpty()) {
    throw new IllegalArgumentException("Invalid fid filter provides, has no fids inside");
  }
  Filter result=null;
  List<Filter> transformedIdFilters=new ArrayList<Filter>();
  for (Iterator it=ids.iterator(); it.hasNext(); ) {
    String id=(String)it.next();
    Object[] attributes;
    try {
      attributes=mapper.getUnversionedPKAttributes(id);
    }
 catch (    IOException e) {
      if (LOGGER.isLoggable(Level.FINE))       LOGGER.fine("Skipping fid " + id + " since it's not in the "+ "proper format for this datastore"+ e.getMessage());
      continue;
    }
    Filter idf=null;
    for (int i=0, j=0; i < attributes.length; j++) {
      String colName=mapper.getColumnName(j);
      if ("revision".equals(colName))       continue;
      transformedIdFilters.add(ff.equals(ff.property(colName),ff.literal(attributes[i])));
      i++;
    }
  }
  if (transformedIdFilters.size() > 1) {
    result=ff.or(transformedIdFilters);
  }
 else   if (transformedIdFilters.size() == 1) {
    result=transformedIdFilters.get(0);
  }
  if (result == null) {
    PropertyIsEqualTo equal=ff.equals(ff.literal(0),ff.literal(1));
    return equal;
  }
 else   return result;
}
