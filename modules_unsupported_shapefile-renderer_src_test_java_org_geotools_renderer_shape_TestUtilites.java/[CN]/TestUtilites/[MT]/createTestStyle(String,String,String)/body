{
  if (polyName == null) {
    polyName="lakes";
  }
  if (lineName == null) {
    lineName="streams";
  }
  if (pointName == null) {
    pointName="pointtest";
  }
  StyleFactory sFac=StyleFactoryFinder.createStyleFactory();
  PointSymbolizer pointsym=sFac.createPointSymbolizer();
  pointsym.setGraphic(sFac.getDefaultGraphic());
  LineSymbolizer linesym=sFac.createLineSymbolizer();
  Stroke myStroke=sFac.getDefaultStroke();
  myStroke.setColor(TestUtilites.filterFactory.literal("#0000ff"));
  myStroke.setWidth(TestUtilites.filterFactory.literal(new Integer(5)));
  Rendering2DTest.LOGGER.fine("got new Stroke " + myStroke);
  linesym.setStroke(myStroke);
  PolygonSymbolizer polysym=sFac.createPolygonSymbolizer();
  Fill myFill=sFac.getDefaultFill();
  myFill.setColor(TestUtilites.filterFactory.literal("#ff0000"));
  polysym.setFill(myFill);
  myStroke=sFac.getDefaultStroke();
  myStroke.setColor(TestUtilites.filterFactory.literal("#0000ff"));
  myStroke.setWidth(TestUtilites.filterFactory.literal(new Integer(2)));
  polysym.setStroke(myStroke);
  Rule rule=sFac.createRule();
  rule.setSymbolizers(new Symbolizer[]{polysym});
  FeatureTypeStyle fts=sFac.createFeatureTypeStyle(new Rule[]{rule});
  fts.setFeatureTypeName(polyName);
  Rule rule2=sFac.createRule();
  rule2.setSymbolizers(new Symbolizer[]{linesym});
  FeatureTypeStyle fts2=sFac.createFeatureTypeStyle();
  fts2.setRules(new Rule[]{rule2});
  fts2.setFeatureTypeName(lineName);
  Rule rule3=sFac.createRule();
  rule3.setSymbolizers(new Symbolizer[]{pointsym});
  FeatureTypeStyle fts3=sFac.createFeatureTypeStyle();
  fts3.setRules(new Rule[]{rule3});
  fts3.setFeatureTypeName(pointName);
  Style style=sFac.createStyle();
  style.setFeatureTypeStyles(new FeatureTypeStyle[]{fts,fts2,fts3});
  return style;
}
