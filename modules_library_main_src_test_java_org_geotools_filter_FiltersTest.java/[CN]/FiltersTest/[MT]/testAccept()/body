{
  Filter filter=ff.and(a,b);
  final int count[]=new int[1];
  filters.accept(filter,new FilterVisitor(){
    public void visit(    org.geotools.filter.Filter filter){
      count[0]++;
    }
    public void visit(    BetweenFilter filter){
      count[0]++;
    }
    public void visit(    CompareFilter filter){
      count[0]++;
    }
    public void visit(    GeometryFilter filter){
      count[0]++;
    }
    public void visit(    LikeFilter filter){
      count[0]++;
    }
    public void visit(    LogicFilter filter){
      count[0]++;
    }
    public void visit(    NullFilter filter){
      count[0]++;
    }
    public void visit(    FidFilter filter){
      count[0]++;
    }
    public void visit(    AttributeExpression expression){
      count[0]++;
    }
    public void visit(    Expression expression){
      count[0]++;
    }
    public void visit(    LiteralExpression expression){
      count[0]++;
    }
    public void visit(    MathExpression expression){
      count[0]++;
    }
    public void visit(    FunctionExpression expression){
      count[0]++;
    }
  }
);
  assertEquals(1,count[0]);
}
