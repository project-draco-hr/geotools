{
  InputStream is=null;
  if (fontUrl.startsWith("http") || fontUrl.startsWith("file:")) {
    try {
      URL url=new URL(fontUrl);
      is=url.openStream();
    }
 catch (    MalformedURLException mue) {
      if (LOGGER.isLoggable(Level.INFO)) {
        LOGGER.info("Bad url in SLDStyleFactory " + fontUrl + "\n"+ mue);
      }
    }
catch (    IOException ioe) {
      if (LOGGER.isLoggable(Level.INFO)) {
        LOGGER.info("IO error in SLDStyleFactory " + fontUrl + "\n"+ ioe);
      }
    }
  }
 else {
    if (LOGGER.isLoggable(Level.FINEST)) {
      LOGGER.finest("not a URL");
    }
    File file=new File(fontUrl);
    try {
      is=new FileInputStream(file);
    }
 catch (    FileNotFoundException fne) {
      if (LOGGER.isLoggable(Level.INFO)) {
        LOGGER.info("Bad file name in SLDStyleFactory" + fontUrl + "\n"+ fne);
      }
    }
  }
  if (is == null) {
    if (LOGGER.isLoggable(Level.INFO)) {
      LOGGER.info("null input stream, could not load the font");
    }
    return null;
  }
  if (LOGGER.isLoggable(Level.FINEST)) {
    LOGGER.finest("about to load");
  }
  try {
    return java.awt.Font.createFont(java.awt.Font.TRUETYPE_FONT,is);
  }
 catch (  FontFormatException ffe) {
    if (LOGGER.isLoggable(Level.INFO)) {
      LOGGER.info("Font format error in SLDStyleFactory " + fontUrl + "\n"+ ffe);
    }
    return null;
  }
catch (  IOException ioe) {
    if (LOGGER.isLoggable(Level.INFO)) {
      LOGGER.info("IO error in SLDStyleFactory " + fontUrl + "\n"+ ioe);
    }
    return null;
  }
}
