{
  boolean isDefaultTolerance=CircularArc.equals(tolerance,this.tolerance);
  if (linearized != null && isDefaultTolerance) {
    return (LiteCoordinateSequence)linearized.getCoordinateSequence();
  }
  final GrowableDoubleArray gar=new GrowableDoubleArray();
  new ArcScan(){
    protected void visitArc(    CircularArc arc){
      if (gar.size() > 0) {
        gar.setSize(gar.size() - 2);
      }
      arc.linearize(tolerance,gar);
    }
  }
;
  LiteCoordinateSequence cs=new LiteCoordinateSequence(gar.getData());
  return cs;
}
