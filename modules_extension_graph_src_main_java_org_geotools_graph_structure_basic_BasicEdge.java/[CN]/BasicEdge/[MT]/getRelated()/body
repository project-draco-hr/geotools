{
  ArrayList adj=new ArrayList();
  for (Iterator itr=m_nodeA.getEdges().iterator(); itr.hasNext(); ) {
    Edge e=(Edge)itr.next();
switch (e.compareNodes(this)) {
case EQUAL_NODE_ORIENTATION:
      if (e.equals(this))       continue;
case OPPOSITE_NODE_ORIENTATION:
case UNEQUAL_NODE_ORIENTATION:
    adj.add(e);
}
}
for (Iterator itr=m_nodeB.getEdges().iterator(); itr.hasNext(); ) {
Edge e=(Edge)itr.next();
switch (e.compareNodes(this)) {
case EQUAL_NODE_ORIENTATION:
case OPPOSITE_NODE_ORIENTATION:
  continue;
case UNEQUAL_NODE_ORIENTATION:
adj.add(e);
}
}
return (adj.iterator());
}
