{
  if (url_100 == null)   return;
  final SimpleFeatureType ft=wfs.getSchema(TO_EDIT_TYPE);
  final SimpleFeatureSource featureSource=wfs.getFeatureSource(TO_EDIT_TYPE);
  final ReferencedEnvelope bounds=featureSource.getBounds();
  CoordinateReferenceSystem wgs84LonLat=CRS.decode("EPSG:4326",true);
  CoordinateReferenceSystem wgs84LatLon=CRS.decode("EPSG:4326",false);
  assertEquals(AxisOrder.EAST_NORTH,CRS.getAxisOrder(wgs84LonLat));
  assertEquals(AxisOrder.NORTH_EAST,CRS.getAxisOrder(wgs84LatLon));
  ReferencedEnvelope lonLat=bounds.transform(wgs84LonLat,true);
  ReferencedEnvelope latLon=bounds.transform(wgs84LatLon,true);
  String latLonSrsName="urn:x-ogc:def:crs:EPSG:4326";
  String lonLatSrsName="EPSG:4326";
  final BBOX lonLatFilter=FF.bbox("the_geom",lonLat.getMinimum(0),lonLat.getMinimum(1),lonLat.getMaximum(0),lonLat.getMaximum(1),lonLatSrsName);
  final BBOX latLonFiler=FF.bbox("the_geom",latLon.getMinimum(0),latLon.getMinimum(1),latLon.getMaximum(0),latLon.getMaximum(1),latLonSrsName);
  final Query query=new Query(ft.getTypeName());
  query.setPropertyNames(new String[]{"the_geom"});
  query.setFilter(lonLatFilter);
  final int expectedCount=wfs.getFeatureSource(query.getTypeName()).getFeatures().size();
  FeatureReader<SimpleFeatureType,SimpleFeature> reader;
  reader=wfs.getFeatureReader(query,Transaction.AUTO_COMMIT);
  try {
    assertTrue(reader.hasNext());
    int count=0;
    while (reader.hasNext()) {
      reader.next();
      count++;
    }
    assertEquals(expectedCount,count);
  }
  finally {
    reader.close();
  }
  query.setFilter(latLonFiler);
  reader=wfs.getFeatureReader(query,Transaction.AUTO_COMMIT);
  try {
    assertTrue(reader.hasNext());
    int count=0;
    while (reader.hasNext()) {
      reader.next();
      count++;
    }
    assertEquals(expectedCount,count);
  }
  finally {
    reader.close();
  }
}
