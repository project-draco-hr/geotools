{
  StringBuffer temp=new StringBuffer("");
  StringWriter output=FilterToSolr.asStringWriter(extraData);
  Object literal=expression.getValue();
  if (literal instanceof Geometry) {
    if (spatialStrategy == null) {
      throw new IllegalStateException("Attempt to encode geometry literal but spatialStrategy is null");
    }
    Geometry geometry=(Geometry)literal;
    if (!WORLD.contains(geometry.getEnvelopeInternal()) && !WORLD.equals(geometry.getEnvelopeInternal())) {
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.fine("SOLR cannot deal with filters using geometries that span beyond the whole world, clip feature geometry to world");
      }
      geometry=geometry.intersection(JTS.toGeometry(WORLD));
    }
    Envelope env=geometry.getEnvelopeInternal();
    if (env.getWidth() > SOLR_DISTANCE_TOLERANCE) {
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.fine("Split segment exceeds the 180 degree longitude limit to conform to SOLR WKT manager specification");
      }
      Densifier densifier=new Densifier(geometry);
      densifier.setDistanceTolerance(SOLR_DISTANCE_TOLERANCE);
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.fine("Original geometry: " + geometry.toText());
      }
      geometry=densifier.getResultGeometry();
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.fine("Densified geometry: " + geometry.toText());
      }
    }
    temp.append(spatialStrategy.encode(geometry));
  }
 else   if (literal instanceof Number) {
    temp.append(literal.toString());
  }
 else   if (literal instanceof Date) {
    temp.append("\"" + dateFormatUTC.format(literal) + "\"");
  }
 else   if (literal instanceof Period) {
    if (filter instanceof After) {
      Period period=(Period)literal;
      temp.append(dateFormatUTC.format(period.getEnding().getPosition().getDate()));
    }
    if (filter instanceof Before || filter instanceof Begins || filter instanceof BegunBy) {
      Period period=(Period)literal;
      temp.append("\"" + dateFormatUTC.format(period.getBeginning().getPosition().getDate()) + "\"");
    }
    if (filter instanceof Ends || filter instanceof EndedBy) {
      Period period=(Period)literal;
      temp.append("\"" + dateFormatUTC.format(period.getEnding().getPosition().getDate()) + "\"");
    }
    if (filter instanceof During || filter instanceof TContains) {
      Period period=(Period)literal;
      temp.append("\"" + dateFormatUTC.format(period.getBeginning().getPosition().getDate()) + "\"");
      temp.append(" TO ");
      temp.append("\"" + dateFormatUTC.format(period.getEnding().getPosition().getDate()) + "\"");
    }
  }
 else {
    String escaped=FilterToSolr.escapeSpecialCharacters(literal.toString());
    escaped="\"" + escaped + "\"";
    temp.append(escaped);
  }
  output.append(temp);
  return temp;
}
