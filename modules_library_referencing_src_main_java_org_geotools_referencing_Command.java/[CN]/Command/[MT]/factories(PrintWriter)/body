{
  final Set<Citation> done=new HashSet<Citation>();
  final TableWriter table=new TableWriter(out,TableWriter.SINGLE_VERTICAL_LINE);
  final TableWriter notes=new TableWriter(out," ");
  int noteCount=0;
  notes.setMultiLinesCells(true);
  table.setMultiLinesCells(true);
  table.writeHorizontalSeparator();
  table.write(Vocabulary.format(VocabularyKeys.AUTHORITY));
  table.nextColumn();
  table.write(Vocabulary.format(VocabularyKeys.DESCRIPTION));
  table.nextColumn();
  table.write(Vocabulary.format(VocabularyKeys.NOTE));
  table.writeHorizontalSeparator();
  for (  AuthorityFactory factory : ReferencingFactoryFinder.getCRSAuthorityFactories(HINTS)) {
    final Citation authority=factory.getAuthority();
    final Iterator<? extends Identifier> identifiers=authority.getIdentifiers().iterator();
    if (!identifiers.hasNext()) {
      continue;
    }
    if (!done.add(authority)) {
      continue;
    }
    table.write(identifiers.next().getCode());
    table.nextColumn();
    table.write(authority.getTitle().toString().trim());
    if (factory instanceof AbstractAuthorityFactory) {
      String description;
      try {
        description=((AbstractAuthorityFactory)factory).getBackingStoreDescription();
      }
 catch (      FactoryException e) {
        description=e.getLocalizedMessage();
      }
      if (description != null) {
        final String n=String.valueOf(++noteCount);
        table.nextColumn();
        table.write('(');
        table.write(n);
        table.write(')');
        notes.write('(');
        notes.write(n);
        notes.write(')');
        notes.nextColumn();
        notes.write(description.trim());
        notes.nextLine();
      }
    }
    table.nextLine();
  }
  table.writeHorizontalSeparator();
  try {
    table.flush();
    notes.flush();
  }
 catch (  IOException e) {
    throw new AssertionError(e);
  }
}
