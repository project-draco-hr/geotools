{
  for (int pass=0; pass < 10; pass++) {
    final AffineTransform transform=new AffineTransform();
    transform.rotate(Math.PI * random.nextDouble(),100 * random.nextDouble(),100 * random.nextDouble());
    transform.scale(2 * random.nextDouble(),2 * random.nextDouble());
    transform.shear(2 * random.nextDouble(),2 * random.nextDouble());
    transform.translate(100 * random.nextDouble(),100 * random.nextDouble());
    compareTransforms("AffineTransform",new MathTransform[]{new ProjectiveTransform(new GeneralMatrix(transform)),new AffineTransform2D(transform)});
  }
  AffineTransform at=new AffineTransform(23.157082917424454,0.0,3220.1613428464952,0.0,-23.157082917424457,1394.4593259871676);
  MathTransform mt=factory.createAffineTransform(new GeneralMatrix(at));
  final double[] points=new double[]{-129.992589135802,55.9226692948365,-129.987254340541,55.9249676996729,-129.982715772093,55.9308988434656,-129.989772198265,55.9289277997662,-129.992589135802,55.9226692948365};
  final double[] transformedPoints=new double[points.length];
  mt.transform(points,0,transformedPoints,0,points.length / 2);
  at.transform(points,0,points,0,points.length / 2);
  for (int i=0; i < transformedPoints.length; i++) {
    assertEquals(points[i],transformedPoints[i],ACCURACY);
  }
}
