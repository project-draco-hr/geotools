{
  GetRecordsType gr=(GetRecordsType)parser.parse(getClass().getResourceAsStream("GetRecordsFilterSimple.xml"));
  assertEquals("CSW",gr.getService());
  assertEquals("2.0.2",gr.getVersion());
  assertEquals("application/xml",gr.getOutputFormat());
  assertEquals("http://www.opengis.net/cat/csw/2.0.2",gr.getOutputSchema());
  assertEquals(new Integer(1),gr.getStartPosition());
  assertEquals(new Integer(5),gr.getMaxRecords());
  assertEquals(ResultType.RESULTS,gr.getResultType());
  QueryType query=(QueryType)gr.getQuery();
  List<QName> expected=new ArrayList<QName>();
  expected.add(new QName("http://www.opengis.net/cat/csw/2.0.2","Record"));
  assertEquals(expected,query.getTypeNames());
  List<QName> names=query.getElementName();
  assertEquals(2,names.size());
  assertEquals(new QName("http://purl.org/dc/terms/","abstract"),names.get(0));
  assertEquals(new QName("http://purl.org/dc/elements/1.1/","title"),names.get(1));
  QueryConstraintType constraint=query.getConstraint();
  assertEquals("1.1.0",constraint.getVersion());
  Filter filter=CQL.toFilter("AnyText like '%polution%'");
  assertEquals(filter,constraint.getFilter());
}
