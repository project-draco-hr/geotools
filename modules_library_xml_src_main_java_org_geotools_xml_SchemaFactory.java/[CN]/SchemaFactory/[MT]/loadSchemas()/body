{
  schemas=new HashMap();
  ClassLoader[] cls=findLoaders();
  String serviceId="META-INF/services/" + Schema.class.getName();
  for (int i=0; i < cls.length; i++) {
    try {
      Enumeration e=cls[i].getResources(serviceId);
      while (e.hasMoreElements()) {
        URL res=(URL)e.nextElement();
        BufferedReader rd=new BufferedReader(new InputStreamReader(res.openStream(),"UTF-8"));
        while (rd.ready()) {
          String factoryClassName=rd.readLine().trim();
          try {
            Schema s=(Schema)cls[i].loadClass(factoryClassName).getDeclaredMethod("getInstance",new Class[0]).invoke(null,new Object[0]);
            schemas.put(s.getTargetNamespace(),s);
          }
 catch (          IllegalArgumentException e1) {
            XSISAXHandler.logger.warning(e1.toString());
          }
catch (          SecurityException e1) {
            XSISAXHandler.logger.warning(e1.toString());
          }
catch (          IllegalAccessException e1) {
            XSISAXHandler.logger.warning(e1.toString());
          }
catch (          InvocationTargetException e1) {
            XSISAXHandler.logger.warning(e1.toString());
          }
catch (          NoSuchMethodException e1) {
            XSISAXHandler.logger.warning(e1.toString());
          }
catch (          ClassNotFoundException e1) {
            XSISAXHandler.logger.warning(e1.toString());
          }
        }
        rd.close();
      }
    }
 catch (    IOException e) {
      XSISAXHandler.logger.warning(e.toString());
    }
  }
  return schemas;
}
