{
  assertEquals("Decoding double from bytes stream",4.9E-324d,DataUtils.decodeDouble(new byte[]{0,0,0,0,0,0,0,1}),0);
  assertEquals("Decoding double from bytes stream",1.26E-321d,DataUtils.decodeDouble(new byte[]{0,0,0,0,0,0,0,(byte)0xFF}),0);
  assertEquals("Decoding double from bytes stream",3.22526E-319d,DataUtils.decodeDouble(new byte[]{0,0,0,0,0,0,(byte)0xFF,0}),0);
  assertEquals("Decoding double from bytes stream",8.256667E-317d,DataUtils.decodeDouble(new byte[]{0,0,0,0,0,(byte)0xFF,0,0}),0);
  assertEquals("Decoding double from bytes stream",2.113706745E-314d,DataUtils.decodeDouble(new byte[]{0,0,0,0,(byte)0xFF,0,0,0}),0);
  assertEquals("Decoding double from bytes stream",5.41108926696E-312d,DataUtils.decodeDouble(new byte[]{0,0,0,(byte)0xFF,0,0,0,0}),0);
  assertEquals("Decoding double from bytes stream",1.38523885234213E-309d,DataUtils.decodeDouble(new byte[]{0,0,(byte)0xFF,0,0,0,0,0}),0);
  assertEquals("Decoding double from bytes stream",7.06327445644526E-304d,DataUtils.decodeDouble(new byte[]{0,(byte)0xFF,0,0,0,0,0,0}),0);
  assertEquals("Decoding double from bytes stream",-5.4861240687936887E303d,DataUtils.decodeDouble(new byte[]{(byte)0xFF,0,0,0,0,0,0,0}),0);
}
