{
  SortedSet<StorageFile> files=new TreeSet<StorageFile>(Arrays.asList(storageFiles));
  ShpFiles currentShpFiles=null;
  URL shpURL=null;
  StorageFile locker=null;
  try {
    for (    StorageFile storageFile : files) {
      if (currentShpFiles != storageFile.shpFiles) {
        unlock(currentShpFiles,shpURL,locker);
        locker=storageFile;
        currentShpFiles=storageFile.shpFiles;
        shpURL=currentShpFiles.acquireWrite(ShpFileType.SHP,storageFile);
      }
      File storage=storageFile.getFile();
      URL url=storageFile.getSrcURLForWrite();
      try {
        File dest=DataUtilities.urlToFile(url);
        if (storage.equals(dest))         return;
        if (dest.exists()) {
          if (!dest.delete()) {
            LOGGER.severe("Unable to delete the file: " + dest + " when attempting to replace with temporary copy.");
            if (storageFile.shpFiles.numberOfLocks() > 0) {
              LOGGER.severe("The problem is almost certainly caused by the fact that there are still locks being held on the shapefiles.  Probably a reader or writer was left unclosed");
              storageFile.shpFiles.logCurrentLockers(Level.SEVERE);
            }
          }
        }
        if (storage.exists() && !storage.renameTo(dest)) {
          LOGGER.finer("Unable to rename temporary file to the file: " + dest + " when attempting to replace with temporary copy");
          copyFile(storage,url,dest);
          if (!storage.delete()) {
            storage.deleteOnExit();
          }
        }
      }
  finally {
        storageFile.unlockWriteURL(url);
        if (storage.exists()) {
          storage.delete();
        }
      }
    }
  }
  finally {
    unlock(currentShpFiles,shpURL,locker);
  }
}
