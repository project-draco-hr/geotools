{
  RuleBuilder rb=new RuleBuilder();
  rb.line().stroke().color(Color.BLUE).dashArray(10,10);
  rb.line().stroke().dashArray(5,15).dashOffset(7.5).graphicStroke().mark().name("circle").stroke().colorHex("#000033");
  Style style=rb.buildStyle();
  StyleCollector collector=new StyleCollector();
  style.accept(collector);
  assertEquals(1,collector.featureTypeStyles.size());
  assertEquals(1,collector.rules.size());
  assertEquals(2,collector.symbolizers.size());
  LineSymbolizer ls=(LineSymbolizer)collector.symbolizers.get(0);
  assertEquals(1,(int)ls.getStroke().getWidth().evaluate(null,Integer.class));
  assertEquals(Color.BLUE,(Color)ls.getStroke().getColor().evaluate(null,Color.class));
  assertTrue(Arrays.equals(new float[]{10,10},ls.getStroke().getDashArray()));
  ls=(LineSymbolizer)collector.symbolizers.get(1);
  assertTrue(Arrays.equals(new float[]{5,15},ls.getStroke().getDashArray()));
  assertEquals(7.5,ls.getStroke().getDashOffset().evaluate(null,Double.class),0.0);
  Graphic graphic=ls.getStroke().getGraphicStroke();
  List<GraphicalSymbol> symbols=graphic.graphicalSymbols();
  assertEquals(1,symbols.size());
  Mark mark=(Mark)symbols.get(0);
  assertEquals("circle",mark.getWellKnownName().evaluate(null));
  assertEquals("#000033",mark.getStroke().getColor().evaluate(null,String.class));
  assertEquals(1,(int)mark.getStroke().getWidth().evaluate(null,Integer.class));
  assertNull(mark.getFill());
}
