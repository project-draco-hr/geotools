{
  double k=C_p * sin(phi);
  int i=MAX_ITER;
  for (; i > 0; --i) {
    double V=(phi + sin(phi) - k) / (1. + cos(phi));
    phi-=V;
    if (abs(V) < LOOP_TOL)     break;
  }
  if (i == 0) {
    phi=(phi < 0) ? -PI / 2 : PI / 2;
  }
 else {
    phi*=0.5;
  }
  if (ptDst == null) {
    ptDst=new Point2D.Double();
  }
  ptDst.setLocation(C_x * lam * cos(phi),C_y * sin(phi));
  return ptDst;
}
