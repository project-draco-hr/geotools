{
  if ((ordinates == null) || (ordinates.length == 0)) {
    return f.create(new Coordinate[0]);
  }
  final int D=SDO.D(GTYPE);
  final int L=SDO.L(GTYPE);
  final int TT=SDO.TT(GTYPE);
  if ((D == 2) && (L == 0) && (TT == 1)) {
    CoordinateSequence cs=f.create(1,2);
    for (int i=0; i < 2; i++)     cs.setOrdinate(0,i,ordinates[i]);
    return cs;
  }
  final int LEN=D;
  if ((ordinates.length % LEN) != 0) {
    throw new IllegalArgumentException("Dimension D:" + D + " denote Coordinates "+ "of "+ LEN+ " ordinates. This cannot be resolved with"+ "an ordinate array of length "+ ordinates.length);
  }
  if (L != 0 && L > D) {
    throw new IllegalArgumentException("Dimension D:" + D + " and LRS with L: "+ L+ " is not supported at a position > D");
  }
  if (D == 2 && L == 0 && f instanceof LiteCoordinateSequenceFactory) {
    return ((LiteCoordinateSequenceFactory)f).create(ordinates);
  }
  final int LENGTH=ordinates.length / LEN;
  OrdinateList x=new OrdinateList(ordinates,0,LEN);
  OrdinateList y=new OrdinateList(ordinates,1,LEN);
  OrdinateList z=null;
  if (D >= 3 && L != 3) {
    z=new OrdinateList(ordinates,2,LEN);
  }
  if (L != 0) {
    OrdinateList m=new OrdinateList(ordinates,L - 1,LEN);
    return coordiantes(f,x,y,z,m);
  }
 else {
    return coordiantes(f,x,y,z);
  }
}
