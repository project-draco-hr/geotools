{
  System.out.println("Start: Create ProjectedCRS from DefaultGeographicCRS.\n");
  Map props=new HashMap();
  props.put(IdentifiedObject.NAME_KEY,"My arbitrary name");
  CoordinateReferenceSystem geogCRS=org.geotools.referencing.crs.DefaultGeographicCRS.WGS84;
  final String dcName="A Mercator";
  DefaultMathTransformFactory mtf=new DefaultMathTransformFactory();
  ParameterValueGroup pvg=null;
  try {
    pvg=mtf.getDefaultParameters("Mercator_1SP");
  }
 catch (  NoSuchIdentifierException nsiex) {
    System.err.println("On DefaultPrameterGroup creation: " + nsiex.getMessage());
  }
  DefiningConversion dc=new DefiningConversion(dcName,pvg);
  Conversion c=(Conversion)dc;
  Map map=new HashMap();
  CSFactory csFactory=ReferencingFactoryFinder.getCSFactory(null);
  CoordinateSystemAxis xAxis=null;
  CoordinateSystemAxis yAxis=null;
  CartesianCS worldCS=null;
  try {
    map.clear();
    map.put("name","Cartesian X axis");
    xAxis=csFactory.createCoordinateSystemAxis(map,"X",AxisDirection.EAST,SI.METER);
    map.clear();
    map.put("name","Cartesian Y axis");
    yAxis=csFactory.createCoordinateSystemAxis(map,"Y",AxisDirection.NORTH,SI.METER);
    map.clear();
    map.put("name","Cartesian CS");
    worldCS=csFactory.createCartesianCS(map,xAxis,yAxis);
  }
 catch (  FactoryException fex) {
    System.err.println("On cartesianCS creation: " + fex.getMessage());
  }
  ReferencingFactoryContainer fg=ReferencingFactoryContainer.instance(null);
  try {
    CoordinateReferenceSystem projCRS=fg.createProjectedCRS(props,org.geotools.referencing.crs.DefaultGeographicCRS.WGS84,c,worldCS);
  }
 catch (  FactoryException fex) {
    System.err.println("On projectedCRS creation: " + fex.getMessage());
  }
}
