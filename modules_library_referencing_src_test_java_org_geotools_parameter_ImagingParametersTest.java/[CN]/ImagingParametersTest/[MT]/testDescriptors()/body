{
  final String author=Citations.JAI.getTitle().toString();
  final String vendor="com.sun.media.jai";
  final String mode=RenderedRegistryMode.MODE_NAME;
  final RegistryElementDescriptor descriptor;
  final ImagingParameterDescriptors parameters;
  descriptor=JAI.getDefaultInstance().getOperationRegistry().getDescriptor(mode,"AddConst");
  parameters=new ImagingParameterDescriptors(descriptor);
  final GenericName alias=parameters.getAlias().iterator().next();
  assertEquals("Name","AddConst",parameters.getName().getCode());
  assertEquals("Authority",author,parameters.getName().getAuthority().getTitle().toString());
  assertEquals("Vendor",vendor,alias.scope().name().toString());
  assertNotNull("Version",parameters.getName().getVersion());
  assertLocalized("Vendor",alias.scope().name().toInternationalString());
  assertLocalized("Remarks",parameters.getRemarks());
  assertTrue("Remarks",parameters.getRemarks().toString().trim().length() > 0);
  final ParameterDescriptor param=(ParameterDescriptor)parameters.descriptor("constants");
  assertEquals("Name","constants",param.getName().getCode());
  assertEquals("Type",double[].class,param.getValueClass());
  assertEquals("Default",1,((double[])param.getDefaultValue()).length);
  assertNull("Minimum",param.getMinimumValue());
  assertNull("Maximum",param.getMaximumValue());
  assertNull("Valid values",param.getValidValues());
  assertLocalized("Remarks",param.getRemarks());
  assertFalse(parameters.getRemarks().toString().trim().equalsIgnoreCase(param.getRemarks().toString().trim()));
  final ImagingParameters values=(ImagingParameters)parameters.createValue();
  for (int i=0; i < 20; i++) {
    final ParameterValue before=values.parameter("constants");
    if ((i % 5) == 0) {
      values.parameters.setParameter("constants",new double[]{i});
    }
 else {
      values.parameter("constants").setValue(new double[]{i});
    }
    assertTrue(Arrays.equals(values.parameter("constants").doubleValueList(),(double[])values.parameters.getObjectParameter("constants")));
    assertSame(before,values.parameter("constants"));
  }
  assertNotNull(values.toString());
  final ImagingParameters copy=values.clone();
  assertNotSame("clone",values,copy);
  assertNotSame("clone",values.parameters,copy.parameters);
  if (false) {
    assertEquals("clone",values.parameters,copy.parameters);
    assertEquals("clone",values,copy);
  }
}
