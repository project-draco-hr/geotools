{
  Map<PseudoClass,List<Property>> zProperties=new HashMap<>();
  List<Integer> zIndexes=new ArrayList<>();
  for (  Map.Entry<PseudoClass,List<Property>> entry : this.getProperties().entrySet()) {
    List<Property> props=entry.getValue();
    collectZIndexesInProperties(props,zIndexes);
    ListIterator<Integer> it=zIndexes.listIterator();
    while (it.hasNext()) {
      int zIndexPosition=it.nextIndex();
      Integer nextZIndex=it.next();
      if (nextZIndex == NO_Z_INDEX) {
        zProperties.put(entry.getKey(),new ArrayList<>(props));
      }
 else       if (!nextZIndex.equals(zIndex)) {
        continue;
      }
 else {
        List<Property> zIndexProperties=new ArrayList<>();
        for (        Property property : props) {
          if (isZIndex(property)) {
            continue;
          }
          List<Value> values=property.getValues();
          if (zIndexPosition < values.size()) {
            Property p=new Property(property.getName(),Arrays.asList(values.get(zIndexPosition)));
            zIndexProperties.add(p);
          }
 else           if (values.size() == 1) {
            zIndexProperties.add(property);
          }
        }
        if (zIndexProperties.size() > 0) {
          zProperties.put(entry.getKey(),zIndexProperties);
        }
      }
    }
  }
  if (zProperties.size() > 0) {
    if (zIndex != null && zIndexes.contains(zIndex)) {
      List<Property> rootProperties=zProperties.get(PseudoClass.ROOT);
      if (rootProperties == null) {
        rootProperties=new ArrayList<>();
        zProperties.put(PseudoClass.ROOT,rootProperties);
      }
      rootProperties.add(new Property("z-index",Arrays.asList((Value)new Value.Literal(String.valueOf(zIndex)))));
    }
    CssRule zRule=new CssRule(this.getSelector(),zProperties,this.getComment());
    zRule.ancestry=Arrays.asList(this);
    return zRule;
  }
 else {
    return null;
  }
}
