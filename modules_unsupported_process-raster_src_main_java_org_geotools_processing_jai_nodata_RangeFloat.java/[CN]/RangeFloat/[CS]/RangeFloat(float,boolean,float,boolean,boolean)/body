{
  if (Float.isNaN(minValue) && !Float.isNaN(maxValue) || !Float.isNaN(minValue) && Float.isNaN(maxValue)) {
    throw new UnsupportedOperationException("NaN values can only be set inside a single-point Range");
  }
 else   if (minValue < maxValue) {
    this.minValue=minValue;
    this.maxValue=maxValue;
    this.isPoint=false;
    this.isNaN=false;
    this.minIncluded=minIncluded;
    this.maxIncluded=maxIncluded;
    this.intValue=0;
    this.nanIncluded=nanIncluded;
  }
 else   if (minValue > maxValue) {
    this.minValue=maxValue;
    this.maxValue=minValue;
    this.isPoint=false;
    this.isNaN=false;
    this.minIncluded=minIncluded;
    this.maxIncluded=maxIncluded;
    this.intValue=0;
    this.nanIncluded=nanIncluded;
  }
 else {
    this.minValue=minValue;
    this.maxValue=minValue;
    this.isPoint=true;
    this.nanIncluded=false;
    if (Float.isNaN(minValue)) {
      this.isNaN=true;
      this.intValue=Float.floatToIntBits(minValue);
    }
 else {
      this.isNaN=false;
      this.intValue=0;
    }
    if (!minIncluded && !maxIncluded) {
      throw new IllegalArgumentException("Cannot create a single-point range without minimum and maximum " + "bounds included");
    }
 else {
      this.minIncluded=true;
      this.maxIncluded=true;
    }
  }
}
