{
  String input=CSVTestStrategySupport.buildInputString("doubleval,intval,lat,stringval,lon","3.8,7,73.28,foo,-14.39","9.12,-38,0,bar,29","-37,0,49,baz,0");
  CSVFileState fileState=new CSVFileState(input,"typename");
  CSVLatLonStrategy strategy=new CSVLatLonStrategy(fileState);
  CSVIterator iterator=strategy.iterator();
  SimpleFeatureType featureType=strategy.getFeatureType();
  assertEquals("invalid attribute count",4,featureType.getAttributeCount());
  GeometryDescriptor geometryDescriptor=featureType.getGeometryDescriptor();
  String localName=geometryDescriptor.getLocalName();
  assertEquals("Invalid geometry name","location",localName);
  assertEquals("Invalid attribute type","java.lang.Double",getBindingName(featureType,"doubleval"));
  assertEquals("Invalid attribute type","java.lang.Integer",getBindingName(featureType,"intval"));
  assertEquals("Invalid attribute type","java.lang.String",getBindingName(featureType,"stringval"));
  Object[][] expValues=new Object[][]{new Object[]{3.8,7,"foo",73.28,-14.39},new Object[]{9.12,-38,"bar",0,29},new Object[]{-37.0,0,"baz",49,0}};
  Object[] expTypes=new Object[]{Double.class,Integer.class,String.class};
  List<SimpleFeature> features=new ArrayList<SimpleFeature>(3);
  while (iterator.hasNext()) {
    features.add(iterator.next());
  }
  assertEquals("Invalid number of features",3,features.size());
  String[] attrNames=new String[]{"doubleval","intval","stringval"};
  int i=0;
  for (  SimpleFeature feature : features) {
    Object[] expVals=expValues[i];
    for (int j=0; j < 3; j++) {
      String attr=attrNames[j];
      Object value=feature.getAttribute(attr);
      Class<?> type=value.getClass();
      assertEquals("Invalid attribute type",expTypes[j],type);
      assertEquals("Invalid value",expVals[j],value);
    }
    i++;
  }
}
