{
  ArrayList<ArrayList<Point2D>> result=new ArrayList<ArrayList<Point2D>>();
  PathIterator pi=area.getPathIterator(null);
  double startCoords[]=new double[6];
  while (!pi.isDone()) {
    int type=pi.currentSegment(startCoords);
    if (type == PathIterator.SEG_MOVETO) {
      ArrayList<Point2D> points=new ArrayList<Point2D>();
      result.add(points);
      points.add(new Point2D.Double(startCoords[0],startCoords[1]));
      pi.next();
      while (!pi.isDone()) {
        double coords[]=new double[6];
        type=pi.currentSegment(coords);
        if (type == PathIterator.SEG_CLOSE) {
          points.add(new Point2D.Double(startCoords[0],startCoords[1]));
          break;
        }
 else         if (type == PathIterator.SEG_LINETO) {
          points.add(new Point2D.Double(coords[0],coords[1]));
        }
 else         if (type == PathIterator.SEG_QUADTO) {
          points.add(new Point2D.Double(coords[0],coords[1]));
          points.add(new Point2D.Double(coords[2],coords[3]));
        }
 else         if (type == PathIterator.SEG_LINETO) {
          points.add(new Point2D.Double(coords[0],coords[1]));
          points.add(new Point2D.Double(coords[2],coords[3]));
          points.add(new Point2D.Double(coords[4],coords[5]));
        }
 else {
          throw new IllegalArgumentException("Bad PathIterator");
        }
        pi.next();
      }
    }
 else {
      pi.next();
    }
  }
  return result;
}
