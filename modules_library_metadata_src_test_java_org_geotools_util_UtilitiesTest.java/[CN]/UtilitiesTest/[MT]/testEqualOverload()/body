{
  char c1='A', c2='A';
  assertTrue(Utilities.equals(c1,c2));
  byte b1=65, b2=65;
  assertTrue(Utilities.equals(b1,b2));
  short s1=65, s2=65;
  assertTrue(Utilities.equals(s1,s2));
  int i1=65, i2=65;
  assertTrue(Utilities.equals(i1,i2));
  long l1=65, l2=65;
  assertTrue(Utilities.equals(l1,l2));
  float f1=65, f2=65;
  assertTrue(Utilities.equals(f1,f2));
  double d1=65, d2=65;
  assertTrue(Utilities.equals(d1,d2));
  Character C1=c1, C2=new Character(c2);
  assertTrue(Utilities.equals(C1,C2));
  Byte B1=b1, B2=new Byte(b2);
  assertTrue(Utilities.equals(B1,B2));
  Short S1=s1, S2=new Short(s2);
  assertTrue(Utilities.equals(S1,S2));
  Integer I1=i1, I2=new Integer(i2);
  assertTrue(Utilities.equals(I1,I2));
  Long L1=l1, L2=new Long(l2);
  assertTrue(Utilities.equals(L1,L2));
  Float F1=f1, F2=new Float(f2);
  assertTrue(Utilities.equals(F1,F2));
  Double D1=d1, D2=new Double(d2);
  assertTrue(Utilities.equals(D1,D2));
  assertTrue(Utilities.equals(f1,d2));
  assertTrue(Utilities.equals(i1,b2));
  assertTrue(Utilities.equals(f1,b2));
  assertTrue(Utilities.equals(f1,c2));
  assertTrue(Utilities.equals(c1,i2));
  assertTrue(Utilities.equals(c1,s2));
  assertTrue(Utilities.equals(b1,c2));
  assertFalse(Utilities.equals(F1,D2));
  assertFalse(Utilities.equals(I1,B2));
  assertFalse(Utilities.equals(F1,B2));
  assertFalse(Utilities.equals(F1,C2));
  assertFalse(Utilities.equals(C1,I2));
  assertFalse(Utilities.equals(C1,S2));
  assertFalse(Utilities.equals(B1,C2));
}
