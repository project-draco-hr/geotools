{
  Integer sqlType=dataStore.getMapping(binding);
  if (value == null) {
    ps.setNull(column,sqlType);
    return;
  }
switch (sqlType) {
case Types.VARCHAR:
    ps.setString(column,(String)convert(value,String.class));
  break;
case Types.BOOLEAN:
ps.setBoolean(column,(Boolean)convert(value,Boolean.class));
break;
case Types.SMALLINT:
ps.setShort(column,(Short)convert(value,Short.class));
break;
case Types.INTEGER:
ps.setInt(column,(Integer)convert(value,Integer.class));
break;
case Types.BIGINT:
ps.setLong(column,(Long)convert(value,Long.class));
break;
case Types.REAL:
ps.setFloat(column,(Float)convert(value,Float.class));
break;
case Types.DOUBLE:
ps.setDouble(column,(Double)convert(value,Double.class));
break;
case Types.NUMERIC:
ps.setBigDecimal(column,(BigDecimal)convert(value,BigDecimal.class));
break;
case Types.DATE:
ps.setDate(column,(Date)convert(value,Date.class));
break;
case Types.TIME:
ps.setTime(column,(Time)convert(value,Time.class));
break;
case Types.TIMESTAMP:
ps.setTimestamp(column,(Timestamp)convert(value,Timestamp.class));
break;
case Types.BLOB:
ps.setBytes(column,convert(value,byte[].class));
break;
case Types.CLOB:
String string=convert(value,String.class);
ps.setCharacterStream(column,new StringReader(string),string.length());
break;
default :
ps.setObject(column,value);
}
}
