{
  Rational scaleXRational=Rational.approximate(scaleX,RATIONAL_TOLERANCE);
  Rational scaleYRational=Rational.approximate(scaleY,RATIONAL_TOLERANCE);
  long scaleXRationalNum=(long)scaleXRational.num;
  long scaleXRationalDenom=(long)scaleXRational.denom;
  long scaleYRationalNum=(long)scaleYRational.num;
  long scaleYRationalDenom=(long)scaleYRational.denom;
  Rational transXRational=Rational.approximate(transX,RATIONAL_TOLERANCE);
  Rational transYRational=Rational.approximate(transY,RATIONAL_TOLERANCE);
  long transXRationalNum=(long)transXRational.num;
  long transXRationalDenom=(long)transXRational.denom;
  long transYRationalNum=(long)transYRational.num;
  long transYRationalDenom=(long)transYRational.denom;
  int x0=source.getMinX();
  int y0=source.getMinY();
  int w=source.getWidth();
  int h=source.getHeight();
  long dx0Num, dx0Denom, dy0Num, dy0Denom;
  long dx1Num, dx1Denom, dy1Num, dy1Denom;
  dx0Num=x0;
  dx0Denom=1;
  dy0Num=y0;
  dy0Denom=1;
  dx1Num=x0 + w;
  dx1Denom=1;
  dy1Num=y0 + h;
  dy1Denom=1;
  dx0Num*=scaleXRationalNum;
  dx0Denom*=scaleXRationalDenom;
  dy0Num*=scaleYRationalNum;
  dy0Denom*=scaleYRationalDenom;
  dx1Num*=scaleXRationalNum;
  dx1Denom*=scaleXRationalDenom;
  dy1Num*=scaleYRationalNum;
  dy1Denom*=scaleYRationalDenom;
  dx0Num=2 * dx0Num - dx0Denom;
  dx0Denom*=2;
  dy0Num=2 * dy0Num - dy0Denom;
  dy0Denom*=2;
  dx1Num=2 * dx1Num - 3 * dx1Denom;
  dx1Denom*=2;
  dy1Num=2 * dy1Num - 3 * dy1Denom;
  dy1Denom*=2;
  dx0Num=dx0Num * transXRationalDenom + transXRationalNum * dx0Denom;
  dx0Denom*=transXRationalDenom;
  dy0Num=dy0Num * transYRationalDenom + transYRationalNum * dy0Denom;
  dy0Denom*=transYRationalDenom;
  dx1Num=dx1Num * transXRationalDenom + transXRationalNum * dx1Denom;
  dx1Denom*=transXRationalDenom;
  dy1Num=dy1Num * transYRationalDenom + transYRationalNum * dy1Denom;
  dy1Denom*=transYRationalDenom;
  int l_x0, l_y0, l_x1, l_y1;
  l_x0=Rational.ceil(dx0Num,dx0Denom);
  l_y0=Rational.ceil(dy0Num,dy0Denom);
  l_x1=Rational.ceil(dx1Num,dx1Denom);
  l_y1=Rational.ceil(dy1Num,dy1Denom);
  final Rectangle2D retValue=new Rectangle2D.Double();
  retValue.setFrame(l_x0,l_y0,l_x1 - l_x0 + 1,l_y1 - l_y0 + 1);
  return retValue;
}
