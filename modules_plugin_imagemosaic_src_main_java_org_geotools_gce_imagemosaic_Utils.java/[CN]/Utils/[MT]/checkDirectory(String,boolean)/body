{
  File inDir=new File(testingDirectory);
  boolean failure=!inDir.exists() || !inDir.isDirectory() || inDir.isHidden()|| !inDir.canRead();
  if (writable) {
    failure|=!inDir.canWrite();
  }
  if (failure) {
    String message="Unable to create the mosaic\n" + "location is:" + testingDirectory + "\n"+ "location exists:"+ inDir.exists()+ "\n"+ "location is a directory:"+ inDir.isDirectory()+ "\n"+ "location is writable:"+ inDir.canWrite()+ "\n"+ "location is readable:"+ inDir.canRead()+ "\n"+ "location is hidden:"+ inDir.isHidden()+ "\n";
    LOGGER.severe(message);
    throw new IllegalArgumentException(message);
  }
  try {
    testingDirectory=inDir.getCanonicalPath();
  }
 catch (  IOException e) {
    throw new IllegalArgumentException(e);
  }
  testingDirectory=FilenameUtils.normalize(testingDirectory);
  if (!testingDirectory.endsWith(File.separator))   testingDirectory=testingDirectory + File.separator;
  inDir=new File(testingDirectory);
  failure=!inDir.exists() || !inDir.isDirectory() || inDir.isHidden()|| !inDir.canRead();
  if (writable) {
    failure|=!inDir.canWrite();
  }
  if (failure) {
    String message="Unable to create the mosaic\n" + "location is:" + testingDirectory + "\n"+ "location exists:"+ inDir.exists()+ "\n"+ "location is a directory:"+ inDir.isDirectory()+ "\n"+ "location is writable:"+ inDir.canWrite()+ "\n"+ "location is readable:"+ inDir.canRead()+ "\n"+ "location is hidden:"+ inDir.isHidden()+ "\n";
    LOGGER.severe(message);
    throw new IllegalArgumentException(message);
  }
  return testingDirectory;
}
