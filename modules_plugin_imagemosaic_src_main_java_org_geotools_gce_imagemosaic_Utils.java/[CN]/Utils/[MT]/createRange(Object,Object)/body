{
  Class<? extends Object> targetClass=firstValue.getClass();
  Class<? extends Object> target2Class=secondValue.getClass();
  if (targetClass != target2Class) {
    throw new IllegalArgumentException("The 2 values need to belong to the same class:\n" + "firstClass = " + targetClass.toString() + "; secondClass = "+ targetClass.toString());
  }
  if (targetClass == Byte.class) {
    return new Range<Byte>(Byte.class,(Byte)firstValue,(Byte)secondValue);
  }
 else   if (targetClass == Short.class) {
    return new Range<Short>(Short.class,(Short)firstValue,(Short)secondValue);
  }
 else   if (targetClass == Integer.class) {
    return new Range<Integer>(Integer.class,(Integer)firstValue,(Integer)secondValue);
  }
 else   if (targetClass == Long.class) {
    return new Range<Long>(Long.class,(Long)firstValue,(Long)secondValue);
  }
 else   if (targetClass == Float.class) {
    return new Range<Float>(Float.class,(Float)firstValue,(Float)secondValue);
  }
 else   if (targetClass == Double.class) {
    return new Range<Double>(Double.class,(Double)firstValue,(Double)secondValue);
  }
 else   return null;
}
