{
  InputStream inStream=null;
  ObjectInputStream oiStream=null;
  try {
    if (Utils.checkFileReadable(sampleImageFile)) {
      inStream=new BufferedInputStream(new FileInputStream(sampleImageFile));
      oiStream=new ObjectInputStream(inStream);
      return (RenderedImage)oiStream.readObject();
    }
 else {
      if (LOGGER.isLoggable(Level.WARNING))       LOGGER.warning("Unable to find sample image for path " + sampleImageFile);
      return null;
    }
  }
 catch (  FileNotFoundException e) {
    if (LOGGER.isLoggable(Level.WARNING))     LOGGER.log(Level.WARNING,e.getLocalizedMessage(),e);
    return null;
  }
catch (  IOException e) {
    if (LOGGER.isLoggable(Level.WARNING))     LOGGER.log(Level.WARNING,e.getLocalizedMessage(),e);
    return null;
  }
catch (  ClassNotFoundException e) {
    if (LOGGER.isLoggable(Level.WARNING))     LOGGER.log(Level.WARNING,e.getLocalizedMessage(),e);
    return null;
  }
 finally {
    try {
      if (inStream != null)       inStream.close();
    }
 catch (    Throwable e) {
      if (LOGGER.isLoggable(Level.FINE))       LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
    }
    try {
      if (oiStream != null)       oiStream.close();
    }
 catch (    Throwable e) {
      if (LOGGER.isLoggable(Level.FINE))       LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
    }
  }
}
