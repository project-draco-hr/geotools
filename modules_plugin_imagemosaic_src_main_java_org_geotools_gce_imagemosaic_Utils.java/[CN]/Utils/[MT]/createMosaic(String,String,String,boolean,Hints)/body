{
  final CatalogBuilderConfiguration configuration=new CatalogBuilderConfiguration();
  configuration.setAbsolute(absolutePath);
  configuration.setHints(hints);
  configuration.setRootMosaicDirectory(location);
  configuration.setIndexingDirectories(Arrays.asList(location));
  configuration.setIndexName(indexName);
  final CatalogBuilder catalogBuilder=new CatalogBuilder(configuration);
  final Queue<Throwable> exceptions=new LinkedList<Throwable>();
  try {
    final CatalogBuilder.ProcessingEventListener listener=new CatalogBuilder.ProcessingEventListener(){
      @Override public void exceptionOccurred(      ExceptionEvent event){
        final Throwable t=event.getException();
        exceptions.add(t);
        if (LOGGER.isLoggable(Level.SEVERE))         LOGGER.log(Level.SEVERE,t.getLocalizedMessage(),t);
      }
      @Override public void getNotification(      ProcessingEvent event){
        if (LOGGER.isLoggable(Level.FINE))         LOGGER.fine(event.getMessage());
      }
    }
;
    catalogBuilder.addProcessingEventListener(listener);
    catalogBuilder.run();
  }
 catch (  Throwable e) {
    LOGGER.log(Level.SEVERE,"Unable to build mosaic",e);
    return false;
  }
 finally {
    catalogBuilder.dispose();
  }
  if (exceptions.size() > 0)   return false;
  return true;
}
