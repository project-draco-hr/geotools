{
  GeoTiffReader reader=null;
  FeatureIterator<SimpleFeature> iter=null;
  GridCoverage2D cov=null;
  try {
    reader=new GeoTiffReader(cloudFile);
    cov=reader.read(null);
    SimpleFeatureCollection fc=process.execute(cov,null,10d,false,null,true,true,null,null);
    assertEquals(1,fc.size());
    iter=fc.features();
    SimpleFeature feature=iter.next();
    Geometry geometry=(Geometry)feature.getDefaultGeometry();
    assertTrue(referenceGeometry.equalsExact(geometry,TOLERANCE));
    final File wktFile=TestData.temp(this,"cloudWkt.wkt");
    final File wkbFile=TestData.temp(this,"cloudWkb.wkb");
    final File shapeFile=TestData.temp(this,"cloudShape.shp");
    CoordinateReferenceSystem crs=reader.getCoordinateReferenceSystem();
    writeGeometry(WritingFormat.WKT,geometry,wktFile,crs);
    writeGeometry(WritingFormat.WKB,geometry,wkbFile,crs);
    writeGeometry(WritingFormat.SHAPEFILE,geometry,shapeFile,crs);
    assertTrue(referenceGeometry.equalsExact(wktRead(wktFile),TOLERANCE));
    assertTrue(referenceGeometry.equalsExact(wkbRead(wkbFile),TOLERANCE));
  }
  finally {
    if (iter != null) {
      iter.close();
    }
    if (reader != null) {
      try {
        reader.dispose();
      }
 catch (      Throwable t) {
      }
    }
    if (cov != null) {
      try {
        cov.dispose(true);
      }
 catch (      Throwable t) {
      }
    }
  }
}
