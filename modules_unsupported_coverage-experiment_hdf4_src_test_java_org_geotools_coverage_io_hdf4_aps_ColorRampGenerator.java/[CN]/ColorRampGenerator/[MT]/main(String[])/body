{
  double min=0.0001;
  double max=32;
  final boolean useLogarithm=false;
  final double logMin=Math.log10(min);
  final double logMax=Math.log10(max);
  int intervals=250;
  String colorRampType="hot-color-ramp";
  double res=(max - min) / intervals;
  final double logRes=(logMax - logMin) / intervals;
  final double base10=10;
  final double base10Res=Math.pow(base10,logRes);
  final double usedRes=useLogarithm ? base10Res : res;
  System.out.println("<ColorMapEntry color=\"#000000\" quantity=\"" + (min - usedRes) + "\" opacity=\"0.0\"/>");
  for (int c=0; c <= intervals; c++) {
    double[] color=getColour(colorRampType,min + (c * res),min,max);
    final double step=c != 0 ? Math.pow(base10,logMin + c * logRes) : 0;
    final double usedStep=useLogarithm ? step : c * res;
    String r=Integer.toHexString((int)Math.round(255.0 * color[0]));
    String g=Integer.toHexString((int)Math.round(255.0 * color[1]));
    String b=Integer.toHexString((int)Math.round(255.0 * color[2]));
    String hexColor=(r.length() == 2 ? r : "0" + r) + (g.length() == 2 ? g : "0" + g) + (b.length() == 2 ? b : "0" + b);
    System.out.println("<ColorMapEntry color=\"#" + hexColor + "\" quantity=\""+ (min + usedStep)+ "\"/>");
  }
  System.out.println("<ColorMapEntry color=\"#000000\" quantity=\"" + (max + usedRes) + "\" opacity=\"0.0\"/>");
}
