{
  String targetNamespace1=atts.getValue("","targetNamespace");
  if (targetNamespace1 == null) {
    targetNamespace1=atts.getValue(namespaceURI1,"targetNamespace");
  }
  try {
    this.targetNamespace=new URI(targetNamespace1);
  }
 catch (  URISyntaxException e) {
    logger.warning(e.toString());
    throw new SAXException(e);
  }
  if ((prefixCache != null) && (targetNamespace1 != null) && (!targetNamespace1.equals(""))) {
    Iterator i=prefixCache.keySet().iterator();
    while ((i != null) && i.hasNext()) {
      String uriT=(String)i.next();
      if (targetNamespace1.equals(uriT)) {
        prefix=(String)prefixCache.get(uriT);
        i=null;
      }
    }
  }
  String attributeFormDefault1=atts.getValue("","attributeFormDefault");
  if (attributeFormDefault1 == null) {
    attributeFormDefault1=atts.getValue(namespaceURI1,"attributeFormDefault");
  }
  this.attributeFormDefault="qualified".equalsIgnoreCase(attributeFormDefault1);
  String blockDefault1=atts.getValue("","blockDefault");
  if (blockDefault1 == null) {
    blockDefault1=atts.getValue(namespaceURI1,"blockDefault");
  }
  this.blockDefault=ComplexTypeHandler.findBlock(blockDefault1);
  String elementFormDefault1=atts.getValue("","elementFormDefault");
  if (elementFormDefault1 == null) {
    elementFormDefault1=atts.getValue(namespaceURI1,"elementFormDefault");
  }
  this.elementFormDefault="qualified".equalsIgnoreCase(elementFormDefault1);
  String finalDefault1=atts.getValue("","finalDefault");
  if (finalDefault1 == null) {
    finalDefault1=atts.getValue(namespaceURI1,"finalDefault");
  }
  this.finalDefault=SimpleTypeHandler.findFinal(finalDefault1);
  id=atts.getValue("","id");
  if (id == null) {
    id=atts.getValue(namespaceURI1,"id");
  }
  version=atts.getValue("","version");
  if (version == null) {
    version=atts.getValue(namespaceURI1,"version");
  }
}
