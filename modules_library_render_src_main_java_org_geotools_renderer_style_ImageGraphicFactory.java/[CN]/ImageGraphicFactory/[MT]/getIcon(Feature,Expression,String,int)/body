{
  if (!supportedGraphicFormats.contains(format.toLowerCase()))   return null;
  URL location=url.evaluate(feature,URL.class);
  if (location == null)   throw new IllegalArgumentException("The provided expression cannot be evaluated to a URL");
  BufferedImage image=imageCache.get(location);
  if (image == null) {
    try {
      image=ImageIO.read(location);
    }
 catch (    java.io.IOException ioe) {
      LOGGER.warning("Unable to read image at " + location + " : "+ ioe.getMessage());
      return null;
    }
    imageCache.put(location,image);
  }
  if (size > 0 && image.getHeight() != size) {
    double dsize=(double)size;
    double scaleY=dsize / image.getHeight();
    double scaleX=scaleY;
    AffineTransform scaleTx=AffineTransform.getScaleInstance(scaleX,scaleY);
    AffineTransformOp ato=new AffineTransformOp(scaleTx,AffineTransformOp.TYPE_BILINEAR);
    image=ato.filter(image,null);
  }
  return new ImageIcon(image);
}
