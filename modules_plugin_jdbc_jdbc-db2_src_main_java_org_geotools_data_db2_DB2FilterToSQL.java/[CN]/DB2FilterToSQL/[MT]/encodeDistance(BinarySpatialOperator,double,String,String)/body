{
  DefaultExpression left=(DefaultExpression)filter.getExpression1();
  DefaultExpression right=(DefaultExpression)filter.getExpression2();
  try {
    int leftType=left.getType();
    int rightType=right.getType();
    if ((DefaultExpression.ATTRIBUTE == leftType) && (DefaultExpression.LITERAL_GEOMETRY == rightType)) {
      this.out.write("db2gse.ST_Distance(");
      left.accept(this,null);
      this.out.write(", ");
      right.accept(this,Geometry.class);
      if (!(distanceUnits == null || distanceUnits.length() == 0)) {
        this.out.write(", \"" + distanceUnits + "\"");
      }
      this.out.write(") " + op + " "+ distance);
      addSelectivity();
    }
 else {
      String msg="Unsupported left and right types: " + leftType + ":"+ rightType;
      LOGGER.warning(msg);
      throw new RuntimeException(msg);
    }
  }
 catch (  java.io.IOException e) {
    LOGGER.warning("Filter not generated; I/O problem of some sort" + e);
  }
}
