{
  boolean canDecode=false;
  File input=null;
  if (source instanceof FileImageInputStreamExtImpl) {
    input=((FileImageInputStreamExtImpl)source).getFile();
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.fine("Found a valid FileImageInputStream");
  }
  if (source instanceof File) {
    input=(File)source;
  }
  if (source instanceof URIImageInputStream) {
    URIImageInputStream uriInStream=(URIImageInputStream)source;
    try {
      NetcdfDataset openDataset=NetcdfDataset.acquireDataset(uriInStream.getUri().toString(),null);
      openDataset.close();
      return true;
    }
 catch (    IOException e) {
      return false;
    }
  }
  if (input != null) {
    try {
      byte[] b=new byte[GRIB_SEARCH_BYTES];
      int count=0;
      try (FileInputStream fis=new FileInputStream(input)){
        count=fis.read(b);
      }
       if (count < 3) {
        return false;
      }
      boolean cdfCheck=(b[0] == (byte)0x43 && b[1] == (byte)0x44 && b[2] == (byte)0x46);
      boolean hdf5Check=(b[0] == (byte)0x89 && b[1] == (byte)0x48 && b[2] == (byte)0x44);
      boolean gribCheck=false;
      for (int i=0; i < count - 3; i++) {
        if (b[i] == (byte)0x47 && b[i + 1] == (byte)0x52 && b[i + 2] == (byte)0x49 && b[i + 3] == (byte)0x42) {
          gribCheck=true;
          break;
        }
      }
      gribCheck&=NetCDFUtilities.isGribAvailable();
      boolean isNetCDF=true;
      if (!cdfCheck && !hdf5Check && !gribCheck) {
        if (!isNcML(input)) {
          isNetCDF=false;
        }
      }
      if (!isNetCDF) {
        return false;
      }
      try (NetcdfFile file=NetcdfDataset.acquireDataset(DataUtilities.fileToURL(input).toString(),null)){
        if (file != null) {
          if (LOGGER.isLoggable(Level.FINE))           LOGGER.fine("File successfully opened");
          canDecode=true;
        }
      }
     }
 catch (    IOException ioe) {
      canDecode=false;
    }
  }
  return canDecode;
}
