{
  LockingManager lockingManager=getDataStore().getLockingManager();
  if (lockingManager == null) {
    throw new UnsupportedOperationException("DataStore not using lockingManager, must provide alternate implementation");
  }
  String typeName=getSchema().getTypeName();
  if ((query.getTypeName() != null) && !typeName.equals(query.getTypeName())) {
    throw new IOException("Query typeName does not match " + getSchema().getTypeName() + ":"+ query);
  }
  Query optimizedQuery=new DefaultQuery(typeName,query.getFilter(),query.getMaxFeatures(),Query.NO_NAMES,query.getHandle());
  SimpleFeatureIterator reader=getFeatures(query).features();
  SimpleFeature feature;
  int count=0;
  LOGGER.info("got reader from query " + optimizedQuery + ", reader has next "+ reader.hasNext());
  try {
    while (reader.hasNext()) {
      try {
        feature=(SimpleFeature)reader.next();
        lockingManager.lockFeatureID(typeName,feature.getID(),transaction,featureLock);
        count++;
        LOGGER.info("locked feature " + feature);
      }
 catch (      FeatureLockException locked) {
        LOGGER.info("feature lock exception");
      }
catch (      NoSuchElementException nosuch) {
        throw new DataSourceException("Problem with " + query.getHandle() + " while locking",nosuch);
      }
    }
  }
  finally {
    reader.close();
  }
  return count;
}
