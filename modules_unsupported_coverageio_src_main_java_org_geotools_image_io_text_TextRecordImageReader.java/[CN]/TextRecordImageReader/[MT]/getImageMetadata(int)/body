{
  checkImageIndex(imageIndex);
  if (ignoreMetadata) {
    return null;
  }
  final GeographicMetadata metadata=new GeographicMetadata(this);
  final ImageGeometry geometry=metadata.getGeometry();
  final float tolerance=getGridTolerance();
  final RecordList records=getRecords(imageIndex);
  final int xColumn=getCheckedColumnX(imageIndex);
  final int yColumn=getCheckedColumnY(imageIndex);
  final int width=records.getPointCount(xColumn,tolerance);
  final int height=records.getPointCount(yColumn,tolerance);
  final double xmin=records.getMinimum(xColumn);
  final double ymin=records.getMinimum(yColumn);
  final double xmax=records.getMaximum(xColumn);
  final double ymax=records.getMaximum(yColumn);
  geometry.setOrdinateRange(0,xmin,xmax);
  geometry.setGridRange(0,0,width - 1);
  geometry.setOrdinateRange(1,ymin,ymax);
  geometry.setGridRange(1,0,height - 1);
  geometry.setPixelOrientation("center");
  final int numBands=records.getColumnCount() - (xColumn == yColumn ? 1 : 2);
  for (int band=0; band < numBands; band++) {
    final int column=getColumn(imageIndex,band);
    metadata.getBand(band).setValidRange(records.getMinimum(column),records.getMaximum(column));
  }
  return metadata;
}
