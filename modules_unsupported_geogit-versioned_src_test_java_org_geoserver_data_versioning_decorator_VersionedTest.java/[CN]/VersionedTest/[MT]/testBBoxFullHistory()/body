{
  SimpleFeatureIterator feats=null;
  try {
    updateTestFeatures();
    List<SimpleFeature> featList=new ArrayList<SimpleFeature>(4);
    featList.add(test1);
    featList.add(test3);
    featList.add(test1b);
    featList.add(test3b);
    SimpleFeatureSource source=versioned.getFeatureSource(testName);
    assertNotNull(source);
    FilterFactory2 ff=new FilterFactoryImpl();
    Filter filter=ff.bbox("ln",-1.5,-1.5,1.5,1.5,"srid=4326");
    Query query=new Query(testName,filter);
    query.setVersion("ALL");
    SimpleFeatureCollection collection=source.getFeatures(query);
    assertNotNull(collection);
    assertEquals(featList.size(),collection.size());
    feats=collection.features();
    assertNotNull(feats);
    while (feats.hasNext()) {
      SimpleFeature feat=feats.next();
      assertNotNull(feat);
      LOGGER.info(feat.toString());
      assertTrue(feat.toString() + " is expected.",containsFeature(feat,featList));
    }
  }
  finally {
    if (feats != null)     feats.close();
  }
}
