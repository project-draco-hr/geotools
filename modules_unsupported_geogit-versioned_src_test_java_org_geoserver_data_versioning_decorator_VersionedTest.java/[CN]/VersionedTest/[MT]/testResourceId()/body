{
  SimpleFeatureIterator feats=null;
  List<SimpleFeature> featList=new ArrayList<SimpleFeature>(1);
  featList.add(sample1);
  try {
    SimpleFeatureSource source=versioned.getFeatureSource(sampleName);
    assertNotNull(source);
    FilterFactory2 ff=new FilterFactoryImpl();
    Filter filter=ff.id(ff.resourceId(idS1,sampleFid1.getFeatureVersion(),null));
    Query query=new Query(sampleName,filter);
    SimpleFeatureCollection collection=source.getFeatures(query);
    assertNotNull(collection);
    assertEquals(featList.size(),collection.size());
    feats=collection.features();
    assertNotNull(feats);
    while (feats.hasNext()) {
      SimpleFeature feat=feats.next();
      assertNotNull(feat);
      LOGGER.info(feat.toString());
      assertTrue(feat.toString() + " is expected.",containsFeature(feat,featList));
    }
  }
  finally {
    if (feats != null)     feats.close();
  }
}
