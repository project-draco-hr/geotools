{
  GeneralEnvelope requestedEnvelope=null;
  Rectangle dim=null;
  OverviewPolicy overviewPolicy=null;
  if (params != null) {
    if (params != null) {
      for (int i=0; i < params.length; i++) {
        final ParameterValue param=(ParameterValue)params[i];
        final String name=param.getDescriptor().getName().getCode();
        if (name.equals(AbstractGridFormat.READ_GRIDGEOMETRY2D.getName().toString())) {
          final GridGeometry2D gg=(GridGeometry2D)param.getValue();
          requestedEnvelope=new GeneralEnvelope((Envelope)gg.getEnvelope2D());
          dim=gg.getGridRange2D().getBounds();
          continue;
        }
        if (name.equals(AbstractGridFormat.OVERVIEW_POLICY.getName().toString())) {
          overviewPolicy=(OverviewPolicy)param.getValue();
          continue;
        }
      }
    }
  }
  Integer imageChoice=new Integer(0);
  final ImageReadParam readP=new ImageReadParam();
  if (!wmsRequest) {
    try {
      imageChoice=setReadParams(overviewPolicy,readP,requestedEnvelope,dim);
    }
 catch (    TransformException e) {
      new DataSourceException(e);
    }
  }
  final Hints newHints=hints.clone();
  final ParameterBlock pbjRead=new ParameterBlock();
  pbjRead.add(inStreamSPI != null ? inStreamSPI.createInputStreamInstance(source,ImageIO.getUseCache(),ImageIO.getCacheDirectory()) : ImageIO.createImageInputStream(source));
  pbjRead.add(imageChoice);
  pbjRead.add(Boolean.FALSE);
  pbjRead.add(Boolean.FALSE);
  pbjRead.add(Boolean.FALSE);
  pbjRead.add(null);
  pbjRead.add(null);
  pbjRead.add(readP);
  pbjRead.add(readerSPI.createReaderInstance());
  final RenderedOp coverageRaster=JAI.create("ImageRead",pbjRead,newHints);
  AffineTransform rasterToModel=getRescaledRasterToModel(coverageRaster);
  return createImageCoverage(coverageRaster,ProjectiveTransform.create(rasterToModel));
}
