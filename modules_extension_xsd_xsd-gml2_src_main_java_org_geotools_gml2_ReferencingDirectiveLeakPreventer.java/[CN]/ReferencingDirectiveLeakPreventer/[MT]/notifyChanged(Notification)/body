{
  int featureId=notification.getFeatureID(target.getClass());
  if (featureId != XSDPackage.XSD_SCHEMA__REFERENCING_DIRECTIVES) {
    return;
  }
  if (notification.getEventType() != Notification.ADD) {
    return;
  }
  if (!(notification.getNewValue() instanceof XSDSchemaDirective)) {
    return;
  }
  XSDSchemaDirective newDirective=(XSDSchemaDirective)notification.getNewValue();
  XSDSchema schema=newDirective.getSchema();
synchronized (target) {
    ArrayList<Integer> toremove=new ArrayList();
    for (int i=0; i < target.getReferencingDirectives().size(); i++) {
      XSDSchemaDirective directive=(XSDSchemaDirective)target.getReferencingDirectives().get(i);
      XSDSchema schema2=directive.getSchema();
      if (schema2 == null) {
        toremove.add(i);
        continue;
      }
      String ns1=schema != null ? schema.getTargetNamespace() : null;
      String ns2=schema2.getTargetNamespace();
      if (Utilities.equals(ns1,ns2)) {
        toremove.add(i);
      }
    }
    for (int i=toremove.size() - 2; i > -1; i--) {
      target.getReferencingDirectives().remove(toremove.get(i).intValue());
    }
  }
}
