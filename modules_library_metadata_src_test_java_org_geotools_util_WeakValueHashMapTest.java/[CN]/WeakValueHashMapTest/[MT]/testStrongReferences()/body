{
  final Random random=new Random();
  for (int pass=0; pass < 4; pass++) {
    final WeakValueHashMap<Integer,Integer> weakMap=new WeakValueHashMap<Integer,Integer>();
    final HashMap<Integer,Integer> strongMap=new HashMap<Integer,Integer>();
    for (int i=0; i < SAMPLE_SIZE; i++) {
      final Integer key=random.nextInt(SAMPLE_SIZE);
      final Integer value=random.nextInt(SAMPLE_SIZE);
      assertEquals("containsKey:",strongMap.containsKey(key),weakMap.containsKey(key));
      if (false) {
        assertEquals("containsValue:",strongMap.containsValue(value),weakMap.containsValue(value));
      }
      assertSame("get:",strongMap.get(key),weakMap.get(key));
      if (random.nextBoolean()) {
        assertSame("put:",strongMap.put(key,value),weakMap.put(key,value));
      }
 else {
        assertSame("remove:",strongMap.remove(key),weakMap.remove(key));
      }
      assertEquals("equals:",strongMap,weakMap);
    }
  }
}
