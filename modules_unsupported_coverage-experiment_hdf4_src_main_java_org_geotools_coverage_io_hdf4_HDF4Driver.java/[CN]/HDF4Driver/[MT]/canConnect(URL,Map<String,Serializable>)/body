{
  if (url == null) {
    return false;
  }
  ImageInputStream inputStream=null;
  Object source=null;
  try {
    if (url.getProtocol().equalsIgnoreCase("file")) {
      File file=new File(URLDecoder.decode(url.getFile(),"UTF-8"));
      if (file.exists()) {
        if (!file.canRead() || !file.isFile())         return false;
        source=file;
      }
 else       return false;
    }
    inputStream=(ImageInputStream)((source instanceof ImageInputStream) ? source : new FileImageInputStreamExtImpl((File)source));
    if (inputStream == null) {
      if (LOGGER.isLoggable(Level.FINE))       LOGGER.fine("Unable to get an ImageInputStream");
      return false;
    }
    inputStream.mark();
    if (!spi.canDecodeInput(inputStream))     return false;
    return true;
  }
 catch (  Throwable e) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
    return false;
  }
 finally {
    if (inputStream != null) {
      try {
        inputStream.close();
      }
 catch (      Exception e) {
      }
    }
    if (source != null && (source instanceof InputStream)) {
      try {
        ((InputStream)source).close();
      }
 catch (      Exception e) {
        if (LOGGER.isLoggable(Level.FINE))         LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
      }
    }
  }
}
