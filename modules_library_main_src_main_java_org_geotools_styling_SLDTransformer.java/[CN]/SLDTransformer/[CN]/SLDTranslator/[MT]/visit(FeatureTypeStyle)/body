{
  start("FeatureTypeStyle");
  if ((fts.getName() != null) && (fts.getName().length() > 0)) {
    element("Name",fts.getName());
  }
  if ((fts.getTitle() != null) && (fts.getTitle().length() > 0)) {
    element("Title",fts.getTitle());
  }
  if ((fts.getAbstract() != null) && (fts.getAbstract().length() > 0)) {
    element("Abstract",fts.getAbstract());
  }
  if ((fts.featureTypeNames() != null) && (fts.featureTypeNames().size() > 0)) {
    element("FeatureTypeName",fts.featureTypeNames().iterator().next().toString());
  }
  String[] sti=fts.getSemanticTypeIdentifiers();
  if (sti.length == 1 && sti[0].equals(SemanticType.ANY.toString())) {
  }
 else {
    for (int i=0; i < sti.length; i++) {
      element("SemanticTypeIdentifier",sti[i]);
    }
  }
  Rule[] rules=fts.getRules();
  for (int i=0; i < rules.length; i++) {
    rules[i].accept(this);
  }
  end("FeatureTypeStyle");
}
