{
  String xml="<wfs:GetFeature count='100'" + "   service='WFS' " + "   version='2.0.0' "+ "   xmlns:wfs='http://www.opengis.net/wfs/2.0' "+ "   xmlns:fes='http://www.opengis.net/fes/2.0' "+ "   xmlns:myns='http://www.someserver.com/myns' "+ "   xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' "+ "   xsi:schemaLocation='http://www.opengis.net/wfs/2.0 "+ "                       http://schemas.opengis.net/wfs/2.0/wfs.xsd'> "+ "   <wfs:Query typeNames='myns:InWaterA_1M'> "+ "      <wfs:PropertyName>myns:wkbGeom</wfs:PropertyName> "+ "      <wfs:PropertyName>myns:tileId</wfs:PropertyName> "+ "      <wfs:PropertyName>myns:facId</wfs:PropertyName> "+ "      <fes:Filter> "+ "         <fes:ResourceId rid='InWaterA_1M.1013'/> "+ " "+ "      </fes:Filter> "+ "   </wfs:Query> "+ "</wfs:GetFeature> ";
  buildDocument(xml);
  GetFeatureType gf=(GetFeatureType)parse();
  assertNotNull(gf);
  assertEquals(BigInteger.valueOf(100),gf.getCount());
  assertEquals(1,gf.getAbstractQueryExpression().size());
  QueryType q=(QueryType)gf.getAbstractQueryExpression().get(0);
  assertNotNull(q);
  assertNotNull(q.getFilter());
  assertEquals(3,q.getPropertyNames().size());
  assertEquals(new QName("http://www.someserver.com/myns","wkbGeom"),q.getPropertyNames().get(0));
  assertEquals(new QName("http://www.someserver.com/myns","tileId"),q.getPropertyNames().get(1));
  assertEquals(new QName("http://www.someserver.com/myns","facId"),q.getPropertyNames().get(2));
}
