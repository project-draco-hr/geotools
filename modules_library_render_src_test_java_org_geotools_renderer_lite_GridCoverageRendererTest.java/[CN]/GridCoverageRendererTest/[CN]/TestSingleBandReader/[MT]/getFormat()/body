{
  return new AbstractGridFormat(){
    @Override public GridCoverageWriter getWriter(    Object destination,    Hints hints){
      throw new UnsupportedOperationException();
    }
    @Override public GridCoverageWriter getWriter(    Object destination){
      throw new UnsupportedOperationException();
    }
    @Override public AbstractGridCoverage2DReader getReader(    Object source,    Hints hints){
      throw new UnsupportedOperationException();
    }
    @Override public AbstractGridCoverage2DReader getReader(    Object source){
      throw new UnsupportedOperationException();
    }
    @Override public GeoToolsWriteParams getDefaultImageIOWriteParameters(){
      return null;
    }
    @Override public boolean accepts(    Object source,    Hints hints){
      throw new UnsupportedOperationException();
    }
    @Override public ParameterValueGroup getReadParameters(){
      HashMap<String,String> info=new HashMap<String,String>();
      info.put("name","bandTester");
      info.put("description","desc");
      info.put("vendor","vendor");
      info.put("docURL","http://www.geotools.org");
      info.put("version","1.0");
      List<GeneralParameterDescriptor> params=new ArrayList<GeneralParameterDescriptor>();
      params.add(AbstractGridFormat.BANDS);
      return new ParameterGroup(new DefaultParameterDescriptorGroup(info,params.toArray(new GeneralParameterDescriptor[params.size()])));
    }
  }
;
}
