{
  List<Object> values=new ArrayList<Object>();
  if (startIndex > fullSteps.size() || endIndex > fullSteps.size()) {
    return values;
  }
  while (startIndex <= endIndex) {
    List<AttributeMapping> attMappings=new ArrayList<AttributeMapping>();
    StepList steps=null;
    if (isLastStep(endIndex)) {
      return values;
    }
    while (attMappings.isEmpty() && endIndex < fullSteps.size()) {
      endIndex++;
      steps=fullSteps.subList(startIndex,endIndex);
      attMappings=fMapping.getAttributeMappingsIgnoreIndex(steps);
      if (steps.size() == 1) {
        if (Types.equals(fMapping.getTargetFeature().getName(),steps.get(0).getName()) && !(Types.isSimpleContentType(fMapping.getTargetFeature().getType()))) {
          startIndex++;
          endIndex=startIndex;
          steps=fullSteps.subList(startIndex,endIndex);
          attMappings=fMapping.getAttributeMappingsIgnoreIndex(steps);
          continue;
        }
 else         if (attMappings.isEmpty() && steps.get(0).isId()) {
          setIdValues(null,roots,values);
          return values;
        }
      }
    }
    if (attMappings.isEmpty()) {
      continue;
    }
    for (    AttributeMapping mapping : attMappings) {
      if (mapping instanceof NestedAttributeMapping) {
        if (isClientProperty(endIndex)) {
          boolean isNestedXlinkHref=isXlinkHref(mapping);
          boolean valueFound=false;
          if (!isNestedXlinkHref) {
            valueFound=getClientProperties(mapping,values,roots);
          }
          if (!valueFound) {
            getNestedClientProperties((NestedAttributeMapping)mapping,roots,values,isNestedXlinkHref);
          }
        }
 else {
          boolean isSimpleContent=Types.isSimpleContent(steps,fMapping.getTargetFeature().getType());
          getNestedValues((NestedAttributeMapping)mapping,roots,values,isSimpleContent ? startIndex : startIndex + 1);
        }
      }
 else {
        if (endIndex == fullSteps.size()) {
          Expression exp=mapping.getSourceExpression();
          for (          Feature f : roots) {
            Object value=getValue(exp,f);
            if (value != null) {
              values.add(value);
            }
          }
        }
 else         if (isClientProperty(endIndex)) {
          if (getLastStep().isId()) {
            setIdValues(mapping,roots,values);
          }
 else {
            getClientProperties(mapping,values,roots);
          }
        }
 else {
          List<Object> nestedValues=getValues(startIndex,endIndex,roots,fMapping,mapping);
          if (nestedValues != null) {
            values.addAll(nestedValues);
          }
        }
      }
    }
    return values;
  }
  return values;
}
