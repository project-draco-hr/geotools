{
  FeatureTypeMapping nextFMapping=null;
  for (  Feature f : features) {
    try {
      nextFMapping=mapping.getFeatureTypeMapping(f);
      if (nextFMapping != null) {
        List<Feature> nestedFeatures;
        nestedFeatures=getNestedFeatures(f,mapping,nextFMapping);
        if (nestedFeatures == null || nestedFeatures.isEmpty()) {
          continue;
        }
        if (isXlinkHref) {
          getClientProperties(mapping,values,nestedFeatures);
        }
 else {
          List<AttributeMapping> nestedAttMappings=nextFMapping.getAttributeMappingsIgnoreIndex(mapping.getTargetXPath());
          AttributeMapping attMapping=null;
          boolean found=false;
          if (!nestedAttMappings.isEmpty()) {
            attMapping=nestedAttMappings.get(0);
            found=getClientProperties(attMapping,values,nestedFeatures);
          }
          if (!found && getLastStep().isId()) {
            setIdValues(attMapping,nestedFeatures,values);
          }
        }
      }
    }
 catch (    IOException e) {
      throw new RuntimeException("Failed evaluating filter expression: '" + attPath + "'. Caused by: "+ e.getMessage());
    }
catch (    IllegalArgumentException e) {
      continue;
    }
  }
}
