{
switch (classifierID) {
case Wfs20Package.ABSTRACT_TRANSACTION_ACTION_TYPE:
{
      AbstractTransactionActionType abstractTransactionActionType=(AbstractTransactionActionType)theEObject;
      T result=caseAbstractTransactionActionType(abstractTransactionActionType);
      if (result == null)       result=defaultCase(theEObject);
      return result;
    }
case Wfs20Package.ABSTRACT_TYPE:
{
    AbstractType abstractType=(AbstractType)theEObject;
    T result=caseAbstractType(abstractType);
    if (result == null)     result=defaultCase(theEObject);
    return result;
  }
case Wfs20Package.ACTION_RESULTS_TYPE:
{
  ActionResultsType actionResultsType=(ActionResultsType)theEObject;
  T result=caseActionResultsType(actionResultsType);
  if (result == null)   result=defaultCase(theEObject);
  return result;
}
case Wfs20Package.ADDITIONAL_OBJECTS_TYPE:
{
AdditionalObjectsType additionalObjectsType=(AdditionalObjectsType)theEObject;
T result=caseAdditionalObjectsType(additionalObjectsType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.ADDITIONAL_VALUES_TYPE:
{
AdditionalValuesType additionalValuesType=(AdditionalValuesType)theEObject;
T result=caseAdditionalValuesType(additionalValuesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.BASE_REQUEST_TYPE:
{
BaseRequestType baseRequestType=(BaseRequestType)theEObject;
T result=caseBaseRequestType(baseRequestType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.CREATED_OR_MODIFIED_FEATURE_TYPE:
{
CreatedOrModifiedFeatureType createdOrModifiedFeatureType=(CreatedOrModifiedFeatureType)theEObject;
T result=caseCreatedOrModifiedFeatureType(createdOrModifiedFeatureType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.CREATE_STORED_QUERY_RESPONSE_TYPE:
{
CreateStoredQueryResponseType createStoredQueryResponseType=(CreateStoredQueryResponseType)theEObject;
T result=caseCreateStoredQueryResponseType(createStoredQueryResponseType);
if (result == null) result=caseExecutionStatusType(createStoredQueryResponseType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.CREATE_STORED_QUERY_TYPE:
{
CreateStoredQueryType createStoredQueryType=(CreateStoredQueryType)theEObject;
T result=caseCreateStoredQueryType(createStoredQueryType);
if (result == null) result=caseBaseRequestType(createStoredQueryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.DELETE_TYPE:
{
DeleteType deleteType=(DeleteType)theEObject;
T result=caseDeleteType(deleteType);
if (result == null) result=caseAbstractTransactionActionType(deleteType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.DESCRIBE_FEATURE_TYPE_TYPE:
{
DescribeFeatureTypeType describeFeatureTypeType=(DescribeFeatureTypeType)theEObject;
T result=caseDescribeFeatureTypeType(describeFeatureTypeType);
if (result == null) result=caseBaseRequestType(describeFeatureTypeType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.DESCRIBE_STORED_QUERIES_RESPONSE_TYPE:
{
DescribeStoredQueriesResponseType describeStoredQueriesResponseType=(DescribeStoredQueriesResponseType)theEObject;
T result=caseDescribeStoredQueriesResponseType(describeStoredQueriesResponseType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.DESCRIBE_STORED_QUERIES_TYPE:
{
DescribeStoredQueriesType describeStoredQueriesType=(DescribeStoredQueriesType)theEObject;
T result=caseDescribeStoredQueriesType(describeStoredQueriesType);
if (result == null) result=caseBaseRequestType(describeStoredQueriesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.DOCUMENT_ROOT:
{
DocumentRoot documentRoot=(DocumentRoot)theEObject;
T result=caseDocumentRoot(documentRoot);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.DROP_STORED_QUERY_TYPE:
{
DropStoredQueryType dropStoredQueryType=(DropStoredQueryType)theEObject;
T result=caseDropStoredQueryType(dropStoredQueryType);
if (result == null) result=caseBaseRequestType(dropStoredQueryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.ELEMENT_TYPE:
{
ElementType elementType=(ElementType)theEObject;
T result=caseElementType(elementType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.EMPTY_TYPE:
{
EmptyType emptyType=(EmptyType)theEObject;
T result=caseEmptyType(emptyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.ENVELOPE_PROPERTY_TYPE:
{
EnvelopePropertyType envelopePropertyType=(EnvelopePropertyType)theEObject;
T result=caseEnvelopePropertyType(envelopePropertyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.EXECUTION_STATUS_TYPE:
{
ExecutionStatusType executionStatusType=(ExecutionStatusType)theEObject;
T result=caseExecutionStatusType(executionStatusType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.EXTENDED_DESCRIPTION_TYPE:
{
ExtendedDescriptionType extendedDescriptionType=(ExtendedDescriptionType)theEObject;
T result=caseExtendedDescriptionType(extendedDescriptionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.FEATURE_COLLECTION_TYPE:
{
FeatureCollectionType featureCollectionType=(FeatureCollectionType)theEObject;
T result=caseFeatureCollectionType(featureCollectionType);
if (result == null) result=caseSimpleFeatureCollectionType(featureCollectionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.FEATURES_LOCKED_TYPE:
{
FeaturesLockedType featuresLockedType=(FeaturesLockedType)theEObject;
T result=caseFeaturesLockedType(featuresLockedType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.FEATURES_NOT_LOCKED_TYPE:
{
FeaturesNotLockedType featuresNotLockedType=(FeaturesNotLockedType)theEObject;
T result=caseFeaturesNotLockedType(featuresNotLockedType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.FEATURE_TYPE_LIST_TYPE:
{
FeatureTypeListType featureTypeListType=(FeatureTypeListType)theEObject;
T result=caseFeatureTypeListType(featureTypeListType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.FEATURE_TYPE_TYPE:
{
FeatureTypeType featureTypeType=(FeatureTypeType)theEObject;
T result=caseFeatureTypeType(featureTypeType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.GET_CAPABILITIES_TYPE:
{
GetCapabilitiesType getCapabilitiesType=(GetCapabilitiesType)theEObject;
T result=caseGetCapabilitiesType(getCapabilitiesType);
if (result == null) result=caseOws11_GetCapabilitiesType(getCapabilitiesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.GET_FEATURE_TYPE:
{
GetFeatureType getFeatureType=(GetFeatureType)theEObject;
T result=caseGetFeatureType(getFeatureType);
if (result == null) result=caseBaseRequestType(getFeatureType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.GET_FEATURE_WITH_LOCK_TYPE:
{
GetFeatureWithLockType getFeatureWithLockType=(GetFeatureWithLockType)theEObject;
T result=caseGetFeatureWithLockType(getFeatureWithLockType);
if (result == null) result=caseGetFeatureType(getFeatureWithLockType);
if (result == null) result=caseBaseRequestType(getFeatureWithLockType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.GET_PROPERTY_VALUE_TYPE:
{
GetPropertyValueType getPropertyValueType=(GetPropertyValueType)theEObject;
T result=caseGetPropertyValueType(getPropertyValueType);
if (result == null) result=caseBaseRequestType(getPropertyValueType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.INSERT_TYPE:
{
InsertType insertType=(InsertType)theEObject;
T result=caseInsertType(insertType);
if (result == null) result=caseAbstractTransactionActionType(insertType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.LIST_STORED_QUERIES_RESPONSE_TYPE:
{
ListStoredQueriesResponseType listStoredQueriesResponseType=(ListStoredQueriesResponseType)theEObject;
T result=caseListStoredQueriesResponseType(listStoredQueriesResponseType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.LIST_STORED_QUERIES_TYPE:
{
ListStoredQueriesType listStoredQueriesType=(ListStoredQueriesType)theEObject;
T result=caseListStoredQueriesType(listStoredQueriesType);
if (result == null) result=caseBaseRequestType(listStoredQueriesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.LOCK_FEATURE_RESPONSE_TYPE:
{
LockFeatureResponseType lockFeatureResponseType=(LockFeatureResponseType)theEObject;
T result=caseLockFeatureResponseType(lockFeatureResponseType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.LOCK_FEATURE_TYPE:
{
LockFeatureType lockFeatureType=(LockFeatureType)theEObject;
T result=caseLockFeatureType(lockFeatureType);
if (result == null) result=caseBaseRequestType(lockFeatureType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.MEMBER_PROPERTY_TYPE:
{
MemberPropertyType memberPropertyType=(MemberPropertyType)theEObject;
T result=caseMemberPropertyType(memberPropertyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.METADATA_URL_TYPE:
{
MetadataURLType metadataURLType=(MetadataURLType)theEObject;
T result=caseMetadataURLType(metadataURLType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.NATIVE_TYPE:
{
NativeType nativeType=(NativeType)theEObject;
T result=caseNativeType(nativeType);
if (result == null) result=caseAbstractTransactionActionType(nativeType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.NO_CRS_TYPE:
{
NoCRSType noCRSType=(NoCRSType)theEObject;
T result=caseNoCRSType(noCRSType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.OUTPUT_FORMAT_LIST_TYPE:
{
OutputFormatListType outputFormatListType=(OutputFormatListType)theEObject;
T result=caseOutputFormatListType(outputFormatListType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.PARAMETER_EXPRESSION_TYPE:
{
ParameterExpressionType parameterExpressionType=(ParameterExpressionType)theEObject;
T result=caseParameterExpressionType(parameterExpressionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.PARAMETER_TYPE:
{
ParameterType parameterType=(ParameterType)theEObject;
T result=caseParameterType(parameterType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.PROPERTY_NAME_TYPE:
{
PropertyNameType propertyNameType=(PropertyNameType)theEObject;
T result=casePropertyNameType(propertyNameType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.PROPERTY_TYPE:
{
PropertyType propertyType=(PropertyType)theEObject;
T result=casePropertyType(propertyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.QUERY_EXPRESSION_TEXT_TYPE:
{
QueryExpressionTextType queryExpressionTextType=(QueryExpressionTextType)theEObject;
T result=caseQueryExpressionTextType(queryExpressionTextType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.QUERY_TYPE:
{
QueryType queryType=(QueryType)theEObject;
T result=caseQueryType(queryType);
if (result == null) result=caseAbstractAdhocQueryExpressionType(queryType);
if (result == null) result=caseAbstractQueryExpressionType(queryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.REPLACE_TYPE:
{
ReplaceType replaceType=(ReplaceType)theEObject;
T result=caseReplaceType(replaceType);
if (result == null) result=caseAbstractTransactionActionType(replaceType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.SIMPLE_FEATURE_COLLECTION_TYPE:
{
SimpleFeatureCollectionType simpleFeatureCollectionType=(SimpleFeatureCollectionType)theEObject;
T result=caseSimpleFeatureCollectionType(simpleFeatureCollectionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.STORED_QUERY_DESCRIPTION_TYPE:
{
StoredQueryDescriptionType storedQueryDescriptionType=(StoredQueryDescriptionType)theEObject;
T result=caseStoredQueryDescriptionType(storedQueryDescriptionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.STORED_QUERY_LIST_ITEM_TYPE:
{
StoredQueryListItemType storedQueryListItemType=(StoredQueryListItemType)theEObject;
T result=caseStoredQueryListItemType(storedQueryListItemType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.STORED_QUERY_TYPE:
{
StoredQueryType storedQueryType=(StoredQueryType)theEObject;
T result=caseStoredQueryType(storedQueryType);
if (result == null) result=caseAbstractQueryExpressionType(storedQueryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.TITLE_TYPE:
{
TitleType titleType=(TitleType)theEObject;
T result=caseTitleType(titleType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.TRANSACTION_RESPONSE_TYPE:
{
TransactionResponseType transactionResponseType=(TransactionResponseType)theEObject;
T result=caseTransactionResponseType(transactionResponseType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.TRANSACTION_SUMMARY_TYPE:
{
TransactionSummaryType transactionSummaryType=(TransactionSummaryType)theEObject;
T result=caseTransactionSummaryType(transactionSummaryType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.TRANSACTION_TYPE:
{
TransactionType transactionType=(TransactionType)theEObject;
T result=caseTransactionType(transactionType);
if (result == null) result=caseBaseRequestType(transactionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.TRUNCATED_RESPONSE_TYPE:
{
TruncatedResponseType truncatedResponseType=(TruncatedResponseType)theEObject;
T result=caseTruncatedResponseType(truncatedResponseType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.TUPLE_TYPE:
{
TupleType tupleType=(TupleType)theEObject;
T result=caseTupleType(tupleType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.UPDATE_TYPE:
{
UpdateType updateType=(UpdateType)theEObject;
T result=caseUpdateType(updateType);
if (result == null) result=caseAbstractTransactionActionType(updateType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.VALUE_COLLECTION_TYPE:
{
ValueCollectionType valueCollectionType=(ValueCollectionType)theEObject;
T result=caseValueCollectionType(valueCollectionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.VALUE_LIST_TYPE:
{
ValueListType valueListType=(ValueListType)theEObject;
T result=caseValueListType(valueListType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.VALUE_REFERENCE_TYPE:
{
ValueReferenceType valueReferenceType=(ValueReferenceType)theEObject;
T result=caseValueReferenceType(valueReferenceType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.WFS_CAPABILITIES_TYPE:
{
WFSCapabilitiesType wfsCapabilitiesType=(WFSCapabilitiesType)theEObject;
T result=caseWFSCapabilitiesType(wfsCapabilitiesType);
if (result == null) result=caseCapabilitiesBaseType(wfsCapabilitiesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wfs20Package.WSDL_TYPE:
{
WSDLType wsdlType=(WSDLType)theEObject;
T result=caseWSDLType(wsdlType);
if (result == null) result=defaultCase(theEObject);
return result;
}
default :
return defaultCase(theEObject);
}
}
