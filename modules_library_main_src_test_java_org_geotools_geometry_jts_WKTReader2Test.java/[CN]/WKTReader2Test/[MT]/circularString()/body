{
  String WKT="CIRCULARSTRING(220268.439465645 150415.359530563, 220227.333322076 150505.561285879, 220227.353105332 150406.434743975)";
  WKTReader2 reader=new WKTReader2(0.2);
  Geometry geometry=reader.read(WKT);
  assertNotNull("parsed circularstring",geometry);
  assertTrue(geometry instanceof CircularString);
  CircularString cs1=(CircularString)geometry;
  System.out.println(cs1.toText());
  assertEquals("segmentized as expected",86,cs1.getNumPoints());
  WKT="CIRCULARSTRING(143.62025166838282 -30.037497356076827, 142.92857147299705 -32.75101196874403, 145.96132309891922 -34.985671061528784, 149.57565307617188 -33.41153335571289, 149.41972407584802 -29.824672680573517, 146.1209416055467 -30.19711586270431, 143.62025166838282 -30.037497356076827)";
  geometry=reader.read(WKT);
  assertNotNull("parsed circularstring ring",geometry);
  Coordinate[] array=geometry.getCoordinates();
  assertEquals("forms a ring",array[0],array[array.length - 1]);
  WKT="CIRCULARSTRING(143.62025166838282 -30.037497356076827, 142.92857147299705 -32.75101196874403, 143.62025166838282 -30.037497356076827)";
  geometry=reader.read(WKT);
  assertNotNull("parsed perfect circle",geometry);
  assertEquals(11,geometry.getNumPoints());
  WKT="CIRCULARSTRING EMPTY";
  geometry=reader.read(WKT);
  assertNotNull(geometry);
  assertTrue(geometry.isEmpty());
}
