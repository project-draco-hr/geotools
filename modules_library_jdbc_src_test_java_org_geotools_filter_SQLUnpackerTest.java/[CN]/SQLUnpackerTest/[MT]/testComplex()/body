{
  FilterFactory2 ff=CommonFactoryFinder.getFilterFactory2();
  Or orFilter=ff.or(likeFilter,btwnFilter);
  And andFilter=ff.and(orFilter,compFilter);
  unpacker.unPackAND(andFilter);
  assertEquals(orFilter,unpacker.getUnSupported());
  assertEquals(compFilter,unpacker.getSupported());
  Or bigOrFilter=ff.or(ff.or(andFilter,compFilter),nullFilter);
  Or biggerOrFilter=ff.or(bigOrFilter,nullFilter);
  unpacker.unPackAND(biggerOrFilter);
  assertEquals(biggerOrFilter,unpacker.getUnSupported());
  assertNull(unpacker.getSupported());
  And bigAndFilter=ff.and(ff.and(geomFilter,compFilter),orFilter);
  unpacker.unPackAND(bigAndFilter);
  assertEquals(ff.and(orFilter,geomFilter),unpacker.getUnSupported());
  assertEquals(compFilter,unpacker.getSupported());
  unpacker.unPackOR(bigAndFilter);
  assertEquals(bigAndFilter,unpacker.getUnSupported());
  assertNull(unpacker.getSupported());
  And hugeAndFilter=ff.and(ff.and(bigAndFilter,andFilter),bigOrFilter);
  unpacker.unPackAND(hugeAndFilter);
  assertEquals(ff.and(compFilter,compFilter),unpacker.getSupported());
  List<org.opengis.filter.Filter> combine=Arrays.asList(new org.opengis.filter.Filter[]{geomFilter,orFilter,orFilter,bigOrFilter});
  And expected=ff.and(combine);
  org.opengis.filter.Filter unsupported=unpacker.getUnSupported();
  assertEquals(expected.toString(),unsupported.toString());
  assertEquals(expected,unsupported);
}
