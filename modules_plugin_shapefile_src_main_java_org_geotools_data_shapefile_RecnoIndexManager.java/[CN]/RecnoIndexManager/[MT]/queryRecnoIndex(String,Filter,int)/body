{
  java.sql.Connection connection=null;
  java.sql.Statement stmt=null;
  java.sql.ResultSet rs=null;
  List<Integer> recnoList=new ArrayList<Integer>();
  try {
    File file=org.geotools.data.DataUtilities.urlToFile(new java.net.URL(shapeFileName));
    if (file == null)     return null;
    Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
    String connectionString=null;
    String tablePath=file.getParentFile().getPath();
    String tableName=file.getName().substring(0,file.getName().lastIndexOf("."));
    String whereFilter=new RecnoFilterToSQL(filterCapabilities).encodeToString(filter);
    if (tableName.indexOf('-') != -1 || tableName.indexOf('(') != -1)     return null;
    if (ADVANTAGE_ODBC_DRIVER_INSTALLED) {
      connectionString="jdbc:odbc:Driver={Advantage StreamlineSQL ODBC};DataDirectory=" + tablePath + ";DefaultType=FoxPro;ServerTypes=1;AdvantageLocking=OFF;Pooling=FALSE;ShowDeleted=FALSE;";
      if ((connection=java.sql.DriverManager.getConnection(connectionString,"","")) != null) {
        if ((stmt=connection.createStatement()) != null) {
          String sql=maxFeatures != -1 && maxFeatures < Integer.MAX_VALUE ? String.format("SELECT TOP %d ROWID FROM [%s] %s;",maxFeatures,tableName,whereFilter) : String.format("SELECT ROWID FROM [%s] %s;",tableName,whereFilter);
          if ((rs=stmt.executeQuery(sql)) != null) {
            while (rs.next()) {
              Integer id=RecnoIndexManager.ConvertRowidToRecno(rs.getString(1));
              recnoList.add(id - 1);
            }
          }
        }
      }
    }
 else     if (MICROSOFT_FOXPRO_DRIVER_INSTALLED) {
      connectionString="jdbc:odbc:Driver={Microsoft Visual FoxPro Driver};SourceType=DBF;SourceDB=" + tablePath + ";";
      if ((connection=java.sql.DriverManager.getConnection(connectionString,"","")) != null) {
        if ((stmt=connection.createStatement()) != null) {
          String sql=maxFeatures != -1 && maxFeatures < Integer.MAX_VALUE ? String.format("SELECT TOP %d recno() FROM [%s] %s;",maxFeatures,tableName,whereFilter) : String.format("SELECT recno() FROM [%s] %s;",tableName,whereFilter);
          if ((rs=stmt.executeQuery(sql)) != null) {
            while (rs.next()) {
              Integer id=rs.getInt(1);
              recnoList.add(id - 1);
            }
          }
        }
      }
    }
  }
  finally {
    org.geotools.data.jdbc.JDBCUtils.close(rs);
    org.geotools.data.jdbc.JDBCUtils.close(stmt);
    org.geotools.data.jdbc.JDBCUtils.close(connection,null,null);
  }
  return recnoList;
}
