{
  final double maxWrap=wrapLimit * 1.9;
  double lastX=cs.getX(0);
  for (int i=0; i < cs.size(); i++) {
    final double x=cs.getX(i);
    final double distance=Math.abs(x - lastX);
    if (distance > wrapLimit) {
      boolean wraps=distance < maxWrap;
      if (!wraps && mt != null) {
        double[] src=new double[]{lastX,cs.getY(i - 1),x,cs.getY(i)};
        double[] dest=new double[4];
        try {
          mt.transform(src,0,dest,0,2);
          src[0]=Math.min(dest[0],dest[2]) + Math.abs(dest[2] - dest[0]) / 2;
          src[1]=Math.min(dest[1],dest[3]) + Math.abs(dest[3] - dest[1]) / 2;
          mt.inverse().transform(src,0,dest,0,1);
          wraps=!(dest[0] > Math.min(lastX,x) && dest[0] < Math.max(lastX,x));
        }
 catch (        TransformException ex) {
          Logging.getLogger("org.geotools.rendering").log(Level.WARNING,"Unable to perform transform to detect dateline wrapping",ex);
        }
      }
      if (wraps) {
        if (offset != 0) {
          offset=0;
        }
 else {
          offset=wrapLimit * 2;
        }
      }
    }
    if (offset != 0)     cs.setOrdinate(i,0,x + offset);
    lastX=x;
  }
}
