{
  if (!(relate(n) == ON_EDGE)) {
    throw new RuntimeException("Can't get the boundary edge for a point that isn't on an edge.");
  }
  Point2D.Double point=new Point2D.Double(n.getCoordinate().x,n.getCoordinate().y);
  Line2D.Double line1=new Line2D.Double(((XYNode)edge1.getNodeA()).getCoordinate().x,((XYNode)edge1.getNodeA()).getCoordinate().y,((XYNode)edge1.getNodeB()).getCoordinate().x,((XYNode)edge1.getNodeB()).getCoordinate().y);
  Line2D.Double line2=new Line2D.Double(((XYNode)edge2.getNodeA()).getCoordinate().x,((XYNode)edge2.getNodeA()).getCoordinate().y,((XYNode)edge2.getNodeB()).getCoordinate().x,((XYNode)edge2.getNodeB()).getCoordinate().y);
  Line2D.Double line3=new Line2D.Double(((XYNode)edge3.getNodeA()).getCoordinate().x,((XYNode)edge3.getNodeA()).getCoordinate().y,((XYNode)edge3.getNodeB()).getCoordinate().x,((XYNode)edge3.getNodeB()).getCoordinate().y);
  Edge ret=null;
  if (line1.ptSegDist(point) <= TOLERANCE) {
    ret=edge1;
  }
 else   if (line2.ptSegDist(point) <= TOLERANCE) {
    ret=edge2;
  }
 else   if (line3.ptSegDist(point) <= TOLERANCE) {
    ret=edge3;
  }
 else {
    throw new RuntimeException("So...  node " + n + " is on an edge of "+ this.toString()+ " but isn't on any of its edges: "+ edge1+ ", "+ edge2+ ", or "+ edge3);
  }
  return ret;
}
