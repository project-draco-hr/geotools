{
  File nc1=TestData.file(this,"20130101.METOPA.GOME2.NO2.DUMMY_new.nc");
  File nc2=TestData.file(this,"20130108.METOPA.GOME2.NO2.DUMMY_new.nc");
  File mosaic=new File(TestData.file(this,"."),"nc_heterogen");
  if (mosaic.exists()) {
    FileUtils.deleteDirectory(mosaic);
  }
  assertTrue(mosaic.mkdirs());
  FileUtils.copyFileToDirectory(nc1,mosaic);
  FileUtils.copyFileToDirectory(nc2,mosaic);
  File xml=TestData.file(this,"GOME2.NO2_new.xml");
  FileUtils.copyFileToDirectory(xml,mosaic);
  String indexer="TimeAttribute=time\n" + "Schema=the_geom:Polygon,location:String,imageindex:Integer,time:java.util.Date\n" + "PropertyCollectors=TimestampFileNameExtractorSPI[timeregex](time)\n";
  indexer+=Prop.AUXILIARY_FILE + "=" + "GOME2.NO2_new.xml";
  FileUtils.writeStringToFile(new File(mosaic,"indexer.properties"),indexer);
  String timeregex="regex=[0-9]{8}";
  FileUtils.writeStringToFile(new File(mosaic,"timeregex.properties"),timeregex);
  File dsp=TestData.file(this,"datastore.properties");
  FileUtils.copyFileToDirectory(dsp,mosaic);
  ImageMosaicFormat format=new ImageMosaicFormat();
  ImageMosaicReader reader=format.getReader(mosaic);
  SimpleFeatureIterator it=null;
  assertNotNull(reader);
  try {
    final ParameterValue<Boolean> useJai=AbstractGridFormat.USE_JAI_IMAGEREAD.createValue();
    useJai.setValue(false);
    ParameterValue<List> time=ImageMosaicFormat.TIME.createValue();
    final Date timeD=parseTimeStamp("2013-01-01T00:00:00.000Z");
    time.setValue(new ArrayList(){
{
        add(timeD);
      }
    }
);
    GeneralParameterValue[] params=new GeneralParameterValue[]{useJai,time};
    GridCoverage2D coverage1=reader.read(params);
    final Date timeD2=parseTimeStamp("2013-01-08T00:00:00.000Z");
    time.setValue(new ArrayList(){
{
        add(timeD2);
      }
    }
);
    params=new GeneralParameterValue[]{useJai,time};
    GridCoverage2D coverage2=reader.read(params);
    String property=(String)coverage1.getProperty("OriginalFileSource");
    String property2=(String)coverage2.getProperty("OriginalFileSource");
    assertNotEquals(property,property2);
    String[] names=reader.getGridCoverageNames();
    assertEquals(1,names.length);
    assertEquals("NO2",names[0]);
  }
  finally {
    if (it != null) {
      it.close();
    }
    reader.dispose();
  }
}
