{
  File nc1=TestData.file(this,"20130101.METOPA.GOME2.NO2.DUMMY.nc");
  File mosaic=new File(TestData.file(this,"."),"nc_harvestRP");
  if (mosaic.exists()) {
    FileUtils.deleteDirectory(mosaic);
  }
  assertTrue(mosaic.mkdirs());
  FileUtils.copyFileToDirectory(nc1,mosaic);
  final String auxFileName="GOME2.NO2.xml";
  File xml=TestData.file(this,".DUMMY.GOME2.NO2.PGL/" + auxFileName);
  FileUtils.copyFileToDirectory(xml,mosaic);
  String indexer="TimeAttribute=time\n" + "Schema=the_geom:Polygon,location:String,imageindex:Integer,time:java.util.Date\n" + "PropertyCollectors=TimestampFileNameExtractorSPI[timeregex](time)\n";
  indexer+=Prop.AUXILIARY_FILE + "=" + "GOME2.NO2.xml\n";
  indexer+=Prop.ABSOLUTE_PATH + "=" + "false";
  FileUtils.writeStringToFile(new File(mosaic,"indexer.properties"),indexer);
  String timeregex="regex=[0-9]{8}";
  FileUtils.writeStringToFile(new File(mosaic,"timeregex.properties"),timeregex);
  File dsp=TestData.file(this,"datastore.properties");
  FileUtils.copyFileToDirectory(dsp,mosaic);
  ImageMosaicFormat format=new ImageMosaicFormat();
  ImageMosaicReader reader=format.getReader(mosaic);
  InputStream inStream=null;
  assertNotNull(reader);
  try {
    String[] names=reader.getGridCoverageNames();
    assertEquals(1,names.length);
    assertEquals("NO2",names[0]);
    GranuleSource source=reader.getGranules("NO2",true);
    SimpleFeatureCollection granules=source.getGranules(Query.ALL);
    assertEquals(1,granules.size());
    Properties props=new Properties();
    final File file=new File(mosaic,"nc_harvestRP.properties");
    inStream=new FileInputStream(file);
    props.load(inStream);
    assertEquals(auxFileName,(String)props.getProperty(Prop.AUXILIARY_FILE));
  }
  finally {
    if (inStream != null) {
      IOUtils.closeQuietly(inStream);
    }
    if (reader != null) {
      try {
        reader.dispose();
      }
 catch (      Throwable t) {
      }
    }
  }
}
