{
  CurveImpl firstCurve=null;
  CurveImpl secondCurve=null;
  if (curve1.getStartPoint().equals(curve2.getEndPoint())) {
    firstCurve=curve2;
    secondCurve=curve1;
  }
 else   if (curve1.getEndPoint().equals(curve2.getStartPoint())) {
    firstCurve=curve1;
    secondCurve=curve2;
  }
 else   throw new IllegalArgumentException("Curves do not share a start and end point ");
  List<CurveImpl> curves=new ArrayList<CurveImpl>();
  curves.add(firstCurve);
  curves.add(secondCurve);
  return this.mergeContinuousCurves(curves);
}
