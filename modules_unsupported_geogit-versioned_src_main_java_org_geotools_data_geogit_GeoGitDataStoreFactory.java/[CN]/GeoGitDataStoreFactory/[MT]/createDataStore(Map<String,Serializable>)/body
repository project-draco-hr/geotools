{
  Object lookUp=USE_EMBEDDED_REPO.lookUp(params);
  if (!Boolean.TRUE.equals(lookUp)) {
    throw new DataSourceException(USE_EMBEDDED_REPO.key + " is not true");
  }
  String defaultNamespace=(String)DEFAULT_NAMESPACE.lookUp(params);
  String dataRootPath=(String)DATA_ROOT.lookUp(params);
  String repoPath=(String)REPO_PATH.lookUp(params);
  String indexPath=(String)INDEX_PATH.lookUp(params);
  final File dataRoot=new File(dataRootPath);
  final File geogitRepo=new File(dataRoot,repoPath);
  final File indexRepo=new File(dataRoot,indexPath);
  EnvironmentBuilder esb=new EnvironmentBuilder(new EntityStoreConfig());
  Properties bdbEnvProperties=null;
  Environment geogitEnv=esb.buildEnvironment(geogitRepo,bdbEnvProperties);
  Environment indexEnv=esb.buildEnvironment(indexRepo,bdbEnvProperties);
  RepositoryDatabase ggitRepoDb=new JERepositoryDatabase(geogitEnv,indexEnv);
  Repository repository=new Repository(ggitRepoDb,dataRoot);
  repository.create();
  GeoGitDataStore store=new GeoGitDataStore(repository,defaultNamespace);
  return store;
}
