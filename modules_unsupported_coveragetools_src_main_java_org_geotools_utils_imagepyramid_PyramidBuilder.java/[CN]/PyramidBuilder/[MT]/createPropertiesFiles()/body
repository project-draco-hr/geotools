{
  final Properties properties=new Properties();
  properties.setProperty("Envelope2D",new StringBuffer(Double.toString(envelope.getMinimum(0))).append(",").append(Double.toString(envelope.getMinimum(1))).append(" ").append(Double.toString(envelope.getMaximum(0))).append(",").append(Double.toString(envelope.getMaximum(1))).toString());
  properties.setProperty("LevelsNum",Integer.toString(numSteps + 1));
  final StringBuffer levels=new StringBuffer();
  final StringBuffer levelDirs=new StringBuffer();
  for (int i=0; i < numSteps + 1; i++) {
    levels.append(Double.toString(resolutions[0][i])).append(",").append(Double.toString(resolutions[1][i]));
    levelDirs.append(i == 0 ? "0" : Integer.toString((int)Math.pow(scaleFactor,i)));
    if (i < numSteps) {
      levels.append(" ");
      levelDirs.append(" ");
    }
  }
  properties.setProperty("Levels",levels.toString());
  properties.setProperty("LevelsDirs",levelDirs.toString());
  properties.setProperty("Name",name);
  try {
    properties.store(new BufferedOutputStream(new FileOutputStream(new File(outputLocation,name + ".properties"))),"");
    final File prjFile=new File(outputLocation,name + ".prj");
    BufferedWriter out=new BufferedWriter(new FileWriter(prjFile));
    out.write(envelope.getCoordinateReferenceSystem().toWKT());
    out.close();
  }
 catch (  FileNotFoundException e) {
    fireException(e);
  }
catch (  IOException e) {
    fireException(e);
  }
}
