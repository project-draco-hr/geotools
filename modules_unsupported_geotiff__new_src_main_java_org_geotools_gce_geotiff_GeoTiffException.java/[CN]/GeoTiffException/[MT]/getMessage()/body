{
  final StringWriter text=new StringWriter(1024);
  final PrintWriter message=new PrintWriter(text);
  message.println("GEOTIFF Module Error Report");
  message.println(super.getMessage());
  message.print("ModelPixelScaleTag: ");
  if (metadata != null) {
    final PixelScale modelPixelScales=metadata.getModelPixelScales();
    if (modelPixelScales != null) {
      message.println("[" + modelPixelScales.getScaleX() + ","+ modelPixelScales.getScaleY()+ ","+ modelPixelScales.getScaleZ()+ "]");
    }
 else {
      message.println("NOT AVAILABLE");
    }
  }
 else   message.println("NOT AVAILABLE");
  message.print("ModelTiePointTag: ");
  if (metadata != null) {
    final TiePoint[] modelTiePoints=metadata.getModelTiePoints();
    if (modelTiePoints != null) {
      final int numTiePoints=modelTiePoints.length;
      message.println("(" + (numTiePoints) + " tie points)");
      for (int i=0; i < (numTiePoints); i++) {
        message.print("TP #" + i + ": ");
        message.print("[" + modelTiePoints[i].getValueAt(0));
        message.print("," + modelTiePoints[i].getValueAt(1));
        message.print("," + modelTiePoints[i].getValueAt(2));
        message.print("] -> [" + modelTiePoints[i].getValueAt(3));
        message.print("," + modelTiePoints[i].getValueAt(4));
        message.println("," + modelTiePoints[i].getValueAt(5) + "]");
      }
    }
 else     message.println("NOT AVAILABLE");
  }
 else   message.println("NOT AVAILABLE");
  message.print("ModelTransformationTag: ");
  AffineTransform modelTransformation=getModelTransformation();
  if (modelTransformation != null) {
    message.println("[");
    message.print(" [" + modelTransformation.getScaleX());
    message.print("," + modelTransformation.getShearX());
    message.print("," + modelTransformation.getScaleY());
    message.print("," + modelTransformation.getShearY());
    message.print("," + modelTransformation.getTranslateX());
    message.print("," + modelTransformation.getTranslateY() + "]");
    message.println("]");
  }
 else {
    message.println("NOT AVAILABLE");
  }
  if (geoKeys != null) {
    int numTags=geoKeys.length;
    for (int i=0; i < numTags; i++) {
      message.print("GeoKey #" + (i + 1) + ": ");
      message.println("Key = " + geoKeys[i].getKeyID() + ", Value = "+ metadata.getGeoKey(geoKeys[i].getKeyID()));
    }
  }
  Throwable t=getCause();
  if (t != null)   t.printStackTrace(message);
  message.close();
  return text.toString();
}
