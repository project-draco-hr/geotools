{
  Polygon geom;
  LinearRing shell;
  List<LinearRing> holes=null;
  parser.nextTag();
  parser.require(XmlPullParser.START_TAG,GML.NAMESPACE,GML.exterior.getLocalPart());
  parser.nextTag();
  shell=parseLinearRing(dimension,crs);
  parser.nextTag();
  parser.require(XmlPullParser.END_TAG,GML.NAMESPACE,GML.exterior.getLocalPart());
  parser.nextTag();
  if (GML.NAMESPACE.equals(parser.getNamespace()) && GML.interior.getLocalPart().equals(parser.getName())) {
    holes=new ArrayList<LinearRing>(2);
    while (true) {
      parser.nextTag();
      LinearRing hole=parseLinearRing(dimension,crs);
      holes.add(hole);
      parser.nextTag();
      parser.require(XmlPullParser.END_TAG,GML.NAMESPACE,GML.interior.getLocalPart());
      parser.nextTag();
      if (XmlPullParser.END_TAG == parser.getEventType()) {
        parser.require(XmlPullParser.END_TAG,GML.NAMESPACE,GML.Polygon.getLocalPart());
        break;
      }
    }
  }
  parser.require(XmlPullParser.END_TAG,GML.NAMESPACE,GML.Polygon.getLocalPart());
  LinearRing[] holesArray=null;
  if (holes != null) {
    holesArray=holes.toArray(new LinearRing[holes.size()]);
  }
  geom=geomFac.createPolygon(shell,holesArray);
  geom.setUserData(crs);
  return geom;
}
