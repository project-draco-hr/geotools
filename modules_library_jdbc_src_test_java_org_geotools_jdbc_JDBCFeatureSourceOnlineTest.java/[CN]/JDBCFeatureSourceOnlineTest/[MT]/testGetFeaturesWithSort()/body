{
  FilterFactory ff=dataStore.getFilterFactory();
  SortBy sort=ff.sort(aname("stringProperty"),SortOrder.ASCENDING);
  Query query=new Query();
  query.setSortBy(new SortBy[]{sort});
  SimpleFeatureCollection features=featureSource.getFeatures(query);
  assertEquals(3,features.size());
  SimpleFeature f;
  try (SimpleFeatureIterator iterator=features.features()){
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("one",f.getAttribute(aname("stringProperty")));
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("two",f.getAttribute(aname("stringProperty")));
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("zero",f.getAttribute(aname("stringProperty")));
  }
   sort=ff.sort(aname("stringProperty"),SortOrder.DESCENDING);
  query.setSortBy(new SortBy[]{sort});
  features=featureSource.getFeatures(query);
  try (SimpleFeatureIterator iterator=features.features()){
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("zero",f.getAttribute(aname("stringProperty")));
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("two",f.getAttribute(aname("stringProperty")));
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("one",f.getAttribute(aname("stringProperty")));
  }
 }
