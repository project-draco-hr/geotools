{
  File shpFile=copyShapefiles(STATE_POP);
  URL url=shpFile.toURI().toURL();
  ShapefileDataStore ds=new ShapefileDataStore(url);
  ds.setIndexed(false);
  SimpleFeatureSource featureSource=ds.getFeatureSource();
  SimpleFeatureType schema=featureSource.getSchema();
  Query query=new Query(schema.getTypeName());
  query.setPropertyNames(new String[0]);
  SimpleFeatureCollection features=featureSource.getFeatures(query);
  assertNotNull("selection query worked",features);
  assertTrue("selection non empty",features.size() > 0);
  ReferencedEnvelope bounds=features.getBounds();
  final Set<FeatureId> selection=new LinkedHashSet<FeatureId>();
  features.accepts(new FeatureVisitor(){
    public void visit(    Feature feature){
      selection.add(feature.getIdentifier());
    }
  }
,null);
  assertFalse(selection.isEmpty());
  FilterFactory2 ff=CommonFactoryFinder.getFilterFactory2(null);
  String geomName=schema.getGeometryDescriptor().getName().getLocalPart();
  query.setFilter(ff.bbox(ff.property(geomName),bounds));
  features=featureSource.getFeatures(query);
  assertNotNull("selection query worked",features);
  assertEquals(selection.size(),features.size());
  ds.dispose();
}
