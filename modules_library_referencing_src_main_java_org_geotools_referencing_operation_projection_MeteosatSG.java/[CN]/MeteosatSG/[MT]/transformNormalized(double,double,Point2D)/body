{
  double c_lat=0.0;
  double r1=0.0, r2=0.0, r3=0.0, rn=0.0, re=0.0, rl=0.0;
  double xx=0.0, yy=0.0;
  double cc=0.0, ll=0.0;
  double dotprod=0.0;
  long coff, loff;
  double cfac, lfac;
  double col_norm, row_norm;
  lfac=LFAC_NONHRV;
  cfac=CFAC_NONHRV;
  coff=COFF_NONHRV;
  loff=LOFF_NONHRV;
  c_lat=atan(((double)0.993243 * (sin(y) / cos(y))));
  double cos_c_lat=cos(c_lat);
  double cos_x_SUB_LON=cos(x - SUB_LON);
  re=R_POL / sqrt(((double)1.0 - (double)0.00675701 * cos_c_lat * cos_c_lat));
  rl=re;
  r1=SAT_HEIGHT - rl * cos_c_lat * cos_x_SUB_LON;
  r2=-rl * cos_c_lat * sin(x - SUB_LON);
  r3=rl * sin(c_lat);
  rn=sqrt(r1 * r1 + r2 * r2 + r3 * r3);
  dotprod=r1 * (rl * cos_c_lat * cos_x_SUB_LON) - r2 * r2 - r3 * r3 * (pow((R_EQ / R_POL),2));
  if (dotprod <= 0) {
    col_norm=58.0 / SCALE_FACTOR;
    row_norm=1856.0 / SCALE_FACTOR;
    if (ptDst != null) {
      ptDst.setLocation(col_norm,row_norm);
      LOGGER.log(Level.INFO,"MeteosatSG transform: Lon/lat outside vaild range, lon=" + x + " lat="+ y+ " Col/row set arbitrary to 58,1856 (0N, 74.48E");
      return ptDst;
    }
    return new Point2D.Double(col_norm,row_norm);
  }
  xx=atan((-r2 / r1));
  yy=asin((-r3 / rn));
  cc=coff + xx * pow(2,-16) * cfac;
  ll=loff + yy * pow(2,-16) * lfac;
  col_norm=cc / SCALE_FACTOR;
  row_norm=ll / SCALE_FACTOR;
  if (ptDst != null) {
    ptDst.setLocation(col_norm,row_norm);
    LOGGER.log(Level.FINE,"MeteosatSG transform: col=" + cc + " row="+ ll);
    return ptDst;
  }
  return new Point2D.Double(col_norm,row_norm);
}
