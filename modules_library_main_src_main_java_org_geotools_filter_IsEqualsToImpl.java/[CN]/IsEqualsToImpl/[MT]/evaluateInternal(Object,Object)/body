{
  if (value1 == value2) {
    return true;
  }
  if (value1 == null || value2 == null) {
    return false;
  }
  if (value1.equals(value2)) {
    return true;
  }
  if (expression1 instanceof Literal && !(expression2 instanceof Literal)) {
    Object v1=Converters.convert(value1,value2.getClass());
    if (v1 != null && value2.equals(v1))     return true;
  }
 else   if (expression2 instanceof Literal && !(expression1 instanceof Literal)) {
    Object v2=Converters.convert(value2,value1.getClass());
    if (v2 != null && value1.equals(v2))     return true;
  }
  final boolean isNumeric1=(value1 instanceof Number);
  final boolean isNumeric2=(value2 instanceof Number);
  if ((isNumeric1 && isNumeric2) || (isNumeric1 && (value2 instanceof CharSequence)) || (isNumeric2 && (value1 instanceof CharSequence))) {
    final Number n1, n2;
    try {
      n1=isNumeric1 ? (Number)value1 : parseToNumber(value1.toString());
      n2=isNumeric2 ? (Number)value2 : parseToNumber(value2.toString());
    }
 catch (    NumberFormatException e) {
      return false;
    }
    final double fp1=n1.doubleValue();
    final double fp2=n2.doubleValue();
    final long lg1, lg2;
    if (fp1 == (double)(lg1=n1.longValue()) && fp2 == (double)(lg2=n2.longValue())) {
      return lg1 == lg2;
    }
 else {
      return (fp1 == fp2) || (Double.isNaN(fp1) && Double.isNaN(fp2));
    }
  }
 else   if (!isMatchingCase()) {
    String s1=Converters.convert(value1,String.class);
    String s2=Converters.convert(value2,String.class);
    return s1.equalsIgnoreCase(s2);
  }
  return false;
}
