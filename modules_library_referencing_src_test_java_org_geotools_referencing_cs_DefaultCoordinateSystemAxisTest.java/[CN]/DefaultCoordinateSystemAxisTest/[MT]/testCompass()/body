{
  final AxisDirection[] compass=new AxisDirection[]{AxisDirection.NORTH,AxisDirection.NORTH_NORTH_EAST,AxisDirection.NORTH_EAST,AxisDirection.EAST_NORTH_EAST,AxisDirection.EAST,AxisDirection.EAST_SOUTH_EAST,AxisDirection.SOUTH_EAST,AxisDirection.SOUTH_SOUTH_EAST,AxisDirection.SOUTH,AxisDirection.SOUTH_SOUTH_WEST,AxisDirection.SOUTH_WEST,AxisDirection.WEST_SOUTH_WEST,AxisDirection.WEST,AxisDirection.WEST_NORTH_WEST,AxisDirection.NORTH_WEST,AxisDirection.NORTH_NORTH_WEST};
  assertEquals(compass.length,COMPASS_DIRECTION_COUNT);
  final int base=AxisDirection.NORTH.ordinal();
  final int h=compass.length / 2;
  for (int i=0; i < compass.length; i++) {
    final String index="compass[" + i + ']';
    final AxisDirection c=compass[i];
    double angle=i * (360.0 / compass.length);
    if (angle > 180) {
      angle-=360;
    }
    assertEquals(index,base + i,c.ordinal());
    assertEquals(index,base + i + (i < h ? h : -h),c.opposite().ordinal());
    assertEquals(index,0,getAngle(c,c),EPS);
    assertEquals(index,180,Math.abs(getAngle(c,c.opposite())),EPS);
    assertEquals(index,angle,getAngle(c,AxisDirection.NORTH),EPS);
  }
}
