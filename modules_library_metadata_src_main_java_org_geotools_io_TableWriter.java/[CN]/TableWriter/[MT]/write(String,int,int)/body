{
  if (offset < 0 || length < 0 || (offset + length) > string.length()) {
    throw new IndexOutOfBoundsException();
  }
  if (length == 0) {
    return;
  }
synchronized (lock) {
    if (skipCR && string.charAt(offset) == '\n') {
      offset++;
      length--;
    }
    if (!multiLinesCells) {
      int upper=offset;
      for (; length != 0; length--) {
switch (string.charAt(upper++)) {
case '\t':
{
            buffer.append(string.substring(offset,upper - 1));
            nextColumn();
            offset=upper;
            break;
          }
case '\r':
{
          buffer.append(string.substring(offset,upper - 1));
          nextLine();
          if (length != 0 && string.charAt(upper) == '\n') {
            upper++;
            length--;
          }
          offset=upper;
          break;
        }
case '\n':
{
        buffer.append(string.substring(offset,upper - 1));
        nextLine();
        offset=upper;
        break;
      }
  }
}
length=upper - offset;
}
skipCR=(string.charAt(offset + length - 1) == '\r');
buffer.append(string.substring(offset,offset + length));
}
}
