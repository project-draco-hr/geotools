{
  LineMetrics metrics=computeLineMetricsIfNeeded(component);
  GlyphVector gv=component.getGlyphVector();
  java.awt.Shape outline=gv.getOutline();
  if (labelItem.getTextStyle().getHaloFill() != null) {
    configureHalo();
    graphics.draw(outline);
    drawStraightLabelUnderlineIfNeeded(outline,metrics,true);
  }
  configureLabelStyle();
  drawStraightLabelUnderlineIfNeeded(outline,metrics,false);
  if (labelRenderingMode == LabelRenderingMode.STRING) {
    graphics.drawGlyphVector(gv,0,0);
  }
 else   if (labelRenderingMode == LabelRenderingMode.OUTLINE) {
    graphics.fill(outline);
  }
 else {
    AffineTransform tx=graphics.getTransform();
    if (Math.abs(tx.getShearX()) >= EPS || Math.abs(tx.getShearY()) > EPS) {
      graphics.fill(outline);
    }
 else {
      graphics.drawGlyphVector(gv,0,0);
    }
  }
}
