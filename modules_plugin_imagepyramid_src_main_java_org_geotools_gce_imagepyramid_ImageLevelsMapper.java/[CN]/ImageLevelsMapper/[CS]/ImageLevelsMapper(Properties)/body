{
  levelsDirs=properties.getProperty("LevelsDirs").split(" ");
  final String levels=properties.getProperty("Levels");
  String[] resolutionLevels=levels.split(" ");
  int resolutionGroupsNumber=resolutionLevels.length;
  double[][][] resolutionsSet=new double[resolutionGroupsNumber][][];
  int numResolutions=0;
  for (int i=0; i < resolutionGroupsNumber; i++) {
    String[] subLevels=resolutionLevels[i].split(";");
    int subLevelsLenght=subLevels.length;
    if (subLevelsLenght > 1) {
      innerOverviews=true;
    }
    resolutionsSet[i]=new double[subLevelsLenght][];
    for (int k=0; k < subLevelsLenght; k++) {
      String[] pair=subLevels[k].split(",");
      resolutionsSet[i][k]=new double[2];
      resolutionsSet[i][k][0]=Double.parseDouble(pair[0].trim());
      resolutionsSet[i][k][1]=Double.parseDouble(pair[1].trim());
      numResolutions++;
    }
  }
  numOverviews=numResolutions - 1;
  imageChoiceToReaderLookup=new int[numResolutions];
  highestResolution=new double[2];
  highestResolution[0]=resolutionsSet[0][0][0];
  highestResolution[1]=resolutionsSet[0][0][1];
  imageChoiceToReaderLookup[0]=0;
  overViewResolutions=numOverviews >= 1 ? new double[numOverviews][2] : null;
  numResolutions=0;
  for (int i=0; i < resolutionGroupsNumber; i++) {
    for (int k=(i != 0 ? 0 : 1); k < resolutionsSet[i].length; k++) {
      overViewResolutions[numResolutions][0]=resolutionsSet[i][k][0];
      overViewResolutions[numResolutions][1]=resolutionsSet[i][k][1];
      numResolutions++;
      imageChoiceToReaderLookup[numResolutions]=i;
    }
  }
}
