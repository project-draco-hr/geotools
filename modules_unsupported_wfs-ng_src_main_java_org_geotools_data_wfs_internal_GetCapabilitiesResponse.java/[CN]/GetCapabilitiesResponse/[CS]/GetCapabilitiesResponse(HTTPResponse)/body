{
  super(response);
  MODULE.finer("Parsing GetCapabilities response");
  try {
    final Document rawDocument;
    final byte[] rawResponse;
{
      ByteArrayOutputStream buff=new ByteArrayOutputStream();
      InputStream inputStream=response.getResponseStream();
      try {
        IOUtils.copy(inputStream,buff);
      }
  finally {
        inputStream.close();
      }
      rawResponse=buff.toByteArray();
    }
    if (RESPONSES.isLoggable(Level.FINE)) {
      RESPONSES.fine("Full GetCapabilities response: " + new String(rawResponse));
    }
    try {
      DocumentBuilderFactory builderFactory=DocumentBuilderFactory.newInstance();
      builderFactory.setNamespaceAware(true);
      builderFactory.setValidating(false);
      DocumentBuilder documentBuilder=builderFactory.newDocumentBuilder();
      rawDocument=documentBuilder.parse(new ByteArrayInputStream(rawResponse));
    }
 catch (    Exception e) {
      throw new IOException("Error parsing capabilities document: " + e.getMessage(),e);
    }
    List<Configuration> tryConfigs=Arrays.asList(WFS_2_0_CONFIGURATION,WFS_1_1_CONFIGURATION,WFS_1_0_CAPABILITIES_CONFIGURATION);
    final String versionAtt=rawDocument.getDocumentElement().getAttribute("version");
    Version version=null;
    if (null != versionAtt) {
      version=new Version(versionAtt);
      if (Versions.v1_0_0.equals(version)) {
        tryConfigs=Collections.singletonList(WFS_1_0_CAPABILITIES_CONFIGURATION);
      }
 else       if (Versions.v1_1_0.equals(version)) {
        tryConfigs=Collections.singletonList(WFS_1_1_CONFIGURATION);
      }
 else       if (Versions.v2_0_0.equals(version)) {
        tryConfigs=Collections.singletonList(WFS_2_0_CONFIGURATION);
      }
    }
    EObject parsedCapabilities=null;
    for (    Configuration wfsConfig : tryConfigs) {
      try {
        parsedCapabilities=parseCapabilities(rawDocument,wfsConfig);
        if (parsedCapabilities != null) {
          break;
        }
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
    if (null == parsedCapabilities) {
      throw new IllegalStateException("Unable to parse GetCapabilities document");
    }
    this.capabilities=WFSGetCapabilities.create(parsedCapabilities,rawDocument);
  }
  finally {
    response.dispose();
  }
}
