{
  if (ComplexAttribute.class.isAssignableFrom(source)) {
    return new Converter(){
      public Object convert(      Object source,      Class target) throws Exception {
        while (source instanceof ComplexAttribute) {
          if (!((ComplexAttribute)source).getType().getDescriptors().isEmpty()) {
            return null;
          }
 else {
            Collection<? extends Property> valueMap=((ComplexAttribute)source).getValue();
            if (valueMap.isEmpty()) {
              return null;
            }
 else {
              source=valueMap.iterator().next();
            }
          }
        }
        if (source instanceof Attribute) {
          return ((Attribute)source).getValue();
        }
        return null;
      }
    }
;
  }
  if (Attribute.class.isAssignableFrom(source)) {
    return new Converter(){
      public Object convert(      Object source,      Class target) throws Exception {
        return ((Attribute)source).getValue();
      }
    }
;
  }
  return null;
}
