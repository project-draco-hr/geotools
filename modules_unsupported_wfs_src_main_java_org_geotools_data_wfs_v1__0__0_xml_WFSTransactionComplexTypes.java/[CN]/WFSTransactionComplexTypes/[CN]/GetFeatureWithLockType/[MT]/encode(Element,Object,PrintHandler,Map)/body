{
  if (canEncode(element,value,hints)) {
    AttributesImpl attributes=new AttributesImpl();
    attributes.addAttribute(WFSSchema.NAMESPACE.toString(),attrs[0].getName(),null,"string",attrs[0].getFixed());
    attributes.addAttribute(WFSSchema.NAMESPACE.toString(),attrs[1].getName(),null,"string",attrs[1].getFixed());
    attributes.addAttribute(WFSSchema.NAMESPACE.toString(),attrs[2].getName(),null,"string",attrs[3].getDefault());
    Query query=(Query)value;
    if ((query != null) && (query.getMaxFeatures() != Query.DEFAULT_MAX)) {
      attributes.addAttribute(WFSSchema.NAMESPACE.toString(),elems[3].getName(),null,"integer","" + query.getMaxFeatures());
    }
    if (hints != null) {
      String lockId=(String)hints.get(WFSBasicComplexTypes.LOCK_KEY);
      if (lockId != null) {
        attributes.addAttribute(WFSSchema.NAMESPACE.toString(),elems[2].getName(),null,"string",lockId);
      }
    }
    output.startElement(element.getNamespace(),element.getName(),attributes);
    elems[0].getType().encode(elems[0],value,output,hints);
    output.endElement(element.getNamespace(),element.getName());
  }
 else {
    throw new OperationNotSupportedException("not a valid value/element for a DescribeFeatureTypeType.");
  }
}
