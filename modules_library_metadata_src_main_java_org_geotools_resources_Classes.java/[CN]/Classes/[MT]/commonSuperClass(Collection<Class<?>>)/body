{
  final Set<Class<?>> superTypes=new LinkedHashSet<Class<?>>();
  for (  Class<?> type : types) {
    while ((type=type.getSuperclass()) != null) {
      if (!superTypes.add(type)) {
        break;
      }
    }
  }
  for (final Iterator<Class<?>> it=superTypes.iterator(); it.hasNext(); ) {
    final Class<?> candidate=it.next();
    for (    final Class<?> type : types) {
      if (!candidate.isAssignableFrom(type)) {
        it.remove();
        break;
      }
    }
  }
  return removeAssignables(superTypes);
}
