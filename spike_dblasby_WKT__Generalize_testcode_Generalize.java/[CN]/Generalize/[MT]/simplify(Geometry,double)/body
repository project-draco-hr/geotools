{
  g=TopologyPreservingSimplifier.simplify(g,tolerance);
  if (!(g instanceof GeometryCollection)) {
    if (g instanceof LineString) {
      LineString gg[]=new LineString[1];
      gg[0]=(LineString)g;
      g=g.getFactory().createMultiLineString((LineString[])gg);
    }
    if (g instanceof Polygon) {
      Polygon gg[]=new Polygon[1];
      gg[0]=(Polygon)g;
      g=g.getFactory().createMultiPolygon((Polygon[])gg);
    }
    if (g instanceof Point) {
      Point gg[]=new Point[1];
      gg[0]=(Point)g;
      g=g.getFactory().createMultiPoint((Point[])gg);
    }
  }
  GeometryCollection gc=(GeometryCollection)g;
  ArrayList subs=new ArrayList();
  for (int t=0; t < gc.getNumGeometries(); t++) {
    Geometry gsub=gc.getGeometryN(t);
    if (gsub instanceof Point) {
      subs.add(gsub);
    }
 else     if (gsub instanceof LineString) {
      if (gsub.getLength() > tolerance)       subs.add(gsub);
    }
 else     if (gsub instanceof Polygon) {
      Geometry p=handlePolygon((Polygon)gsub,tolerance);
      if (p != null)       subs.add(p);
    }
 else     throw new Exception("cannot handle type -" + gsub.getGeometryType());
  }
  if (subs.size() == 0)   return null;
  if (subs.size() == 1) {
    return (Geometry)subs.get(0);
  }
  return g.getFactory().buildGeometry(subs);
}
