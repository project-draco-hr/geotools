{
  GridCoverageRendererUtilities.ensureNotNull(gridCoverage,"gridCoverage");
  if (LOGGER.isLoggable(Level.FINE)) {
    LOGGER.fine("Drawing coverage " + gridCoverage.toString());
  }
  boolean doReprojection=false;
  final CoordinateReferenceSystem coverageCRS=gridCoverage.getCoordinateReferenceSystem2D();
  if (!CRS.equalsIgnoreMetadata(coverageCRS,destinationCRS)) {
    final MathTransform transform=CRS.findMathTransform(coverageCRS,destinationCRS,true);
    doReprojection=!transform.isIdentity();
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine("Reproject needed for rendering provided coverage");
    }
  }
  final GridCoverage2D preReprojection=crop(gridCoverage,destinationEnvelope,doReprojection);
  if (preReprojection == null) {
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine("Skipping current coverage because crop failed");
    }
    return null;
  }
  final GridCoverage2D afterReprojection=reproject(preReprojection,doReprojection,bkgValues);
  final GridCoverage2D preSymbolizer=affine(afterReprojection,bkgValues);
  final GridCoverage2D symbolizerGC;
  if (symbolizer != null) {
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine("Applying Raster Symbolizer ");
    }
    final RasterSymbolizerHelper rsp=new RasterSymbolizerHelper(preSymbolizer,this.hints);
    rsp.visit(symbolizer);
    symbolizerGC=(GridCoverage2D)rsp.getOutput();
  }
 else {
    symbolizerGC=preSymbolizer;
  }
  if (DEBUG) {
    writeRenderedImage(symbolizerGC.geophysics(false).getRenderedImage(),"postSymbolizer");
  }
  return symbolizerGC.getRenderedImage();
}
