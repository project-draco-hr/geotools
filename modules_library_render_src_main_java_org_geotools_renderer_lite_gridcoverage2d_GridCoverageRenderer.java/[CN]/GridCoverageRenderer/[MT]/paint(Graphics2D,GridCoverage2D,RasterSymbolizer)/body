{
  if (graphics == null)   throw new NullPointerException(Errors.format(ErrorKeys.NULL_ARGUMENT_$1,"graphics"));
  if (gridCoverage == null)   throw new NullPointerException(Errors.format(ErrorKeys.NULL_ARGUMENT_$1,"gridCoverage"));
  if (LOGGER.isLoggable(Level.FINE))   LOGGER.fine(new StringBuilder("Drawing coverage ").append(gridCoverage.toString()).toString());
  final RenderingHints oldHints=graphics.getRenderingHints();
  graphics.setRenderingHints(this.hints);
  GCpair couple=prepareFinalImage(gridCoverage,symbolizer);
  if (couple == null)   return;
  RenderedImage finalImage=couple.getGridCoverage().getRenderedImage();
  AffineTransform clonedFinalWorldToGrid=couple.getTransform();
  final float alpha=getOpacity(symbolizer);
  final Composite oldAlphaComposite=graphics.getComposite();
  graphics.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,alpha));
  try {
    if (DEBUG) {
      writeRenderedImage(finalImage,"final");
    }
    graphics.drawRenderedImage(finalImage,clonedFinalWorldToGrid);
  }
 catch (  Throwable t) {
    try {
      if (LOGGER.isLoggable(Level.FINE))       LOGGER.log(Level.FINE,t.getLocalizedMessage(),t);
      if (t instanceof IllegalArgumentException) {
        if (DEBUG) {
          writeRenderedImage(finalImage,"preWORKAROUND1");
        }
        final RenderedImage image=new ImageWorker(finalImage).forceComponentColorModel(true).getRenderedImage();
        if (DEBUG) {
          writeRenderedImage(image,"WORKAROUND1");
        }
        graphics.drawRenderedImage(image,clonedFinalWorldToGrid);
      }
 else       if (t instanceof ImagingOpException) {
        BufferedImage buf=finalImage.getColorModel().hasAlpha() ? new BufferedImage(finalImage.getWidth(),finalImage.getHeight(),BufferedImage.TYPE_4BYTE_ABGR) : new BufferedImage(finalImage.getWidth(),finalImage.getHeight(),BufferedImage.TYPE_3BYTE_BGR);
        if (DEBUG) {
          writeRenderedImage(buf,"preWORKAROUND2");
        }
        final Graphics2D g=(Graphics2D)buf.getGraphics();
        final int translationX=finalImage.getMinX(), translationY=finalImage.getMinY();
        g.drawRenderedImage(finalImage,AffineTransform.getTranslateInstance(-translationX,-translationY));
        g.dispose();
        if (DEBUG) {
          writeRenderedImage(buf,"WORKAROUND2");
        }
        clonedFinalWorldToGrid.concatenate(AffineTransform.getTranslateInstance(translationX,translationY));
        graphics.drawImage(buf,clonedFinalWorldToGrid,null);
        buf.flush();
        buf=null;
      }
 else       if (LOGGER.isLoggable(Level.FINE))       LOGGER.fine("Unable to renderer this raster, no workaround found");
    }
 catch (    Throwable t1) {
      LOGGER.log(Level.WARNING,t1.getLocalizedMessage(),t1);
    }
  }
  graphics.setComposite(oldAlphaComposite);
  graphics.setRenderingHints(oldHints);
}
