{
  final MathTransform2D t;
  final CoordinateReferenceSystem crs;
  crs=ReferencingFactoryFinder.getCRSFactory(null).createFromWKT(JTSTest.UTM_ZONE_10N);
  t=(MathTransform2D)ReferencingFactoryFinder.getCoordinateOperationFactory(null).createOperation(DefaultGeographicCRS.WGS84,crs).getMathTransform();
  final Random random=new Random(546757437746704345L);
  final int[] size={12,1000};
  for (int j=0; j < size.length; j++) {
    final Coordinate[] source=new Coordinate[size[j]];
    for (int i=0; i < source.length; i++) {
      source[i]=new Coordinate(-121 - 4 * random.nextDouble(),-45 + 90 * random.nextDouble(),500 * random.nextDouble());
    }
    final CoordinateSequence sourceCS=csFactory.create(source);
    final CoordinateSequence targetCS=transform(sourceCS,t);
    assertNotSame(sourceCS,targetCS);
    assertEquals(sourceCS.size(),targetCS.size());
    for (int i=sourceCS.size(); --i >= 0; ) {
      assertFalse(sourceCS.getCoordinate(i).equals(targetCS.getCoordinate(i)));
    }
    final CoordinateSequenceTransformer transformer=new DefaultCoordinateSequenceTransformer();
    final CoordinateSequence testCS=transformer.transform(sourceCS,t);
    assertNotSame(sourceCS,testCS);
    assertNotSame(targetCS,testCS);
    assertEquals(sourceCS.size(),testCS.size());
    for (int i=targetCS.size(); --i >= 0; ) {
      assertEquals(targetCS.getCoordinate(i),testCS.getCoordinate(i));
    }
  }
}
