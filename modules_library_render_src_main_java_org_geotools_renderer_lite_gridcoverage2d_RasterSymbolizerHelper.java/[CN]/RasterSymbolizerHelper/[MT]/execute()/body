{
  final GridCoverage2D output=(GridCoverage2D)super.execute();
  RenderedImage outputImage=output.getRenderedImage();
  Range nodata=CoverageUtilities.getNoDataProperty(output) != null ? CoverageUtilities.getNoDataProperty(output).getAsRange() : null;
  ROI roiProp=CoverageUtilities.getROIProperty(output);
  final SampleModel outputImageSampleModel=outputImage.getSampleModel();
  int numBands=outputImageSampleModel.getNumBands();
  final int dataType=outputImageSampleModel.getDataType();
  GridSampleDimension sd[];
  if (numBands > 4) {
    final int visibleBand=CoverageUtilities.getVisibleBand(outputImage);
    outputImage=new ImageWorker(outputImage).setRenderingHints(this.getHints()).retainBands(new int[]{visibleBand}).getRenderedImage();
    sd=new GridSampleDimension[]{(GridSampleDimension)output.getSampleDimension(visibleBand)};
  }
 else {
    sd=output.getSampleDimensions();
  }
switch (dataType) {
case DataBuffer.TYPE_DOUBLE:
case DataBuffer.TYPE_FLOAT:
case DataBuffer.TYPE_INT:
case DataBuffer.TYPE_SHORT:
    ImageWorker w=new ImageWorker(outputImage);
  outputImage=w.setROI(roiProp).setNoData(nodata).setRenderingHints(this.getHints()).rescaleToBytes().getRenderedImage();
roiProp=w.getROI();
nodata=w.getNoData();
}
final RenderedImage finalImage;
Map properties=output.getProperties();
if (properties == null) {
properties=new HashMap<>();
}
CoverageUtilities.setNoDataProperty(properties,nodata);
CoverageUtilities.setROIProperty(properties,roiProp);
if (opacity < 1) {
ImageWorker ow=new ImageWorker(outputImage);
ow.setROI(roiProp);
ow.setNoData(nodata);
finalImage=ow.applyOpacity(opacity).getRenderedImage();
numBands=finalImage.getSampleModel().getNumBands();
sd=new GridSampleDimension[numBands];
for (int i=0; i < numBands; i++) {
sd[i]=new GridSampleDimension(TypeMap.getColorInterpretation(finalImage.getColorModel(),i).name());
}
CoverageUtilities.setNoDataProperty(properties,ow.getNoData());
CoverageUtilities.setROIProperty(properties,ow.getROI());
return this.getCoverageFactory().create(output.getName(),finalImage,(GridGeometry2D)output.getGridGeometry(),sd,new GridCoverage[]{output},properties);
}
return this.getCoverageFactory().create(output.getName(),outputImage,(GridGeometry2D)output.getGridGeometry(),sd,new GridCoverage[]{output},properties);
}
