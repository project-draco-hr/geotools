{
  int count=0;
  final TileManager[] managers;
  if (!hasPendingGridToCRS(tiles)) {
    if (!tiles.isEmpty()) {
      count=1;
    }
    managers=new TileManager[count];
  }
 else {
    final Collection<Tile> remainings=new ArrayList<Tile>(Math.min(16,tiles.size()));
    final RegionCalculator calculator=new RegionCalculator();
    for (    final Tile tile : tiles) {
      if (!calculator.add(tile)) {
        remainings.add(tile);
      }
    }
    if (!remainings.isEmpty()) {
      count=1;
    }
    final Map<ImageGeometry,Tile[]> split=calculator.tiles();
    managers=new TileManager[split.size() + count];
    for (    final Map.Entry<ImageGeometry,Tile[]> entry : split.entrySet()) {
      final TileManager manager=createGeneric(entry.getValue());
      manager.geometry=entry.getKey();
      managers[count++]=manager;
    }
    tiles=remainings;
  }
  if (!tiles.isEmpty()) {
    managers[0]=createGeneric(tiles.toArray(new Tile[tiles.size()]));
  }
  return managers;
}
