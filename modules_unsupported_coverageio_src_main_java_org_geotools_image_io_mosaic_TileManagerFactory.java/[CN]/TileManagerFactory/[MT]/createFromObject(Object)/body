{
  final TileManager[] managers;
  if (tiles == null) {
    managers=null;
  }
 else   if (tiles instanceof TileManager[]) {
    managers=((TileManager[])tiles).clone();
  }
 else   if (tiles instanceof TileManager) {
    managers=new TileManager[]{(TileManager)tiles};
  }
 else   if (tiles instanceof Tile[]) {
    managers=create((Tile[])tiles);
  }
 else   if (tiles instanceof Collection) {
    @SuppressWarnings("unchecked") final Collection<Tile> c=(Collection<Tile>)tiles;
    managers=create(c);
  }
 else {
    throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_CLASS_$2,tiles.getClass(),TileManager.class));
  }
  if (managers != null) {
    for (int i=0; i < managers.length; i++) {
      if (managers[i] == null) {
        throw new IllegalArgumentException(Errors.format(ErrorKeys.NULL_ARGUMENT_$1,"input[" + i + ']'));
      }
    }
  }
  return managers;
}
