{
  URL urlToUse;
  if (o instanceof File) {
    try {
      urlToUse=((File)o).toURI().toURL();
    }
 catch (    MalformedURLException e) {
      if (LOGGER.isLoggable(Level.FINE))       LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
      return false;
    }
  }
 else   if (o instanceof URL) {
    urlToUse=(URL)o;
  }
 else   if (o instanceof String) {
    try {
      urlToUse=new File((String)o).toURI().toURL();
    }
 catch (    MalformedURLException e) {
      try {
        urlToUse=new URL((String)o);
      }
 catch (      MalformedURLException e1) {
        if (LOGGER.isLoggable(Level.FINE))         LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
        return false;
      }
    }
  }
 else {
    return false;
  }
  try {
    final GTopo30Reader reader=new GTopo30Reader(urlToUse);
    reader.dispose();
  }
 catch (  IOException e) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
    return false;
  }
  return true;
}
