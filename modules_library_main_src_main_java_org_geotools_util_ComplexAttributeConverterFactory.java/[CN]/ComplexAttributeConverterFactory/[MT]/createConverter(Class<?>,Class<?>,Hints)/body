{
  if (ComplexAttribute.class.isAssignableFrom(source)) {
    return new Converter(){
      public Object convert(      Object source,      Class target) throws Exception {
        if (source instanceof ComplexAttribute) {
          Collection<? extends Property> valueMap=((ComplexAttribute)source).getValue();
          if (valueMap.isEmpty() || valueMap.size() > 1) {
            return null;
          }
 else {
            source=valueMap.iterator().next();
            if (AttributeImpl.class.equals(source.getClass())) {
              return Converters.convert(((Attribute)source).getValue(),target);
            }
          }
        }
        return null;
      }
    }
;
  }
  if (GeometryAttribute.class.isAssignableFrom(source)) {
    return new Converter(){
      public Object convert(      Object source,      Class target) throws Exception {
        if (source instanceof GeometryAttribute) {
          return Converters.convert(((GeometryAttribute)source).getValue(),target);
        }
        return null;
      }
    }
;
  }
  if (FeatureId.class.isAssignableFrom(target) && String.class.isAssignableFrom(source)) {
    return new Converter(){
      public Object convert(      Object source,      Class target){
        if (source != null) {
          return new FeatureIdImpl((String)source);
        }
        return null;
      }
    }
;
  }
  return null;
}
