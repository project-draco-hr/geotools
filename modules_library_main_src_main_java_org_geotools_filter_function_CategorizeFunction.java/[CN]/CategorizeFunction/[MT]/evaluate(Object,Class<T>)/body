{
  final Expression lookupExp=parameters.get(0);
  Double value=lookupExp.evaluate(object,Double.class);
  if (value == null) {
    value=Converters.convert(object,Double.class);
  }
  if (value != null && staticTable) {
    int expIdx=Arrays.binarySearch(thresholds,value);
    int valIdx;
    if (expIdx >= 0) {
      if (PRECEDING.equals(belongsTo)) {
        valIdx=expIdx;
      }
 else {
        valIdx=expIdx + 1;
      }
    }
 else {
      valIdx=-expIdx - 1;
    }
    if (convertedValues == null) {
synchronized (this) {
        if (convertedValues == null) {
          convertedValues=new Object[values.length];
          for (int i=0; i < convertedValues.length; i++) {
            convertedValues[i]=values[i].evaluate(object,context);
          }
          convertedValuesContext=context;
        }
      }
    }
    if (convertedValuesContext == context) {
      return (T)convertedValues[valIdx];
    }
 else {
      return values[valIdx].evaluate(object,context);
    }
  }
  Expression currentExp=parameters.get(1);
  final List<Expression> splits;
  if (parameters.size() == 2) {
    return currentExp.evaluate(object,context);
  }
 else   if (parameters.size() % 2 == 0) {
    splits=parameters.subList(2,parameters.size());
  }
 else {
    splits=parameters.subList(2,parameters.size() - 1);
  }
  FilterFactory2 ff=CommonFactoryFinder.getFilterFactory2(null);
  for (int i=0; i < splits.size(); i+=2) {
    Expression threshholdExp=splits.get(i);
    Expression rangedExp=splits.get(i + 1);
    Filter isIncludedInThreshold;
    if (PRECEDING.equals(belongsTo)) {
      isIncludedInThreshold=ff.greater(lookupExp,threshholdExp);
    }
 else {
      isIncludedInThreshold=ff.greaterOrEqual(lookupExp,threshholdExp);
    }
    if (isIncludedInThreshold.evaluate(object)) {
      currentExp=rangedExp;
    }
 else {
      break;
    }
  }
  return currentExp.evaluate(object,context);
}
