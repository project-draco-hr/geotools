{
  AttributeDescriptor[] innerTypes=new AttributeDescriptor[names.length];
  for (int i=0; i < names.length; i++) {
    innerTypes[i]=getSchema().getDescriptor(names[i].getLocalPart());
    if (innerTypes[i] == null)     throw new IllegalArgumentException("Unknon attribute " + names[i].getLocalPart());
  }
  Filter[] splitted=delegate.splitFilter(filter);
  Filter preFilter=splitted[0];
  Filter postFilter=splitted[1];
  if (postFilter != null && !Filter.INCLUDE.equals(postFilter)) {
    super.modifyFeatures(innerTypes,values,filter);
  }
 else {
    Connection cx=null;
    Transaction tx=getState().getTransaction();
    try {
      cx=getDataStore().getConnection(tx);
      SimpleFeatureType featureType=getSchema();
      try {
        getDataStore().ensureAuthorization(featureType,preFilter,getTransaction(),cx);
      }
 catch (      SQLException e) {
        throw (IOException)new IOException().initCause(e);
      }
      ContentState state=getEntry().getState(transaction);
      ReferencedEnvelope bounds=new ReferencedEnvelope(getSchema().getCoordinateReferenceSystem());
      if (state.hasListener()) {
        ReferencedEnvelope before=getBounds(new Query(getSchema().getTypeName(),preFilter));
        if (before != null && !before.isEmpty()) {
          bounds=before;
        }
      }
      try {
        getDataStore().update(getSchema(),innerTypes,values,preFilter,cx);
      }
 catch (      SQLException e) {
        throw (IOException)(new IOException(e.getMessage()).initCause(e));
      }
      if (state.hasListener()) {
        for (        Object value : values) {
          if (value instanceof Geometry) {
            Geometry geometry=(Geometry)value;
            bounds.expandToInclude(geometry.getEnvelopeInternal());
          }
        }
        FeatureEvent event=new FeatureEvent(this,Type.CHANGED,bounds,preFilter);
        state.fireFeatureEvent(event);
      }
    }
  finally {
      if (tx == null || tx == Transaction.AUTO_COMMIT) {
        getDataStore().closeSafe(cx);
      }
    }
  }
}
