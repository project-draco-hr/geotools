{
  System.out.println("Welcome to GeoTools:" + GeoTools.getVersion());
  File file=promptShapeFile(args);
  try {
    Map<String,Serializable> connectParameters=new HashMap<String,Serializable>();
    connectParameters.put("url",file.toURI().toURL());
    connectParameters.put("create spatial index",true);
    DataStore dataStore=DataStoreFinder.getDataStore(connectParameters);
    if (dataStore == null) {
      Logger.getLogger(FirstProject.class.getName()).log(Level.WARNING,"No DataStore found to handle" + file.getPath());
      System.exit(1);
    }
    String[] typeNames=dataStore.getTypeNames();
    String typeName=typeNames[0];
    SimpleFeatureSource featureSource=dataStore.getFeatureSource(typeName);
    SimpleFeatureCollection collection=featureSource.getFeatures();
    SimpleFeatureIterator iterator=collection.features();
    double totalLength=0.0;
    try {
      while (iterator.hasNext()) {
        SimpleFeature feature=iterator.next();
        Geometry geometry=(Geometry)feature.getDefaultGeometry();
        totalLength+=geometry.getLength();
      }
    }
  finally {
      if (iterator != null) {
        iterator.close();
      }
    }
    String units="";
    CoordinateReferenceSystem crs=featureSource.getSchema().getCoordinateReferenceSystem();
    if (crs != null) {
      Unit<?> distanceUnit=crs.getCoordinateSystem().getAxis(0).getUnit();
      units=distanceUnit.toString();
    }
    JOptionPane.showMessageDialog(null,String.format("Total length is %.4f %s",totalLength,units));
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.exit(1);
  }
  System.exit(0);
}
