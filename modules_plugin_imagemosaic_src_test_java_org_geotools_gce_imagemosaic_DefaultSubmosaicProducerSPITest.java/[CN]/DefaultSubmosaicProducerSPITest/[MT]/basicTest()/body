{
  Map<String,GranuleAcceptorFactorySPI> spiMap=GranuleAcceptorFactorySPIFinder.getGranuleAcceptorFactorySPI();
  assertNotNull(spiMap);
  Assert.assertTrue(!spiMap.isEmpty());
  Assert.assertTrue(spiMap.containsKey(HeterogeneousCRSAcceptorFactory.class.getName()));
  Assert.assertTrue(spiMap.containsKey(DefaultGranuleAcceptorFactory.class.getName()));
  assertNotNull(spiMap.get(HeterogeneousCRSAcceptorFactory.class.getName()));
  GranuleAcceptorFactorySPI spi=spiMap.get(HeterogeneousCRSAcceptorFactory.class.getName());
  List<GranuleAcceptor> acceptors=spi.create();
  assertNotNull(acceptors);
  Assert.assertTrue(acceptors.size() == 1);
  GranuleAcceptor granuleAcceptor=acceptors.get(0);
  Assert.assertTrue(granuleAcceptor.getClass().equals(ColorCheckAcceptor.class));
  assertNotNull(spiMap.get(DefaultGranuleAcceptorFactory.class.getName()));
  spi=spiMap.get(DefaultGranuleAcceptorFactory.class.getName());
  acceptors=spi.create();
  assertNotNull(acceptors);
  Assert.assertTrue(acceptors.size() == 2);
  granuleAcceptor=acceptors.get(0);
  Assert.assertTrue(granuleAcceptor.getClass().equals(ColorCheckAcceptor.class) || granuleAcceptor.getClass().equals(HomogeneousCRSAcceptor.class));
  granuleAcceptor=acceptors.get(1);
  Assert.assertTrue(granuleAcceptor.getClass().equals(ColorCheckAcceptor.class) || granuleAcceptor.getClass().equals(HomogeneousCRSAcceptor.class));
}
