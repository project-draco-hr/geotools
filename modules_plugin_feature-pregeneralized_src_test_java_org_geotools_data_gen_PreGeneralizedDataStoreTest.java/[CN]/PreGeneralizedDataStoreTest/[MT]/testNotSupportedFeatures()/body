{
  GeneralizationInfosProvider provider=new GeneralizationInfosProviderImpl();
  GeneralizationInfos ginfos=null;
  PreGeneralizedDataStore ds=null;
  String typeName=null;
  try {
    ginfos=provider.getGeneralizationInfos("src/test/resources/geninfo_only_base.xml");
    ds=new PreGeneralizedDataStore(ginfos,TestSetup.REPOSITORY);
    typeName=ds.getTypeNames()[0];
  }
 catch (  IOException ex) {
    ex.printStackTrace();
    Assert.fail();
  }
  boolean error=true;
  try {
    ds.getFeatureWriter(typeName,Transaction.AUTO_COMMIT);
  }
 catch (  Throwable ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  error=true;
  try {
    ds.getFeatureWriter(typeName,null,Transaction.AUTO_COMMIT);
  }
 catch (  Throwable ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  error=true;
  try {
    ds.getFeatureWriterAppend(typeName,Transaction.AUTO_COMMIT);
  }
 catch (  Throwable ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  error=true;
  try {
    ds.getLockingManager();
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  error=true;
  try {
    ds.updateSchema("GenFeatures",null);
  }
 catch (  Throwable ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  error=true;
  try {
    ds.updateSchema(new NameImpl("GenFeatures"),null);
  }
 catch (  Throwable ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  error=true;
  try {
    ds.createSchema(null);
  }
 catch (  Throwable ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
}
