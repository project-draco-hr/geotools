{
  StringBuilder builder=new StringBuilder();
  builder.append("grid:\n" + "  name: SIGMA:957\n" + "rules:\n"+ "- zoom: [0,max]\n"+ "- zoom: [min,0]\n"+ "- zoom: [2,max]\n"+ "- zoom: [min,2]\n"+ "- zoom: [5,max]\n"+ "- zoom: [min,5]\n"+ "- zoom: [6, max]\n"+ "- zoom: [min, 6]\n"+ "- zoom: [-1, max]\n"+ "- zoom: [min, -1]\n"+ "- zoom: [min, foo]\n"+ "- zoom: [foo, max]\n"+ "- zoom: [0.5, max]\n"+ "- zoom: [min, 0.5]\n");
  ZoomContextFinder finder=createMock("finder",ZoomContextFinder.class);
  ZoomContext zctxt=createMock("zctxt",ZoomContext.class);
  expect(finder.get("SIGMA:957")).andStubReturn(zctxt);
  expect(zctxt.isInRange(0)).andStubReturn(true);
  expect(zctxt.isInRange(2)).andStubReturn(true);
  expect(zctxt.isInRange(5)).andStubReturn(true);
  expect(zctxt.isInRange(-1)).andStubReturn(false);
  expect(zctxt.isInRange(6)).andStubReturn(false);
  replay(finder,zctxt);
  List<MarkedYAMLException> errors=validate(builder.toString(),Collections.singletonList(finder));
  assertThat(errors,contains(hasProperty("problemMark",problemOn(10)),hasProperty("problemMark",problemOn(11)),hasProperty("problemMark",problemOn(12)),hasProperty("problemMark",problemOn(13)),hasProperty("problemMark",problemOn(14)),hasProperty("problemMark",problemOn(15)),hasProperty("problemMark",problemOn(16)),hasProperty("problemMark",problemOn(17))));
  verify(finder,zctxt);
}
