{
  final GranuleStore store=(GranuleStore)mosaicReader.getGranules(coverageName,false);
  if (store == null) {
    throw new IllegalArgumentException("No valid granule store has been found for: " + coverageName);
  }
  final SimpleFeatureType indexSchema=store.getSchema();
  final SimpleFeature feature=new ShapefileCompatibleFeature(DataUtilities.template(indexSchema));
  store.setTransaction(transaction);
  final ListFeatureCollection collection=new ListFeatureCollection(indexSchema);
  final String fileLocation=prepareLocation(configuration,fileBeingProcessed);
  final String locationAttribute=configuration.getParameter(Prop.LOCATION_ATTRIBUTE);
  MosaicConfigurationBean mosaicConfiguration=this.getConfigurations().get(coverageName);
  GranuleHandler geometryHandler=this.getGeometryHandler();
  if (inputReader instanceof StructuredGridCoverage2DReader) {
    handleStructuredGridCoverage(((StructuredGridCoverage2DReader)inputReader).getGranules(coverageName,true),fileBeingProcessed,inputReader,propertiesCollectors,indexSchema,feature,collection,fileLocation,locationAttribute,mosaicConfiguration);
  }
 else {
    geometryHandler.handleGranule(fileBeingProcessed,inputReader,feature,indexSchema,null,null,mosaicConfiguration);
    feature.setAttribute(locationAttribute,fileLocation);
    updateAttributesFromCollectors(feature,fileBeingProcessed,inputReader,propertiesCollectors);
    collection.add(feature);
  }
  Filter filter=Utils.FF.equal(Utils.FF.property(locationAttribute),Utils.FF.literal(fileLocation),!isCaseSensitiveFileSystem(fileBeingProcessed));
  store.removeGranules(filter);
  store.addGranules(collection);
}
