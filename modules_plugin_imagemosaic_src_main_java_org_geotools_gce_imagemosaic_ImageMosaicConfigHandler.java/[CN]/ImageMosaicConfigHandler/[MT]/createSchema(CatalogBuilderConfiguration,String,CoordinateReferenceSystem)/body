{
  SimpleFeatureType indexSchema=null;
  SchemaType schema=null;
  String schemaAttributes=null;
  Indexer indexer=runConfiguration.getIndexer();
  if (indexer != null) {
    SchemasType schemas=indexer.getSchemas();
    Coverage coverage=IndexerUtils.getCoverage(indexer,name);
    if (coverage != null) {
      schema=IndexerUtils.getSchema(indexer,coverage);
    }
    if (schema != null) {
      schemaAttributes=schema.getAttributes();
    }
 else     if (schemas != null) {
      List<SchemaType> schemaList=schemas.getSchema();
      if (!schemaList.isEmpty()) {
        schemaAttributes=schemaList.get(0).getAttributes();
      }
    }
  }
  if (schemaAttributes == null) {
    schemaAttributes=runConfiguration.getSchema(name);
  }
  if (schemaAttributes != null) {
    schemaAttributes=schemaAttributes.trim();
    try {
      indexSchema=DataUtilities.createType(name,schemaAttributes);
      indexSchema=DataUtilities.createSubType(indexSchema,DataUtilities.attributeNames(indexSchema),actualCRS);
      if (actualCRS != null) {
        Set<ReferenceIdentifier> identifiers=actualCRS.getIdentifiers();
        if (identifiers == null || identifiers.isEmpty()) {
          Integer code=CRS.lookupEpsgCode(actualCRS,true);
          int nativeSrid=code == null ? 0 : code;
          GeometryDescriptor geometryDescriptor=indexSchema.getGeometryDescriptor();
          if (geometryDescriptor != null) {
            Map<Object,Object> userData=geometryDescriptor.getUserData();
            userData.put(JDBCDataStore.JDBC_NATIVE_SRID,nativeSrid);
          }
        }
      }
    }
 catch (    Throwable e) {
      LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
      indexSchema=null;
    }
  }
  if (indexSchema == null) {
    final SimpleFeatureTypeBuilder featureBuilder=new SimpleFeatureTypeBuilder();
    featureBuilder.setName(name);
    featureBuilder.setNamespaceURI("http://www.geo-solutions.it/");
    featureBuilder.add(runConfiguration.getParameter(Prop.LOCATION_ATTRIBUTE).trim(),String.class);
    featureBuilder.add("the_geom",Polygon.class,actualCRS);
    featureBuilder.setDefaultGeometry("the_geom");
    String timeAttribute=runConfiguration.getTimeAttribute();
    addAttributes(timeAttribute,featureBuilder,Date.class);
    indexSchema=featureBuilder.buildFeatureType();
  }
  return indexSchema;
}
