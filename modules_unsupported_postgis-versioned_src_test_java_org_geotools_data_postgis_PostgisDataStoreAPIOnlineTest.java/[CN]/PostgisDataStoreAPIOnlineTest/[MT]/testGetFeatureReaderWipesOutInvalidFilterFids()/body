{
  FeatureReader<SimpleFeatureType,SimpleFeature> reader;
  reader=data.getFeatureReader(new Query("road"),Transaction.AUTO_COMMIT);
  final String fid1, fid2, fid3;
  try {
    fid1=reader.next().getID();
    fid2=reader.next().getID();
    fid3=reader.next().getID();
  }
  finally {
    reader.close();
  }
  FilterFactory2 factory=CommonFactoryFinder.getFilterFactory2(null);
  Set<Identifier> ids=new HashSet<Identifier>();
  ids.add(factory.featureId(fid1));
  ids.add(factory.featureId(fid2));
  ids.add(factory.featureId("_" + fid3));
  org.opengis.filter.Filter filter=factory.id(ids);
  Transaction t=new DefaultTransaction();
  reader=data.getFeatureReader(new Query("road",filter),t);
  assertNotNull(reader);
  try {
    Set<String> expected=new HashSet<String>();
    expected.add(fid1);
    expected.add(fid2);
    Set<String> returned=new HashSet<String>();
    assertTrue(reader.hasNext());
    returned.add(reader.next().getID());
    assertTrue(reader.hasNext());
    returned.add(reader.next().getID());
    assertFalse("expected only 2 features",reader.hasNext());
    assertEquals(expected,returned);
  }
  finally {
    reader.close();
    t.close();
  }
}
