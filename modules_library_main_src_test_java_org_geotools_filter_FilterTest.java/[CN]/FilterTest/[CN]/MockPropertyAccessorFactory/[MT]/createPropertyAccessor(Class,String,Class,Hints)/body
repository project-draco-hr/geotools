{
  if (!MockDataObject.class.equals(type)) {
    return null;
  }
  return new PropertyAccessor(){
    public boolean canHandle(    Object object,    String xpath,    Class target){
      return object instanceof MockDataObject;
    }
    public Object get(    Object object,    String xpath,    Class target) throws IllegalArgumentException {
      if (object == null)       return null;
      try {
        Field field=MockDataObject.class.getField(xpath);
        Object value=field.get(object);
        return value;
      }
 catch (      Exception e) {
        throw (IllegalArgumentException)new IllegalArgumentException("Illegal property name: " + xpath).initCause(e);
      }
    }
    public void set(    Object object,    String xpath,    Object value,    Class target) throws IllegalArgumentException {
      throw new UnsupportedOperationException();
    }
  }
;
}
