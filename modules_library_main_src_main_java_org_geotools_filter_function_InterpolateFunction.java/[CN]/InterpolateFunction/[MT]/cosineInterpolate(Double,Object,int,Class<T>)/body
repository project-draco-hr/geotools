{
  if (segment < 1 || segment >= interpPoints.size()) {
    throw new IllegalArgumentException("segment index outside valid range");
  }
  Double data1=interpPoints.get(segment).data.evaluate(object,Double.class);
  Double data0=interpPoints.get(segment - 1).data.evaluate(object,Double.class);
  if (method == Method.COLOR) {
    Color color1=interpPoints.get(segment).value.evaluate(object,Color.class);
    Color color0=interpPoints.get(segment - 1).value.evaluate(object,Color.class);
    int r=(int)clamp(Math.round(doCosine(lookupValue,data0,data1,color0.getRed(),color1.getRed())),0,255);
    int g=(int)clamp(Math.round(doCosine(lookupValue,data0,data1,color0.getGreen(),color1.getGreen())),0,255);
    int b=(int)clamp(Math.round(doCosine(lookupValue,data0,data1,color0.getBlue(),color1.getBlue())),0,255);
    return (T)new Color(r,g,b);
  }
 else {
    Double value1=interpPoints.get(segment).value.evaluate(object,Double.class);
    Double value0=interpPoints.get(segment - 1).value.evaluate(object,Double.class);
    double interpolated=doCosine(lookupValue,data0,data1,value0,value1);
    return Converters.convert(interpolated,context);
  }
}
