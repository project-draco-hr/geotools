{
  final LiteFeatureTypeStyle[] fts_array=(LiteFeatureTypeStyle[])lfts.toArray(new LiteFeatureTypeStyle[lfts.size()]);
  if (collection != null) {
    Iterator iterator=collection.iterator();
    if (iterator == null)     return;
    try {
      boolean clone=isCloningRequired(currLayer,fts_array);
      RenderableFeature rf=new RenderableFeature(currLayer,clone);
      while (iterator.hasNext() && !renderingStopRequested) {
        try {
          rf.setFeature(iterator.next());
          for (          LiteFeatureTypeStyle liteFeatureTypeStyle : fts_array) {
            rf.setScreenMap(liteFeatureTypeStyle.screenMap);
            process(rf,liteFeatureTypeStyle,scaleRange,at,destinationCrs,layerId);
          }
        }
 catch (        Throwable tr) {
          fireErrorEvent(tr);
        }
      }
      requests.put(new MergeLayersRequest(graphics,fts_array));
    }
 catch (    InterruptedException e) {
      fireErrorEvent(e);
    }
 finally {
      if (iterator instanceof Closeable) {
        try {
          ((Closeable)iterator).close();
        }
 catch (        IOException e) {
          LOGGER.log(Level.FINER,e.getMessage(),e);
        }
      }
    }
  }
  if (features != null) {
    FeatureIterator<?> iterator=features.features();
    if (iterator == null)     return;
    try {
      boolean clone=isCloningRequired(currLayer,fts_array);
      RenderableFeature rf=new RenderableFeature(currLayer,clone);
      while (iterator.hasNext() && !renderingStopRequested) {
        try {
          rf.setFeature(iterator.next());
          for (          LiteFeatureTypeStyle liteFeatureTypeStyle : fts_array) {
            rf.setScreenMap(liteFeatureTypeStyle.screenMap);
            process(rf,liteFeatureTypeStyle,scaleRange,at,destinationCrs,layerId);
          }
        }
 catch (        Throwable tr) {
          fireErrorEvent(tr);
        }
      }
      requests.put(new MergeLayersRequest(graphics,fts_array));
    }
 catch (    InterruptedException e) {
      fireErrorEvent(e);
    }
 finally {
      iterator.close();
    }
  }
}
