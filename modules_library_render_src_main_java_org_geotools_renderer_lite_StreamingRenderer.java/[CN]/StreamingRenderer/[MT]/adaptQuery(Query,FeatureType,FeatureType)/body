{
  Query result=new Query(targetSchema.getName().getLocalPart());
  final GeometryDescriptor gdTarget=targetSchema.getGeometryDescriptor();
  final GeometryDescriptor gdSource=originalSchema.getGeometryDescriptor();
  if (gdTarget != null && gdSource != null && !gdTarget.getLocalName().equals(gdSource.getLocalName())) {
    String source=gdSource.getLocalName();
    String target=gdTarget.getLocalName();
    List<String> attributes=new ArrayList(Arrays.asList(query.getPropertyNames()));
    for (int i=0; i < attributes.size(); ) {
      String attribute=attributes.get(i);
      if (attribute.equals(source)) {
        attributes.set(i,target);
        i++;
      }
 else       if (targetSchema.getDescriptor(attribute) == null && (attribute.equals("params") || attribute.equals("grid"))) {
        attributes.remove(i);
      }
 else {
        i++;
      }
    }
    result.setPropertyNames(attributes);
    AttributeRenameVisitor visitor=new AttributeRenameVisitor(source,target);
    Filter original=query.getFilter();
    Filter renamedFilter=(Filter)original.accept(visitor,null);
    result.setFilter(renamedFilter);
  }
 else   if (originalSchema instanceof SimpleFeatureType && (FeatureUtilities.isWrappedCoverage((SimpleFeatureType)originalSchema) || FeatureUtilities.isWrappedCoverageReader((SimpleFeatureType)originalSchema))) {
    result.setFilter(query.getFilter());
  }
 else {
    result.setPropertyNames(query.getPropertyNames());
    result.setFilter(query.getFilter());
  }
  return result;
}
