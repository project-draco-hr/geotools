{
  Expression transform=featureTypeStyles.get(0).transformation;
  inMemoryGeneralization=true;
  boolean hasTransformation=transform != null;
  Query styleQuery=getStyleQuery(featureSource,schema,featureTypeStyles,mapArea,destinationCrs,sourceCrs,screenSize,geometryAttribute,at,hasTransformation);
  Query definitionQuery=getDefinitionQuery(currLayer,featureSource,sourceCrs);
  FeatureCollection features=null;
  if (hasTransformation) {
    GridGeometry2D gridGeometry=getRasterGridGeometry(destinationCrs,sourceCrs);
    RenderingTransformationHelper helper=new RenderingTransformationHelper(){
      @Override protected GridCoverage2D readCoverage(      GridCoverage2DReader reader,      Object params,      GridGeometry2D readGG) throws IOException {
        GeneralParameterValue[] readParams=(GeneralParameterValue[])params;
        Interpolation interpolation=getRenderingInterpolation(layer);
        GridCoverageReaderHelper helper;
        try {
          helper=new GridCoverageReaderHelper(reader,readGG.getGridRange2D(),ReferencedEnvelope.reference(readGG.getEnvelope2D()),interpolation);
          return helper.readCoverage(readParams);
        }
 catch (        InvalidGridGeometryException|FactoryException e) {
          throw new IOException("Failure reading the coverage",e);
        }
      }
    }
;
    Object result=helper.applyRenderingTransformation(transform,featureSource,definitionQuery,styleQuery,gridGeometry,sourceCrs,java2dHints);
    if (result == null) {
      return null;
    }
 else     if (result instanceof FeatureCollection) {
      features=(FeatureCollection)result;
    }
 else     if (result instanceof GridCoverage2D) {
      GridCoverage2D coverage=(GridCoverage2D)result;
      if ((schema instanceof SimpleFeatureType && !FeatureUtilities.isWrappedCoverage((SimpleFeatureType)schema))) {
        coverage=new DisposableGridCoverage(coverage);
      }
      features=FeatureUtilities.wrapGridCoverage(coverage);
    }
 else     if (result instanceof GridCoverage2DReader) {
      features=FeatureUtilities.wrapGridCoverageReader((GridCoverage2DReader)result,null);
    }
 else {
      throw new IllegalArgumentException("Don't know how to handle the results of the transformation, " + "the supported result types are FeatureCollection, GridCoverage2D " + "and GridCoverage2DReader, but we got: "+ result.getClass());
    }
  }
 else {
    Query mixed=DataUtilities.mixQueries(definitionQuery,styleQuery,null);
    checkAttributeExistence(featureSource.getSchema(),mixed);
    features=featureSource.getFeatures(mixed);
    features=RendererUtilities.fixFeatureCollectionReferencing(features,sourceCrs);
  }
  if (!(features instanceof SimpleFeatureCollection)) {
    features.getSchema().getUserData().put("targetCrs",destinationCrs);
    features.getSchema().getUserData().put("targetVersion","wms:getmap");
  }
  return features;
}
