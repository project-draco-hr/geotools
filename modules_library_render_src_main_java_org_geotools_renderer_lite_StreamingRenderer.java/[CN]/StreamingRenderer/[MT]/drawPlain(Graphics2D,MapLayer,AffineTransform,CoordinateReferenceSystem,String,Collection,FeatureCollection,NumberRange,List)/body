{
  final LiteFeatureTypeStyle[] fts_array=(LiteFeatureTypeStyle[])lfts.toArray(new LiteFeatureTypeStyle[lfts.size()]);
  for (  LiteFeatureTypeStyle liteFeatureTypeStyle : fts_array) {
    if (collection != null) {
      Iterator iterator=collection.iterator();
      if (iterator == null) {
        return;
      }
      try {
        boolean clone=isCloningRequired(currLayer,fts_array);
        RenderableFeature rf=new RenderableFeature(currLayer,clone);
        while (iterator.hasNext() && !renderingStopRequested) {
          try {
            rf.setFeature(iterator.next());
            process(rf,liteFeatureTypeStyle,scaleRange,at,destinationCrs,layerId);
          }
 catch (          Throwable tr) {
            fireErrorEvent(tr);
          }
        }
      }
  finally {
        if (iterator instanceof Closeable) {
          try {
            ((Closeable)iterator).close();
          }
 catch (          IOException e) {
            LOGGER.log(Level.FINER,e.getMessage(),e);
          }
        }
      }
    }
    if (features != null) {
      FeatureIterator<?> iterator=features.features();
      if (iterator == null) {
        return;
      }
      try {
        boolean clone=isCloningRequired(currLayer,fts_array);
        RenderableFeature rf=new RenderableFeature(currLayer,clone);
        while (iterator.hasNext() && !renderingStopRequested) {
          try {
            rf.setFeature(iterator.next());
            process(rf,liteFeatureTypeStyle,scaleRange,at,destinationCrs,layerId);
          }
 catch (          Throwable tr) {
            fireErrorEvent(tr);
          }
        }
      }
  finally {
        iterator.close();
      }
    }
  }
}
