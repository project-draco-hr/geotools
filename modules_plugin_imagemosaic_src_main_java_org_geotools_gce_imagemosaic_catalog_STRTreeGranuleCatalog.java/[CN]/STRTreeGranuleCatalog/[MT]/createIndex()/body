{
  Iterator<GranuleDescriptor> it=null;
  Collection<GranuleDescriptor> features=null;
  try {
    features=wrappedCatalogue.getGranules();
    if (features == null)     throw new NullPointerException("The provided SimpleFeatureCollection is null, it's impossible to create an index!");
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.fine("Index Loaded");
    it=features.iterator();
    if (!it.hasNext())     throw new IllegalArgumentException("The provided SimpleFeatureCollection  or empty, it's impossible to create an index!");
    STRtree tree=new STRtree();
    while (it.hasNext()) {
      final GranuleDescriptor granule=it.next();
      final ReferencedEnvelope env=ReferencedEnvelope.reference(granule.getGranuleBBOX());
      final Geometry g=(Geometry)FeatureUtilities.getPolygon(new Rectangle2D.Double(env.getMinX(),env.getMinY(),env.getWidth(),env.getHeight()),0);
      tree.insert(g.getEnvelopeInternal(),granule);
    }
    tree.build();
    index=new SoftReference<STRtree>(tree);
  }
 catch (  Throwable e) {
    throw new IllegalArgumentException(e);
  }
}
