{
  String val=evt.getValue();
  ;
switch (state) {
case STARTED:
    state=State.MIN;
  if (val == null || val.isEmpty() || val.equalsIgnoreCase("min")) {
    min=null;
  }
 else {
    try {
      min=Integer.parseInt(evt.getValue());
      if (!context.getZCtxt().isInRange(min)) {
        context.error(String.format("Zoom level %d is out of range",min),evt.getStartMark());
      }
    }
 catch (    NumberFormatException ex) {
      context.error(ex.getMessage(),evt.getStartMark());
    }
  }
break;
case MIN:
state=State.MAX;
if (val == null || val.isEmpty() || val.equalsIgnoreCase("max")) {
return;
}
 else {
try {
int max=Integer.parseInt(evt.getValue());
if (!context.getZCtxt().isInRange(max)) {
  context.error(String.format("Zoom level %d is out of range",min),evt.getStartMark());
}
if (min != null && min.compareTo(max) > 0) {
  context.error(String.format("Maximum zoom level %d is less than minimum %d",max,min),evt.getStartMark());
}
}
 catch (NumberFormatException ex) {
context.error(ex.getMessage(),evt.getStartMark());
}
}
break;
default :
context.error(String.format("Unexpected scalar '%s'",val),evt.getStartMark());
break;
}
}
