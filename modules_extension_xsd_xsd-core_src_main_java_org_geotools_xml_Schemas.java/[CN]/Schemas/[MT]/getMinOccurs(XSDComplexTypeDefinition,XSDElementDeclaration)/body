{
  final XSDElementDeclaration fElement=element;
  final ArrayList minOccurs=new ArrayList();
  ElementVisitor visitor=new ElementVisitor(){
    public void visit(    XSDParticle particle){
      XSDElementDeclaration decl=(XSDElementDeclaration)particle.getContent();
      if (decl.isElementDeclarationReference()) {
        decl=decl.getResolvedElementDeclaration();
      }
      if (decl == fElement) {
        if (particle.isSetMinOccurs()) {
          minOccurs.add(new Integer(particle.getMinOccurs()));
        }
 else         if (particle.getContainer() instanceof XSDModelGroup && particle.getContainer().getContainer() instanceof XSDParticle) {
          particle=(XSDParticle)particle.getContainer().getContainer();
          minOccurs.add(new Integer(particle.getMinOccurs()));
        }
 else {
          minOccurs.add(1);
        }
      }
    }
  }
;
  visitElements(type,visitor,true);
  if (minOccurs.isEmpty()) {
    throw new IllegalArgumentException("Element: " + element + " not found in type: "+ type);
  }
  return ((Integer)minOccurs.get(0)).intValue();
}
