{
  Iterator<DataAccessFactory> availableDataStores;
  availableDataStores=DataAccessFinder.getAllDataStores();
  assertNotNull(availableDataStores);
  assertTrue(availableDataStores.hasNext());
  DataAccessFactory dsf1=availableDataStores.next();
  assertTrue(availableDataStores.hasNext());
  DataAccessFactory dsf2=availableDataStores.next();
  assertTrue(availableDataStores.hasNext());
  DataAccessFactory dsf3=availableDataStores.next();
  assertFalse(availableDataStores.hasNext());
  assertNotNull(dsf1);
  assertNotNull(dsf2);
  assertNotNull(dsf3);
  Set<Class> classes=new HashSet<Class>();
  classes.add(dsf1.getClass());
  classes.add(dsf2.getClass());
  classes.add(dsf3.getClass());
  assertTrue(classes.contains(MockDataAccessFactory.class));
  assertTrue(classes.contains(MockDataStoreFactory.class));
  assertTrue(classes.contains(MockUnavailableDataStoreFactory.class));
}
