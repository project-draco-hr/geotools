{
  List<Object[]> result=new ArrayList<>();
  result.add(new Object[]{"copy",AlphaComposite.getInstance(AlphaComposite.SRC)});
  result.add(new Object[]{"destination",AlphaComposite.getInstance(AlphaComposite.DST)});
  result.add(new Object[]{"source-over",AlphaComposite.getInstance(AlphaComposite.SRC_OVER)});
  result.add(new Object[]{"destination-over",AlphaComposite.getInstance(AlphaComposite.DST_OVER)});
  result.add(new Object[]{"source-in",AlphaComposite.getInstance(AlphaComposite.SRC_IN)});
  result.add(new Object[]{"destination-in",AlphaComposite.getInstance(AlphaComposite.DST_IN)});
  result.add(new Object[]{"source-out",AlphaComposite.getInstance(AlphaComposite.SRC_OUT)});
  result.add(new Object[]{"destination-out",AlphaComposite.getInstance(AlphaComposite.DST_OUT)});
  result.add(new Object[]{"source-atop",AlphaComposite.getInstance(AlphaComposite.SRC_ATOP)});
  result.add(new Object[]{"destination-atop",AlphaComposite.getInstance(AlphaComposite.DST_ATOP)});
  result.add(new Object[]{"xor",AlphaComposite.getInstance(AlphaComposite.XOR)});
  result.add(new Object[]{"multiply",BlendComposite.MULTIPLY_COMPOSITE});
  result.add(new Object[]{"screen",BlendComposite.SCREEN_COMPOSITE});
  result.add(new Object[]{"overlay",BlendComposite.OVERLAY_COMPOSITE});
  result.add(new Object[]{"darken",BlendComposite.DARKEN_COMPOSITE});
  result.add(new Object[]{"lighten",BlendComposite.LIGHTEN_COMPOSITE});
  result.add(new Object[]{"color-dodge",BlendComposite.COLOR_DODGE_COMPOSITE});
  result.add(new Object[]{"color-burn",BlendComposite.COLOR_BURN_COMPOSITE});
  result.add(new Object[]{"hard-light",BlendComposite.HARD_LIGHT_COMPOSITE});
  result.add(new Object[]{"soft-light",BlendComposite.SOFT_LIGHT_COMPOSITE});
  result.add(new Object[]{"difference",BlendComposite.DIFFERENCE_COMPOSITE});
  result.add(new Object[]{"exclusion",BlendComposite.EXCLUSION_COMPOSITE});
  return result;
}
