{
  EFeatureDataStore eStore;
  Map<String,Serializable> params;
  try {
    dTime();
    params=eParams.createParams(eResourceURI.toString(),null);
    eStore=eStoreFactory.createDataStore(params);
    for (    String eType : new String[]{"efeature.EFeatureData","efeature.EFeatureCompatibleData"}) {
      Query query=new Query(eType,Filter.INCLUDE);
      EFeatureReader eReader=eStore.getFeatureReader(query);
      query.getHints().put(EFeatureHints.EFEATURE_VALUES_DETACHED,false);
      ESimpleFeature f1=eReader.next();
      EFeature eFeature=f1.eFeature();
      EFeatureInfo eStructure=eFeature.getStructure();
      List<Object> eValues=f1.getAttributes();
      assertTrue("Features values are not same [" + eType + ",EFEATURE_VALUES_DETACHED==false]",eValues.equals(EFeatureUtils.eGetFeatureValues(eStructure,eFeature,Transaction.AUTO_COMMIT)));
      EAttribute eAttr=("efeature.EFeatureData".equals(eType) ? EFeatureTestsPackage.eINSTANCE.getEFeatureData_Attribute() : EFeatureTestsPackage.eINSTANCE.getEFeatureCompatibleData_Attribute());
      eFeature.eSet(eAttr,10L);
      if ("efeature.EFeatureCompatibleData".equals(eType)) {
        Object eData=eFeature.eGet(EFeaturePackage.eINSTANCE.getEFeature_Data());
      }
      eValues=f1.getAttributes();
      assertTrue("Features values are same [" + eType + ",EFEATURE_VALUES_DETACHED==false]",eValues.equals(EFeatureUtils.eGetFeatureValues(eStructure,eFeature,Transaction.AUTO_COMMIT)));
      eStore.dispose();
    }
  }
 catch (  Exception e) {
    LOGGER.log(Level.SEVERE,e.getMessage(),e);
    fail(e);
  }
}
