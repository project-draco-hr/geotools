{
  String input=CSVTestStrategySupport.buildInputString("fleem,zoo,morx","3,4,car","8,9.9,cdr");
  CSVFileState fileState=new CSVFileState(input,"bar");
  CSVStrategy strategy=new CSVAttributesOnlyStrategy(fileState);
  SimpleFeatureType featureType=strategy.getFeatureType();
  assertEquals("Invalid attribute count",3,featureType.getAttributeCount());
  List<AttributeDescriptor> attrs=featureType.getAttributeDescriptors();
  CSVTestStrategySupport.verifyType(attrs.get(0),Integer.class);
  CSVTestStrategySupport.verifyType(attrs.get(1),Double.class);
  CSVTestStrategySupport.verifyType(attrs.get(2),String.class);
  CSVIterator iterator=strategy.iterator();
  assertTrue("next value not read",iterator.hasNext());
  SimpleFeature feature=iterator.next();
  assertEquals("Invalid feature property",3,feature.getAttribute("fleem"));
  assertEquals("Invalid feature property",4.0,Double.parseDouble(feature.getAttribute("zoo").toString()),0.1);
  assertEquals("Invalid feature property","car",feature.getAttribute("morx"));
  assertTrue("next value not read",iterator.hasNext());
  feature=iterator.next();
  assertEquals("Invalid feature property",8,feature.getAttribute("fleem"));
  assertEquals("Invalid feature property",9.9,Double.parseDouble(feature.getAttribute("zoo").toString()),0.1);
  assertEquals("Invalid feature property","cdr",feature.getAttribute("morx"));
  assertFalse("extra next value",iterator.hasNext());
  try {
    iterator.next();
    fail("NoSuchElementException should have been thrown");
  }
 catch (  NoSuchElementException e) {
    assertTrue(true);
  }
}
