{
  assertEquals("Ellipsoid",DefaultEllipsoid.WGS84,DefaultGeodeticDatum.WGS84.getEllipsoid());
  assertEquals("PrimeMeridian",DefaultPrimeMeridian.GREENWICH,DefaultGeodeticDatum.WGS84.getPrimeMeridian());
  assertFalse("VerticalDatum",DefaultVerticalDatum.GEOIDAL.equals(DefaultVerticalDatum.ELLIPSOIDAL));
  assertEquals("Geoidal",VerticalDatumType.GEOIDAL,DefaultVerticalDatum.GEOIDAL.getVerticalDatumType());
  assertEquals("Ellipsoidal",VerticalDatumType.ELLIPSOIDAL,DefaultVerticalDatum.ELLIPSOIDAL.getVerticalDatumType());
  assertEquals("Ellipsoid","SPHEROID[\"WGS84\", 6378137.0, 298.257223563]",DefaultEllipsoid.WGS84.toWKT(0));
  assertEquals("PrimeMeridian","PRIMEM[\"Greenwich\", 0.0]",DefaultPrimeMeridian.GREENWICH.toWKT(0));
  assertEquals("VerticalDatum","VERT_DATUM[\"Geoidal\", 2005]",DefaultVerticalDatum.GEOIDAL.toWKT(0));
  assertEquals("VerticalDatum","VERT_DATUM[\"Ellipsoidal\", 2002]",DefaultVerticalDatum.ELLIPSOIDAL.toWKT(0));
  assertEquals("GeodeticDatum","DATUM[\"WGS84\", " + "SPHEROID[\"WGS84\", 6378137.0, 298.257223563]]",DefaultGeodeticDatum.WGS84.toWKT(0));
  final Map<String,Object> properties=new HashMap<String,Object>();
  properties.put("name","This is a name");
  properties.put("scope","This is a scope");
  properties.put("scope_fr","Valide dans ce domaine");
  properties.put("remarks","There is remarks");
  properties.put("remarks_fr","Voici des remarques");
  DefaultGeodeticDatum datum=new DefaultGeodeticDatum(properties,DefaultEllipsoid.createEllipsoid("Test",1000,1000,SI.METER),new DefaultPrimeMeridian("Test",12));
  assertEquals("name","This is a name",datum.getName().getCode());
  assertEquals("scope","This is a scope",datum.getScope().toString(null));
  assertEquals("scope_fr","Valide dans ce domaine",datum.getScope().toString(Locale.FRENCH));
  assertEquals("remarks","There is remarks",datum.getRemarks().toString(null));
  assertEquals("remarks_fr","Voici des remarques",datum.getRemarks().toString(Locale.FRENCH));
}
