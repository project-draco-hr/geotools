{
  Coordinate[] coords=ls.getCoordinates();
  Coordinate[][] controlPoints=getLineControlPoints(coords,alpha);
  final int N=coords.length;
  List<Coordinate> smoothCoords=new ArrayList<Coordinate>();
  double dist;
  for (int i=0; i < N - 1; i++) {
    dist=coords[i].distance(coords[i + 1]);
    if (dist < control.getMinLength()) {
      smoothCoords.add(new Coordinate(coords[i]));
    }
 else {
      int smoothN=control.getNumVertices(dist);
      Coordinate[] segment=cubicBezier(coords[i],coords[i + 1],controlPoints[i][1],controlPoints[i + 1][0],smoothN);
      int copyN=i < N - 1 ? segment.length - 1 : segment.length;
      for (int k=0; k < copyN; k++) {
        smoothCoords.add(segment[k]);
      }
    }
  }
  smoothCoords.add(coords[N - 1]);
  return geomFactory.createLineString(smoothCoords.toArray(new Coordinate[0]));
}
