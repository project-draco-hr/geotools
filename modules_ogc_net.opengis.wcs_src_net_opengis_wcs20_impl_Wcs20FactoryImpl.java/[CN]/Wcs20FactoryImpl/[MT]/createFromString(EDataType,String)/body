{
switch (eDataType.getClassifierID()) {
case Wcs20Package.VERSION_STRING_TYPE:
    return createVersionStringTypeFromString(eDataType,initialValue);
case Wcs20Package.VERSION_STRING_TYPE_1:
  return createVersionStringType_1FromString(eDataType,initialValue);
case Wcs20Package.QNAME:
return createQNameFromString(eDataType,initialValue);
default :
throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
}
}
