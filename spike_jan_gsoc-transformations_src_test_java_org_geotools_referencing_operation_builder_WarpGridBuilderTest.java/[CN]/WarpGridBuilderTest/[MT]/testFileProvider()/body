{
  try {
    Envelope env=new Envelope2D(crs,10,10,500,500);
    GeneralMatrix M=new GeneralMatrix(3,3);
    List<MappedPosition> mp=generateMappedPositions(env,15,0.01,crs);
    WarpGridBuilder builder=new IDWGridBuilder(mp,20,20,env,ProjectiveTransform.create(M));
    final DefaultMathTransformFactory factory=new DefaultMathTransformFactory();
    ParameterValueGroup gridParams=factory.getDefaultParameters("Warp Grid (from file)");
    String pathx=path + "dx";
    String pathy=path + "dy";
    builder.writeDeltaFile(0,pathx);
    builder.writeDeltaFile(1,pathy);
    gridParams.parameter("X_difference_file").setValue(pathx);
    gridParams.parameter("Y_difference_file").setValue(pathy);
    MathTransform mt=(new ProviderFile()).createMathTransform(gridParams);
    MathTransform mtOriginal=builder.getMathTransform();
    float[] wp=(float[])(((WarpGridTransform2D)mt).getParameterValues().parameter("warpPositions").getValue());
    float[] wpOrig=(float[])(((WarpGridTransform2D)mtOriginal).getParameterValues().parameter("warpPositions").getValue());
    for (int i=0; i < wp.length; i++) {
      Assert.assertEquals(wp[i],wpOrig[i],0.0001);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
