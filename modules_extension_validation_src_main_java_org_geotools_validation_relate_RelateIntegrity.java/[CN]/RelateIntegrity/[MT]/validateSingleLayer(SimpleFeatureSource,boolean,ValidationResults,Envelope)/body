{
  boolean success=true;
  Filter filter=null;
  SimpleFeatureCollection collection=featureSourceA.getFeatures(filter);
  SimpleFeatureIterator fr1=null;
  SimpleFeatureIterator fr2=null;
  try {
    fr1=collection.features();
    if (fr1 == null)     return false;
    while (fr1.hasNext()) {
      SimpleFeature f1=fr1.next();
      Geometry g1=(Geometry)f1.getDefaultGeometry();
      fr2=collection.features();
      while (fr2 != null && fr2.hasNext()) {
        SimpleFeature f2=fr2.next();
        Geometry g2=(Geometry)f2.getDefaultGeometry();
        if (!f1.getID().equals(f2.getID())) {
          if (g1.overlaps(g2) != expected || g1.contains(g2) != expected) {
            results.error(f1,((Geometry)f1.getDefaultGeometry()).getGeometryType() + " " + getGeomTypeRefA()+ " overlapped "+ getGeomTypeRefA()+ "("+ f2.getID()+ "), Result was not "+ expected);
            success=false;
          }
        }
      }
    }
  }
  finally {
    collection.close(fr1);
    collection.close(fr2);
  }
  return success;
}
