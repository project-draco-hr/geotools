{
  appendSeparator(true);
  int base=buffer.length();
  buffer.append(symbols.open);
  final IdentifiedObject info=(formattable instanceof IdentifiedObject) ? (IdentifiedObject)formattable : null;
  if (info != null) {
    final String c=getNameColor(info);
    if (c != null) {
      setColor(c);
    }
    buffer.append(symbols.quote).append(getName(info)).append(symbols.quote);
    if (c != null) {
      resetColor();
    }
  }
  indent(+1);
  lineChanged=false;
  String keyword=formattable.formatWKT(this);
  if (colorEnabled && invalidWKT) {
    invalidWKT=false;
    buffer.insert(base,ERROR_COLOR + X364.BACKGROUND_DEFAULT);
    base+=ERROR_COLOR.length();
  }
  buffer.insert(base,keyword);
  final Identifier identifier=getIdentifier(info);
  if (identifier != null && authorityAllowed(info)) {
    final Citation authority=identifier.getAuthority();
    if (authority != null) {
      InternationalString inter=authority.getTitle();
      String title=(inter != null) ? inter.toString(symbols.locale) : null;
      for (      final InternationalString alt : authority.getAlternateTitles()) {
        if (alt != null) {
          final String candidate=alt.toString(symbols.locale);
          if (candidate != null) {
            if (title == null || candidate.length() < title.length()) {
              title=candidate;
            }
          }
        }
      }
      if (title != null) {
        appendSeparator(lineChanged);
        buffer.append("AUTHORITY").append(symbols.open).append(symbols.quote).append(title).append(symbols.quote);
        final String code=identifier.getCode();
        if (code != null) {
          buffer.append(symbols.separator).append(symbols.quote).append(code).append(symbols.quote);
        }
        buffer.append(symbols.close);
      }
    }
  }
  buffer.append(symbols.close);
  lineChanged=true;
  indent(-1);
}
