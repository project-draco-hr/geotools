{
  if (new File(pathName).exists())   return new VPFFile(pathName);
  ArrayList<String> matches=new ArrayList<String>();
  matches.add("");
  StringTokenizer st=new StringTokenizer(pathName,File.separator);
  while (st.hasMoreTokens() && !matches.isEmpty()) {
    String curr=st.nextToken();
    String currUpper=curr.toUpperCase();
    String currLower=curr.toLowerCase();
    boolean useUpper=!curr.equals(currUpper);
    boolean useLower=!curr.equals(currLower);
    ArrayList<String> newMatches=new ArrayList<String>();
    for (Iterator<String> it=matches.iterator(); it.hasNext(); ) {
      String match=(String)it.next();
      String tmp=match + File.separator + curr;
      if (new File(tmp).exists())       newMatches.add(tmp);
 else {
        if (useUpper) {
          tmp=match + File.separator + currUpper;
          if (new File(tmp).exists())           newMatches.add(tmp);
        }
        if (useLower) {
          tmp=match + File.separator + currLower;
          if (new File(tmp).exists())           newMatches.add(tmp);
        }
      }
    }
    matches=newMatches;
  }
  if (matches.isEmpty()) {
    throw new FileNotFoundException("Could not find file: " + pathName);
  }
  return new VPFFile((String)matches.get(0));
}
