{
  String sortBySpec=options.get(FeatureTypeStyle.SORT_BY);
  if (sortBySpec == null) {
    return null;
  }
  List<SortBy> result=new ArrayList<>();
  String[] attributeSpecs=sortBySpec.split("\\s*,\\s*");
  for (  String attributeSpec : attributeSpecs) {
    String[] items=attributeSpec.split("\\s+");
    if (items.length < 1 || items.length > 2) {
      throw new IllegalArgumentException("Invalid sortBy specification, it should " + "be either in the form 'attribute' or 'attribute direction' " + "but instead it is: '" + attributeSpec + "'");
    }
    String attribute=items[0];
    SortOrder order=SortOrder.ASCENDING;
    if (items.length == 2) {
      String direction=items[1];
      if ("D".equalsIgnoreCase(direction) || "DESC".equalsIgnoreCase(direction)) {
        order=SortOrder.DESCENDING;
      }
 else       if (!"A".equalsIgnoreCase(direction) || "ASC".equalsIgnoreCase(direction)) {
        throw new IllegalArgumentException("Unknown sort order '" + order + "' in: '"+ attributeSpec+ "'");
      }
    }
    SortBy sort=ff.sort(attribute,order);
    result.add(sort);
  }
  return result.toArray(new SortBy[result.size()]);
}
