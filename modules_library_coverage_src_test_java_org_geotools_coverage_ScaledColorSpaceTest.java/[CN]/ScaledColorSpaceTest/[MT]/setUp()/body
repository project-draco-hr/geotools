{
  minimum=random.nextDouble() * 100;
  maximum=random.nextDouble() * 200 + minimum + 10;
  colors=new ScaledColorSpace(0,1,minimum,maximum);
  final int transparency=Transparency.OPAQUE;
  final int datatype=DataBuffer.TYPE_FLOAT;
  final ColorModel model=new ComponentColorModel(colors,false,false,transparency,datatype);
  final WritableRaster data=model.createCompatibleWritableRaster(200,200);
  final BufferedImage image=new BufferedImage(model,data,false,null);
  final int width=data.getWidth();
  final int height=data.getHeight();
  for (int x=width; --x >= 0; ) {
    for (int y=height; --y >= 0; ) {
      double v=Math.hypot((double)x / width - 0.5,(double)y / height - 0.5);
      v=v * (maximum - minimum) + minimum;
      data.setSample(x,y,0,v);
    }
  }
  this.image=image;
}
