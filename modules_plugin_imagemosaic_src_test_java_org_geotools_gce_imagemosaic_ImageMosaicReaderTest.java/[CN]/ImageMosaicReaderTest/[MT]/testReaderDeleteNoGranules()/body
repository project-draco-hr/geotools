{
  final String referenceDir="testRemove4";
  final File workDir=new File(TestData.file(this,"."),referenceDir);
  if (!workDir.mkdir()) {
    FileUtils.deleteDirectory(workDir);
    assertTrue("Unable to create workdir:" + workDir,workDir.mkdir());
  }
  final File zipFile=new File(workDir,"watertemp.zip");
  FileUtils.copyFile(TestData.file(this,"watertemp.zip"),zipFile);
  TestData.unzipFile(this,referenceDir + "/watertemp.zip");
  FileUtils.deleteQuietly(new File(workDir + "/watertemp.zip"));
  final URL timeElevURL=TestData.url(this,referenceDir);
  FileWriter out=null;
  try {
    out=new FileWriter(new File(TestData.file(this,"."),referenceDir + "/datastore.properties"));
    out.write("database=imagemosaicremove4\n");
    out.write(H2_SAMPLE_PROPERTIES);
    out.flush();
  }
  finally {
    if (out != null) {
      IOUtils.closeQuietly(out);
    }
  }
  final AbstractGridFormat format=TestUtils.getFormat(timeElevURL);
  assertNotNull(format);
  StructuredGridCoverage2DReader reader=null;
  try {
    reader=new ImageMosaicReader(timeElevURL);
    File[] files=workDir.listFiles();
    assertEquals(15,files.length);
    reader.delete(false);
    files=workDir.listFiles();
    assertEquals(5,files.length);
  }
  finally {
    reader.dispose();
  }
}
