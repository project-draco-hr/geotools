{
  final File workDir=new File(TestData.file(this,"."),"water_temp3");
  if (!workDir.mkdir()) {
    FileUtils.deleteDirectory(workDir);
    assertTrue("Unable to create workdir:" + workDir,workDir.mkdir());
  }
  FileUtils.copyFile(TestData.file(this,"watertemp.zip"),new File(workDir,"watertemp.zip"));
  TestData.unzipFile(this,"water_temp3/watertemp.zip");
  final URL timeElevURL=TestData.url(this,"water_temp3");
  FileWriter out=null;
  try {
    out=new FileWriter(new File(TestData.file(this,"."),"/water_temp3/datastore.properties"));
    out.write("SPI=org.geotools.data.h2.H2DataStoreFactory\n");
    out.write("database=imagemosaic\n");
    out.write("dbtype=h2\n");
    out.write("Loose\\ bbox=true #important for performances\n");
    out.write("Estimated\\ extends=false #important for performances\n");
    out.write("user=geosolutions\n");
    out.write("passwd=geosolutions\n");
    out.write("validate\\ connections=true #important for avoiding errors\n");
    out.write("Connection\\ timeout=3600\n");
    out.write("max\\ connections=10 #important for performances, internal pooling\n");
    out.write("min\\ connections=5  #important for performances, internal pooling\n");
    out.flush();
  }
  finally {
    if (out != null) {
      IOUtils.closeQuietly(out);
    }
  }
  AbstractGridFormat format=TestUtils.getFormat(timeElevURL);
  assertNotNull(format);
  ImageMosaicReader reader=TestUtils.getReader(timeElevURL,format);
  assertNotNull(reader);
  reader.dispose();
  format=null;
  FileInputStream fin=null;
  FileWriter fw=null;
  try {
    File mosaicFile=new File(TestData.file(this,"."),"/water_temp3/water_temp3.properties");
    fin=new FileInputStream(mosaicFile);
    Properties properties=new Properties();
    properties.load(fin);
    assertNotNull(properties.remove("TypeName"));
    fw=new FileWriter(mosaicFile);
    properties.store(fw,"");
  }
  finally {
    IOUtils.closeQuietly(fin);
    IOUtils.closeQuietly(fw);
  }
  format=TestUtils.getFormat(timeElevURL);
  assertNotNull(format);
  reader=TestUtils.getReader(timeElevURL,format);
  assertNotNull(reader);
  if (!INTERACTIVE) {
    FileUtils.deleteDirectory(TestData.file(this,"water_temp3"));
  }
}
