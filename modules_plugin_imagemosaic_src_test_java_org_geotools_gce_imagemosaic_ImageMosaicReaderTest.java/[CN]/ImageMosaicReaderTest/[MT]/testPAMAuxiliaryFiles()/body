{
  final URL timePamURL=TestData.url(this,"pam");
  final AbstractGridFormat format=TestUtils.getFormat(timePamURL);
  assertNotNull(format);
  ImageMosaicReader reader=TestUtils.getReader(timePamURL,format);
  assertNotNull(format);
  final String[] metadataNames=reader.getMetadataNames();
  assertNotNull(metadataNames);
  final ParameterValue<List> time=ImageMosaicFormat.TIME.createValue();
  final List<Date> timeValues=new ArrayList<Date>();
  final SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.sss'Z'");
  sdf.setTimeZone(TimeZone.getTimeZone("GMT+0"));
  Date date=sdf.parse("2008-10-31T00:00:00.000Z");
  timeValues.add(date);
  time.setValue(timeValues);
  GridCoverage2D coverage=reader.read(new GeneralParameterValue[]{time});
  Object object=coverage.getProperty(Utils.PAM_DATASET);
  assertNotNull(object);
  assertTrue(object instanceof PAMDataset);
  PAMDataset dataset=(PAMDataset)object;
  PAMRasterBand band=dataset.getPAMRasterBand().get(0);
  PAMParser parser=PAMParser.getInstance();
  assertEquals(0,Double.parseDouble(parser.getMetadataValue(band,"STATISTICS_MINIMUM")),DELTA);
  assertEquals(255.0,Double.parseDouble(parser.getMetadataValue(band,"STATISTICS_MAXIMUM")),DELTA);
  assertEquals(73.0352,Double.parseDouble(parser.getMetadataValue(band,"STATISTICS_MEAN")),DELTA);
  assertEquals(84.3132,Double.parseDouble(parser.getMetadataValue(band,"STATISTICS_STDDEV")),DELTA);
}
