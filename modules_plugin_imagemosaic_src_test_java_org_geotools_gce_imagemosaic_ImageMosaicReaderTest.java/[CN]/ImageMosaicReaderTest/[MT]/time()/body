{
  final AbstractGridFormat format=TestUtils.getFormat(timeURL);
  ImageMosaicReader reader=TestUtils.getReader(timeURL,format);
  final String[] metadataNames=reader.getMetadataNames();
  assertNotNull(metadataNames);
  assertEquals(metadataNames.length,12);
  assertEquals("true",reader.getMetadataValue("HAS_TIME_DOMAIN"));
  assertEquals("2004-02-01T00:00:00.000Z",reader.getMetadataValue("TIME_DOMAIN_MINIMUM"));
  assertEquals("2004-05-01T00:00:00.000Z",reader.getMetadataValue("TIME_DOMAIN_MAXIMUM"));
  assertEquals("2004-02-01T00:00:00.000Z,2004-03-01T00:00:00.000Z,2004-04-01T00:00:00.000Z,2004-05-01T00:00:00.000Z",reader.getMetadataValue(metadataNames[0]));
  assertEquals("java.sql.Timestamp",reader.getMetadataValue("TIME_DOMAIN_DATATYPE"));
  final ParameterValue<GridGeometry2D> gg=AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
  final GeneralEnvelope envelope=reader.getOriginalEnvelope();
  final Dimension dim=new Dimension();
  dim.setSize(reader.getOriginalGridRange().getSpan(0) / 2.0,reader.getOriginalGridRange().getSpan(1) / 2.0);
  final Rectangle rasterArea=((GridEnvelope2D)reader.getOriginalGridRange());
  rasterArea.setSize(dim);
  final GridEnvelope2D range=new GridEnvelope2D(rasterArea);
  gg.setValue(new GridGeometry2D(range,envelope));
  final ParameterValue<Boolean> useJai=AbstractGridFormat.USE_JAI_IMAGEREAD.createValue();
  useJai.setValue(false);
  final ParameterValue<List> time=ImageMosaicFormat.TIME.createValue();
  final SimpleDateFormat formatD=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");
  formatD.setTimeZone(TimeZone.getTimeZone("GMT"));
  final Date timeD=formatD.parse("2004-02-01T00:00:00.000Z");
  time.setValue(new ArrayList(){
{
      add(timeD);
    }
  }
);
  TestUtils.checkCoverage(reader,new GeneralParameterValue[]{gg,useJai,time},"time test");
  reader=TestUtils.getReader(timeURL,format);
  time.setValue(new ArrayList(){
{
      add(new DateRange(formatD.parse("2004-02-01T00:00:00.000Z"),formatD.parse("2004-03-01T00:00:00.000Z")));
    }
  }
);
  TestUtils.checkCoverage(reader,new GeneralParameterValue[]{gg,useJai,time},"time test");
}
