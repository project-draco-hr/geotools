{
  File source=DataUtilities.urlToFile(timeURL);
  File testDataDir=TestData.file(this,".");
  File directory1=new File(testDataDir,"singleHarvest1");
  File directory2=new File(testDataDir,"singleHarvest2");
  if (directory1.exists()) {
    FileUtils.deleteDirectory(directory1);
  }
  FileUtils.copyDirectory(source,directory1);
  for (  File file : FileUtils.listFiles(directory1,new RegexFileFilter("world\\.20040[^25].*\\.tiff"),null)) {
    assertTrue(file.delete());
  }
  for (  File file : FileUtils.listFiles(directory1,new RegexFileFilter("time_geotiff.*"),null)) {
    assertTrue(file.delete());
  }
  String monthFiveName="world.200405.3x5400x2700.tiff";
  File monthFive=new File(directory1,monthFiveName);
  if (directory2.exists()) {
    FileUtils.deleteDirectory(directory2);
  }
  directory2.mkdirs();
  File renamed=new File(directory2,monthFiveName);
  assertTrue(monthFive.renameTo(renamed));
  URL harvestSingleURL=DataUtilities.fileToURL(directory1);
  final AbstractGridFormat format=TestUtils.getFormat(harvestSingleURL);
  ImageMosaicReader reader=TestUtils.getReader(harvestSingleURL,format);
  try {
    String[] metadataNames=reader.getMetadataNames();
    assertNotNull(metadataNames);
    assertEquals("true",reader.getMetadataValue("HAS_TIME_DOMAIN"));
    assertEquals("2004-02-01T00:00:00.000Z",reader.getMetadataValue(metadataNames[0]));
    List<HarvestedSource> summary=reader.harvest(null,renamed,null);
    assertEquals(1,summary.size());
    HarvestedSource hf=summary.get(0);
    assertEquals(renamed.getCanonicalFile(),((File)hf.getSource()).getCanonicalFile());
    assertTrue(hf.success());
    assertEquals(1,reader.getGridCoverageNames().length);
    metadataNames=reader.getMetadataNames();
    assertNotNull(metadataNames);
    assertEquals("true",reader.getMetadataValue("HAS_TIME_DOMAIN"));
    assertEquals("2004-02-01T00:00:00.000Z,2004-05-01T00:00:00.000Z",reader.getMetadataValue(metadataNames[0]));
    String coverageName=reader.getGridCoverageNames()[0];
    GranuleSource granules=reader.getGranules(coverageName,true);
    assertEquals(2,granules.getCount(Query.ALL));
    Query q=new Query(Query.ALL);
    SimpleFeatureIterator fi=granules.getGranules(q).features();
    try {
      assertTrue(fi.hasNext());
      SimpleFeature f=fi.next();
      assertEquals("world.200402.3x5400x2700.tiff",f.getAttribute("location"));
      assertEquals("2004-02-01T00:00:00.000Z",ConvertersHack.convert(f.getAttribute("time"),String.class));
      f=fi.next();
      String expected="../singleHarvest2/world.200405.3x5400x2700.tiff".replace('/',File.separatorChar);
      assertEquals(expected,f.getAttribute("location"));
      assertEquals("2004-05-01T00:00:00.000Z",ConvertersHack.convert(f.getAttribute("time"),String.class));
    }
  finally {
      fi.close();
    }
  }
  finally {
    reader.dispose();
  }
}
