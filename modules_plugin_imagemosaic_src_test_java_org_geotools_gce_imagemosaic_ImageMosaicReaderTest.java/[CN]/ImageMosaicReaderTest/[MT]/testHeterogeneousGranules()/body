{
  final AbstractGridFormat format=getFormat(heterogeneousGranulesURL);
  final ImageMosaicReader reader=getReader(heterogeneousGranulesURL,format);
  final ParameterValue<GridGeometry2D> gg=ImageMosaicFormat.READ_GRIDGEOMETRY2D.createValue();
  final GeneralEnvelope envelope=reader.getOriginalEnvelope();
  final Dimension dim=new Dimension();
  dim.setSize(reader.getOriginalGridRange().getSpan(0) / 7.0,reader.getOriginalGridRange().getSpan(1) / 7.0);
  final Rectangle rasterArea=((GridEnvelope2D)reader.getOriginalGridRange());
  rasterArea.setSize(dim);
  final GridEnvelope2D range=new GridEnvelope2D(rasterArea);
  gg.setValue(new GridGeometry2D(range,envelope));
  final ParameterValue<Boolean> useJai=ImageMosaicFormat.USE_JAI_IMAGEREAD.createValue();
  useJai.setValue(false);
  final ParameterValue<OverviewPolicy> op=ImageMosaicFormat.OVERVIEW_POLICY.createValue();
  LOGGER.info("\nTesting with OverviewPolicy = QUALITY");
  op.setValue(OverviewPolicy.QUALITY);
  checkCoverage(reader,new GeneralParameterValue[]{gg,useJai,op},"heterogeneous granules test: OverviewPolicy=QUALITY",rasterArea);
  LOGGER.info("\nTesting with OverviewPolicy = SPEED");
  op.setValue(OverviewPolicy.SPEED);
  checkCoverage(reader,new GeneralParameterValue[]{gg,useJai,op},"heterogeneous granules test: OverviewPolicy=SPEED",rasterArea);
  LOGGER.info("\nTesting with OverviewPolicy = NEAREST");
  op.setValue(OverviewPolicy.NEAREST);
  checkCoverage(reader,new GeneralParameterValue[]{gg,useJai,op},"heterogeneous granules test: OverviewPolicy=NEAREST",rasterArea);
  LOGGER.info("\nTesting with OverviewPolicy = IGNORE");
  op.setValue(OverviewPolicy.IGNORE);
  checkCoverage(reader,new GeneralParameterValue[]{gg,useJai,op},"heterogeneous granules test: OverviewPolicy=IGNORE",rasterArea);
}
