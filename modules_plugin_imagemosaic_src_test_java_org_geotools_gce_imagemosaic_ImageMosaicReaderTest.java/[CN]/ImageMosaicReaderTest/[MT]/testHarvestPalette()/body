{
  File source=DataUtilities.urlToFile(index2URL);
  File testDataDir=TestData.file(this,".");
  File directory1=new File(testDataDir,"mosaic");
  File directory2=new File(testDataDir,"singleHarvest");
  if (directory1.exists()) {
    FileUtils.deleteDirectory(directory1);
  }
  FileUtils.copyDirectory(source,directory1);
  for (  File file : FileUtils.listFiles(directory1,FileFilterUtils.prefixFileFilter("c"),null)) {
    assertTrue(file.delete());
  }
  if (directory2.exists()) {
    FileUtils.deleteDirectory(directory2);
  }
  FileUtils.copyDirectory(source,directory2);
  for (  File file : FileUtils.listFiles(directory2,FileFilterUtils.notFileFilter(FileFilterUtils.prefixFileFilter("c")),null)) {
    assertTrue(file.delete());
  }
  URL harvestSingleURL=DataUtilities.fileToURL(directory1);
  final AbstractGridFormat format=TestUtils.getFormat(harvestSingleURL,null);
  ImageMosaicReader reader=TestUtils.getReader(harvestSingleURL,format);
  GranuleCatalog originalCatalog=reader.granuleCatalog;
  try {
    Collection<File> files=new ArrayList<File>();
    for (    File file : FileUtils.listFiles(directory2,FileFilterUtils.prefixFileFilter("c"),null)) {
      files.add(file);
    }
    List<HarvestedSource> summary=reader.harvest(null,files,null);
    assertSame(originalCatalog,reader.granuleCatalog);
    assertEquals(1,summary.size());
    HarvestedSource hf=summary.get(0);
    assertTrue(hf.success());
    RasterManager manager=reader.getRasterManager(reader.getGridCoverageNames()[0]);
    assertNotNull(manager.defaultPalette);
    assertTrue(manager.expandMe);
  }
  finally {
    reader.dispose();
  }
}
