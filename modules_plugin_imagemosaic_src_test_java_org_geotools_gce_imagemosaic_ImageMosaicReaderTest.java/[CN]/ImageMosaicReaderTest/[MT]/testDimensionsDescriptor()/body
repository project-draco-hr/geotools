{
  final AbstractGridFormat format=TestUtils.getFormat(timeAdditionalDomainsRangeURL);
  ImageMosaicReader reader=TestUtils.getReader(timeAdditionalDomainsRangeURL,format);
  List<DimensionDescriptor> descriptors=((StructuredGridCoverage2DReader)reader).getDimensionDescriptors("time_domainsRanges");
  assertNotNull(descriptors);
  assertEquals(4,descriptors.size());
  Map<String,DimensionDescriptor> dds=new HashMap<String,DimensionDescriptor>();
  for (  DimensionDescriptor dd : descriptors) {
    dds.put(dd.getName(),dd);
  }
  DimensionDescriptor descriptor=dds.get("wavelength");
  assertEquals("wavelength",descriptor.getName());
  assertEquals("loww",descriptor.getStartAttribute());
  assertEquals("highw",descriptor.getEndAttribute());
  descriptor=dds.get("date");
  assertEquals("date",descriptor.getName());
  assertEquals("date",descriptor.getStartAttribute());
  assertNull(descriptor.getEndAttribute());
  descriptor=dds.get("TIME");
  assertEquals("TIME",descriptor.getName());
  assertEquals("time",descriptor.getStartAttribute());
  assertEquals("endtime",descriptor.getEndAttribute());
  assertEquals(CoverageUtilities.UCUM.TIME_UNITS.getName(),descriptor.getUnits());
  assertEquals(CoverageUtilities.UCUM.TIME_UNITS.getSymbol(),descriptor.getUnitSymbol());
  descriptor=dds.get("ELEVATION");
  assertEquals("ELEVATION",descriptor.getName());
  assertEquals("lowz",descriptor.getStartAttribute());
  assertEquals("highz",descriptor.getEndAttribute());
}
