{
  CoordinateReferenceSystem realCRS=null;
  try {
    realCRS=DefaultGeographicCRS.WGS84;
    URL url=null;
    url=new File("/home/jezekjan/tmp/testgeodata/rasters/p1010099.tif").toURI().toURL();
    WorldImageReader reader=new WorldImageReader(url);
    Operations operations=new Operations(null);
    GridCoverage2D coverage=(GridCoverage2D)reader.read(null);
    Envelope env=coverage.getEnvelope();
    List vectors=generateMappedPositions(env,15,0.158,env.getCoordinateReferenceSystem());
    WarpGridBuilder gridBuilder=new TPSGridBuilder(vectors,2,2,env,coverage.getGridGeometry().getGridToCRS().inverse());
    SimilarTransformBuilder builder=new SimilarTransformBuilder(vectors);
    MathTransform trans=gridBuilder.getMathTransform();
    System.out.println(trans.getSourceDimensions());
    System.out.println(trans.getTargetDimensions());
    CoordinateReferenceSystem gridCRS=new DefaultDerivedCRS(Collections.singletonMap(IdentifiedObject.NAME_KEY,"gridCRS"),new DefaultOperationMethod(trans),coverage.getCoordinateReferenceSystem(),trans,DefaultCartesianCS.GENERIC_2D);
    CoverageProcessor processor=CoverageProcessor.getInstance();
    coverage=coverage.geophysics(false);
    final ParameterValueGroup param=processor.getOperation("Resample").getParameters();
    param.parameter("Source").setValue(coverage);
    param.parameter("CoordinateReferenceSystem").setValue(gridCRS);
    param.parameter("InterpolationType").setValue("bilinear");
    GridCoverage2D projected=(GridCoverage2D)processor.doOperation(param);
    final RenderedImage image=projected.getRenderedImage();
    projected=projected.geophysics(false);
    WorldImageWriter writer=new WorldImageWriter((Object)(new File("/home/jezekjan/tmp/pp.png")));
    writer.write(projected,null);
    url=new File("/home/jezekjan/tmp/pp.png").toURI().toURL();
    WorldImageReader preader=new WorldImageReader(url);
    GridCoverage2D pcoverage=(GridCoverage2D)preader.read(null);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
