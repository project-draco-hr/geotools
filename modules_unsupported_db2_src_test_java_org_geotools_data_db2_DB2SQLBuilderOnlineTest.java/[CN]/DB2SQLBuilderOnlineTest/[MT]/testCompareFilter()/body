{
  String typeName="Places";
  SimpleFeatureSource fs=dataStore.getFeatureSource("Places");
  SimpleFeatureType ft=fs.getSchema();
  org.opengis.filter.FilterFactory ff=CommonFactoryFinder.getFilterFactory(null);
  PropertyName column=ff.property("Name");
  Literal compareValue=ff.literal("Zena");
  PropertyIsEqualTo filter=ff.equals(column,compareValue);
  String[] attrNames=new String[ft.getAttributeCount()];
  AttributeDescriptor[] attrTypes=new AttributeDescriptor[ft.getAttributeCount()];
  for (int i=0; i < ft.getAttributeCount(); i++) {
    attrNames[i]=ft.getDescriptor(i).getLocalName();
    attrTypes[i]=ft.getDescriptor(i);
  }
  sqlBuilder=(DB2SQLBuilder)dataStore.getSqlBuilder("Places");
  DefaultQuery query=new DefaultQuery("Places",filter);
  Filter preFilter=sqlBuilder.getPreQueryFilter(query.getFilter());
  Filter postFilter=sqlBuilder.getPostQueryFilter(query.getFilter());
  String compareQuery=this.sqlBuilder.buildSQLQuery("Places",this.dataStore.getFIDMapper("Places"),attrTypes,preFilter);
  assertEquals("compare encoding failed","SELECT \"Id\", \"Name\", DB2GSE.ST_AsBinary(\"Geom\") FROM \"Test\".\"Places\" WHERE \"Name\" = 'Zena'",compareQuery);
  sqlBuilder=(DB2SQLBuilder)dataStore.getSqlBuilder("Roads");
  column=ff.property("Length");
  compareValue=ff.literal(2.5);
  filter=ff.equals(column,compareValue);
  query=new DefaultQuery("Roads",filter);
  preFilter=sqlBuilder.getPreQueryFilter(query.getFilter());
  postFilter=sqlBuilder.getPostQueryFilter(query.getFilter());
  compareQuery=this.sqlBuilder.buildSQLQuery("Roads",this.dataStore.getFIDMapper("Roads"),attrTypes,preFilter);
  assertEquals("compare encoding failed","SELECT \"ID\", \"Name\", DB2GSE.ST_AsBinary(\"Geom\") FROM \"Test\".\"Roads\" WHERE \"Length\" = 2.5",compareQuery);
}
