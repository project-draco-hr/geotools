{
  SimpleFeatureSource fs=dataStore.getFeatureSource("Places");
  SimpleFeatureType ft=fs.getSchema();
  FilterFactory ff2=CommonFactoryFinder.getFilterFactory(null);
  Set ids=new HashSet();
  FeatureId fid1=ff2.featureId("1");
  ids.add(fid1);
  Id ff3=CommonFactoryFinder.getFilterFactory(null).id(ids);
  sqlBuilder=(DB2SQLBuilder)dataStore.getSqlBuilder("Places");
  DefaultQuery query=new DefaultQuery("Places",ff3);
  Filter preFilter=sqlBuilder.getPreQueryFilter(query.getFilter());
  Filter postFilter=sqlBuilder.getPostQueryFilter(query.getFilter());
  String[] attrNames=new String[ft.getAttributeCount()];
  AttributeDescriptor[] attrTypes=new AttributeDescriptor[ft.getAttributeCount()];
  for (int i=0; i < ft.getAttributeCount(); i++) {
    attrNames[i]=ft.getDescriptor(i).getLocalName();
    attrTypes[i]=ft.getDescriptor(i);
  }
  String fidQuery=this.sqlBuilder.buildSQLQuery("Places",this.dataStore.getFIDMapper("Places"),attrTypes,preFilter);
  assertEquals("FID encoding failed","SELECT \"Id\", \"Name\", DB2GSE.ST_AsBinary(\"Geom\") FROM \"Test\".\"Places\" WHERE (\"Id\" = 1)",fidQuery);
  FeatureId fid2=ff2.featureId("2");
  ids.add(fid2);
  ff3=CommonFactoryFinder.getFilterFactory(null).id(ids);
  query=new DefaultQuery("Places",ff3);
  preFilter=sqlBuilder.getPreQueryFilter(query.getFilter());
  fidQuery=this.sqlBuilder.buildSQLQuery("Places",this.dataStore.getFIDMapper("Places"),attrTypes,preFilter);
  assertEquals("FID encoding failed","SELECT \"Id\", \"Name\", DB2GSE.ST_AsBinary(\"Geom\") FROM \"Test\".\"Places\" WHERE (\"Id\" = 2) OR (\"Id\" = 1)",fidQuery);
}
