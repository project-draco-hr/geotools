{
  String styleName="labeledPolygon.sld";
  Style style=RendererBaseTest.loadStyle(this,styleName);
  MapContent mc=new MapContent();
  mc.addLayer(new FeatureLayer(squareFS,style));
  StreamingRenderer renderer=new StreamingRenderer();
  Map<Object,Object> hints=null;
  if (hints == null) {
    hints=new HashMap<Object,Object>();
  }
  if (renderer instanceof StreamingRenderer) {
    LabelCache labelCache;
    if (hints.containsKey(StreamingRenderer.LABEL_CACHE_KEY)) {
      labelCache=(LabelCache)hints.get(StreamingRenderer.LABEL_CACHE_KEY);
    }
 else {
      labelCache=new LabelCacheImpl();
      hints.put(StreamingRenderer.LABEL_CACHE_KEY,labelCache);
    }
  }
  renderer.setRendererHints(hints);
  renderer.setMapContent(mc);
  Document document=null;
  DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
  DocumentBuilder db;
  db=dbf.newDocumentBuilder();
  document=db.getDOMImplementation().createDocument(null,"svg",null);
  SVGGeneratorContext ctx1=SVGGeneratorContext.createDefault(document);
  SVGGeneratorContext ctx=ctx1;
  ctx.setComment("Generated by GeoTools with Batik SVG Generator");
  SVGGraphics2D g2d=new SVGGraphics2D(ctx,true);
  Dimension canvasSize=new Dimension(300,300);
  g2d.setSVGCanvasSize(canvasSize);
  Rectangle outputArea=new Rectangle(g2d.getSVGCanvasSize());
  ReferencedEnvelope dataArea=mc.getMaxBounds();
  renderer.paint(g2d,outputArea,dataArea);
}
