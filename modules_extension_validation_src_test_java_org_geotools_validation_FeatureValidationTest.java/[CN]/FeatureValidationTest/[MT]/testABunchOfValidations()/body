{
  RoadNetworkValidationResults roadValidationResults=new RoadNetworkValidationResults();
  IsValidGeometryValidation isValidValidator1=new IsValidGeometryValidation();
  isValidValidator1.setName("isValidRoad");
  isValidValidator1.setDescription("Tests to see if a road is valid");
  isValidValidator1.setTypeRef("roads");
  IsValidGeometryValidation isValidValidator2=new IsValidGeometryValidation();
  isValidValidator2.setName("isValidRail");
  isValidValidator2.setDescription("Tests to see if a railway is valid");
  isValidValidator2.setTypeRef("rails");
  IsValidGeometryValidation isValidValidator3=new IsValidGeometryValidation();
  isValidValidator3.setName("isValidRiver");
  isValidValidator3.setDescription("Tests to see if a river is valid");
  isValidValidator3.setTypeRef("rivers");
  IsValidGeometryValidation isValidValidator4=new IsValidGeometryValidation();
  isValidValidator4.setName("isValidAll");
  isValidValidator4.setDescription("Tests to see if all geometries are valid");
  isValidValidator4.setTypeRef("*");
  roadValidationResults.setValidation(isValidValidator1);
  roadValidationResults.setValidation(isValidValidator2);
  roadValidationResults.setValidation(isValidValidator3);
  roadValidationResults.setValidation(isValidValidator4);
  String[] types1=isValidValidator1.getTypeNames();
  for (int i=0; i < types1.length; i++) {
  }
  String[] types2=isValidValidator1.getTypeNames();
  for (int i=0; i < types2.length; i++) {
  }
  String[] types3=isValidValidator1.getTypeNames();
  for (int i=0; i < types3.length; i++) {
  }
  String[] types4=isValidValidator1.getTypeNames();
  for (int i=0; i < types4.length; i++) {
  }
  String[] roadFailures=roadValidationResults.getFailedMessages();
  String[] roadWarnings=roadValidationResults.getWarningMessages();
  boolean roadsPassed=true;
  if (roadFailures.length != 0) {
    roadsPassed=false;
    for (int i=0; i < roadFailures.length; i++) {
      System.out.println(roadFailures[i]);
    }
  }
  if (roadWarnings.length != 0) {
    for (int i=0; i < roadWarnings.length; i++) {
      System.out.println(roadWarnings[i]);
    }
  }
  assertTrue(roadsPassed);
}
