{
  int nnodes=100;
  GraphTestUtil.buildNoBifurcations(builder(),nnodes);
  GraphPartitioner partitioner=new GraphPartitioner(builder().getGraph());
  partitioner.partition();
  List partitions=partitioner.getPartitions();
  assertTrue(partitions.size() == 1);
  final Graph g=(Graph)partitions.get(0);
  assertTrue(g.getNodes().size() == builder().getGraph().getNodes().size());
  assertTrue(g.getEdges().size() == builder().getGraph().getEdges().size());
  GraphVisitor visitor=new GraphVisitor(){
    public int visit(    Graphable component){
      assertTrue(g.getNodes().contains(component));
      return 0;
    }
  }
;
  builder().getGraph().visitNodes(visitor);
}
