{
  GeneralEnvelope adjustedRequestedEnvelope=new GeneralEnvelope(2);
  final CoordinateReferenceSystem requestedEnvelopeCRS2D=requestedEnvelope2D.getCoordinateReferenceSystem();
  boolean tryWithWGS84=false;
  try {
    MathTransform transform=null;
    if (!CRS.equalsIgnoreMetadata(requestedEnvelopeCRS2D,spatialReferenceSystem2D))     transform=CRS.findMathTransform(requestedEnvelopeCRS2D,spatialReferenceSystem2D,true);
    if (transform != null && !transform.isIdentity())     adjustedRequestedEnvelope=CRS.transform(transform,requestedEnvelope2D);
 else     adjustedRequestedEnvelope.setEnvelope(requestedEnvelope2D);
    if (!adjustedRequestedEnvelope.intersects(baseEnvelope2D,true))     return null;
    adjustedRequestedEnvelope.intersect(baseEnvelope2D);
    adjustedRequestedEnvelope.setCoordinateReferenceSystem(spatialReferenceSystem2D);
    final Envelope requestedEnvelopeCropped=(transform != null && !transform.isIdentity()) ? CRS.transform(transform.inverse(),adjustedRequestedEnvelope) : adjustedRequestedEnvelope;
    final Rectangle2D ordinates=CRS.transform(readGridToWorld.inverse(),requestedEnvelopeCropped).toRectangle2D();
    final GeneralGridEnvelope finalRange=new GeneralGridEnvelope(ordinates.getBounds());
    final Rectangle tempRect=finalRange.toRectangle();
    XRectangle2D.intersect(tempRect,requestedDim,tempRect);
    requestedDim.setRect(tempRect);
  }
 catch (  TransformException te) {
    tryWithWGS84=true;
  }
catch (  FactoryException fe) {
    tryWithWGS84=true;
  }
  if (tryWithWGS84) {
    initWGS84BaseEnvelope();
    final GeneralEnvelope requestedEnvelopeWGS84=(GeneralEnvelope)getEnvelopeAsWGS84(requestedEnvelope2D,false);
    if (!requestedEnvelopeWGS84.intersects(wgs84BaseEnvelope2D,true))     return null;
    adjustedRequestedEnvelope=new GeneralEnvelope(requestedEnvelopeWGS84);
    adjustedRequestedEnvelope.intersect(wgs84BaseEnvelope2D);
    adjustedRequestedEnvelope=CRS.transform(CRS.findMathTransform(requestedEnvelopeWGS84.getCoordinateReferenceSystem(),spatialReferenceSystem2D,true),adjustedRequestedEnvelope);
    adjustedRequestedEnvelope.setCoordinateReferenceSystem(spatialReferenceSystem2D);
  }
  return adjustedRequestedEnvelope;
}
