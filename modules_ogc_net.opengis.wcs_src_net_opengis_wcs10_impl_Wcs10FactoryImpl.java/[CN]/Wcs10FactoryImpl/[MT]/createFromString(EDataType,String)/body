{
switch (eDataType.getClassifierID()) {
case Wcs10Package.CAPABILITIES_SECTION_TYPE:
    return createCapabilitiesSectionTypeFromString(eDataType,initialValue);
case Wcs10Package.CLOSURE_TYPE:
  return createClosureTypeFromString(eDataType,initialValue);
case Wcs10Package.INTERPOLATION_METHOD_TYPE:
return createInterpolationMethodTypeFromString(eDataType,initialValue);
case Wcs10Package.METADATA_TYPE_TYPE:
return createMetadataTypeTypeFromString(eDataType,initialValue);
case Wcs10Package.CAPABILITIES_SECTION_TYPE_OBJECT:
return createCapabilitiesSectionTypeObjectFromString(eDataType,initialValue);
case Wcs10Package.CLOSURE_TYPE_OBJECT:
return createClosureTypeObjectFromString(eDataType,initialValue);
case Wcs10Package.INTERPOLATION_METHOD_TYPE_OBJECT:
return createInterpolationMethodTypeObjectFromString(eDataType,initialValue);
case Wcs10Package.METADATA_TYPE_TYPE_OBJECT:
return createMetadataTypeTypeObjectFromString(eDataType,initialValue);
case Wcs10Package.MAP:
return createMapFromString(eDataType,initialValue);
default :
throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
}
}
