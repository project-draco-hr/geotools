{
  super(new String[][]{{"GlobalName",NAME},{"LocalName",NAME},{"Vendor","org.jaitools.media.jai"},{"Description","Classifies image values using equal interval method and calculates " + "statistics for each class"},{"DocURL","http://code.google.com/p/jaitools/"},{"Version","1.3.0"},{String.format("arg%dDesc",NUM_CLASSES_ARG),String.format("%s - number of classes or bins",paramNames[NUM_CLASSES_ARG])},{String.format("arg%dDesc",METHOD_ARG),String.format("%s - classification method",paramNames[METHOD_ARG])},{String.format("arg%dDesc",EXTREMA_ARG),String.format("%s - range of values to include",paramNames[EXTREMA_ARG])},{String.format("arg%dDesc",ROI_ARG),String.format("%s (default %s) - region-of-interest constrainting the values to be counted",paramNames[ROI_ARG],paramDefaults[ROI_ARG])},{String.format("arg%dDesc",BAND_ARG),String.format("%s (default %s) - bands of the image to process",paramNames[BAND_ARG],paramDefaults[BAND_ARG])},{String.format("arg%dDesc",X_PERIOD_ARG),String.format("%s (default %s) - horizontal sampling rate",paramNames[X_PERIOD_ARG],paramDefaults[X_PERIOD_ARG])},{String.format("arg%dDesc",Y_PERIOD_ARG),String.format("%s (default %s) - vertical sampling rate",paramNames[Y_PERIOD_ARG],paramDefaults[Y_PERIOD_ARG])},{String.format("arg%dDesc",NODATA_ARG),String.format("%s (default %s) - value to treat as NODATA",paramNames[NODATA_ARG],paramDefaults[NODATA_ARG])}},new String[]{RenderedRegistryMode.MODE_NAME},new String[]{"source0"},new Class<?>[][]{{RenderedImage.class}},paramNames,paramClasses,paramDefaults,null);
}
