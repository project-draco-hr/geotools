{
  final boolean hasHeight;
  final int dim=intValue(DIM,values);
switch (dim) {
case 0:
case DEFAULT_DIMENSION:
{
      hasHeight=false;
      break;
    }
case 3:
{
    hasHeight=true;
    if (withHeight == null) {
      withHeight=create3D();
    }
    break;
  }
default :
{
  throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2,"dim",dim));
}
}
final double a=doubleValue(SRC_SEMI_MAJOR,values);
final double b=doubleValue(SRC_SEMI_MINOR,values);
final double ta=doubleValue(TGT_SEMI_MAJOR,values);
final double tb=doubleValue(TGT_SEMI_MINOR,values);
final double dx=doubleValue(DX,values);
final double dy=doubleValue(DY,values);
final double dz=doubleValue(DZ,values);
final boolean abridged=isAbridged();
if (!hasHeight) {
return new As2D(abridged,a,b,ta,tb,dx,dy,dz);
}
 else {
return new Delegate(new MolodenskiTransform(abridged,a,b,hasHeight,ta,tb,hasHeight,dx,dy,dz),withHeight);
}
}
