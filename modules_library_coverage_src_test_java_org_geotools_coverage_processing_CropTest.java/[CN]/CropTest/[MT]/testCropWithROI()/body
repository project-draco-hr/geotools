{
  final CoverageProcessor processor=CoverageProcessor.getInstance();
  final GridCoverage2D source=coverage;
  final Envelope oldEnvelope=source.getEnvelope();
  final GeneralEnvelope cropEnvelope=new GeneralEnvelope(new double[]{oldEnvelope.getMinimum(0),oldEnvelope.getMinimum(1)},new double[]{oldEnvelope.getMinimum(0) + oldEnvelope.getSpan(0) * 5 / 8,oldEnvelope.getMinimum(1) + oldEnvelope.getSpan(1) * 5 / 8});
  cropEnvelope.setCoordinateReferenceSystem(oldEnvelope.getCoordinateReferenceSystem());
  GeometryFactory geometryFactory=JTSFactoryFinder.getGeometryFactory(JTSFactoryFinder.EMPTY_HINTS);
  double mid0=oldEnvelope.getMinimum(0) + oldEnvelope.getSpan(0) / 2;
  double mid1=oldEnvelope.getMinimum(1) + oldEnvelope.getSpan(1) * 4 / 10;
  double qspan0=oldEnvelope.getSpan(0) * 2 / 16;
  double qspan1=oldEnvelope.getSpan(1) * 2 / 16;
  double half0=oldEnvelope.getSpan(0) * 1 / 10;
  double half1=oldEnvelope.getSpan(1) * 1 / 10;
  CoordinateSequence cs1=new CoordinateArraySequence(5);
  cs1.setOrdinate(0,0,mid0);
  cs1.setOrdinate(0,1,mid1 + qspan1);
  cs1.setOrdinate(1,0,mid0 + qspan0);
  cs1.setOrdinate(1,1,mid1);
  cs1.setOrdinate(2,0,mid0);
  cs1.setOrdinate(2,1,mid1 - qspan1);
  cs1.setOrdinate(3,0,mid0 - qspan0);
  cs1.setOrdinate(3,1,mid1);
  cs1.setOrdinate(4,0,mid0);
  cs1.setOrdinate(4,1,mid1 + qspan1);
  LinearRing shape1=geometryFactory.createLinearRing(cs1);
  com.vividsolutions.jts.geom.Polygon poly1=geometryFactory.createPolygon(shape1,null);
  CoordinateSequence cs2=new CoordinateArraySequence(5);
  cs2.setOrdinate(0,0,mid0 + half0);
  cs2.setOrdinate(0,1,mid1 + half1);
  cs2.setOrdinate(1,0,mid0 + half0);
  cs2.setOrdinate(1,1,mid1 - half1);
  cs2.setOrdinate(2,0,mid0 - half0);
  cs2.setOrdinate(2,1,mid1 - half1);
  cs2.setOrdinate(3,0,mid0 - half0);
  cs2.setOrdinate(3,1,mid1 + half1);
  cs2.setOrdinate(4,0,mid0 + half0);
  cs2.setOrdinate(4,1,mid1 + half1);
  LinearRing shape2=geometryFactory.createLinearRing(cs2);
  com.vividsolutions.jts.geom.Polygon poly2=geometryFactory.createPolygon(shape2,null);
  CoordinateSequence cs3=new CoordinateArraySequence(5);
  cs3.setOrdinate(0,0,oldEnvelope.getMinimum(0));
  cs3.setOrdinate(0,1,oldEnvelope.getMinimum(1));
  cs3.setOrdinate(1,0,oldEnvelope.getMinimum(0) + oldEnvelope.getSpan(0) / 8);
  cs3.setOrdinate(1,1,oldEnvelope.getMinimum(1));
  cs3.setOrdinate(2,0,oldEnvelope.getMinimum(0) + oldEnvelope.getSpan(0) / 8);
  cs3.setOrdinate(2,1,oldEnvelope.getMinimum(1) + oldEnvelope.getSpan(1) / 8);
  cs3.setOrdinate(3,0,oldEnvelope.getMinimum(0));
  cs3.setOrdinate(3,1,oldEnvelope.getMinimum(1) + oldEnvelope.getSpan(1) / 8);
  cs3.setOrdinate(4,0,oldEnvelope.getMinimum(0));
  cs3.setOrdinate(4,1,oldEnvelope.getMinimum(1));
  LinearRing shape3=geometryFactory.createLinearRing(cs3);
  com.vividsolutions.jts.geom.Polygon poly3=geometryFactory.createPolygon(shape3,null);
  CoordinateSequence cs4=new CoordinateArraySequence(5);
  cs4.setOrdinate(0,0,oldEnvelope.getMaximum(0));
  cs4.setOrdinate(0,1,oldEnvelope.getMinimum(1));
  cs4.setOrdinate(1,0,oldEnvelope.getMaximum(0) - oldEnvelope.getSpan(0) / 8);
  cs4.setOrdinate(1,1,oldEnvelope.getMinimum(1));
  cs4.setOrdinate(2,0,oldEnvelope.getMaximum(0) - oldEnvelope.getSpan(0) / 8);
  cs4.setOrdinate(2,1,oldEnvelope.getMinimum(1) + oldEnvelope.getSpan(1) / 8);
  cs4.setOrdinate(3,0,oldEnvelope.getMaximum(0));
  cs4.setOrdinate(3,1,oldEnvelope.getMinimum(1) + oldEnvelope.getSpan(1) / 8);
  cs4.setOrdinate(4,0,oldEnvelope.getMaximum(0));
  cs4.setOrdinate(4,1,oldEnvelope.getMinimum(1));
  LinearRing shape4=geometryFactory.createLinearRing(cs4);
  com.vividsolutions.jts.geom.Polygon poly4=geometryFactory.createPolygon(shape4,null);
  Geometry mpoly=geometryFactory.createMultiPolygon(new com.vividsolutions.jts.geom.Polygon[]{poly1,poly2});
  Geometry union=geometryFactory.createGeometryCollection(new Geometry[]{mpoly,poly3,poly4});
  ParameterValueGroup param=processor.getOperation("CoverageCrop").getParameters();
  param.parameter("Source").setValue(source);
  param.parameter("Envelope").setValue(cropEnvelope);
  param.parameter("ROI").setValue(union);
  GridCoverage2D cropped=(GridCoverage2D)processor.doOperation(param);
  if (SHOW) {
    Viewer.show(coverage,"Original");
    Viewer.show(cropped,"Cropped");
    Thread.sleep(10000);
  }
 else {
    assertNotNull(PlanarImage.wrapRenderedImage(cropped.getRenderedImage()).getTiles());
  }
  RenderedImage raster=cropped.getRenderedImage();
  assertEquals(0,raster.getMinX());
  assertEquals(219,raster.getMinY());
  assertEquals(281,raster.getWidth());
  assertEquals(241,raster.getHeight());
  assertEquals(source.getGridGeometry().getGridToCRS2D(),cropped.getGridGeometry().getGridToCRS2D());
  assertFalse(cropEnvelope.equals(cropped.getEnvelope()));
}
