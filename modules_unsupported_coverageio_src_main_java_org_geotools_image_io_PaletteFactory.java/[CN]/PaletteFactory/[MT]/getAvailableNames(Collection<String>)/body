{
  String filename=new File(directory,LIST_FILE).getPath();
  BufferedReader in=getReader(LIST_FILE,"getAvailableNames");
  try {
    if (in != null) {
      readNames(in,names);
    }
    if (classloader != null) {
      for (final Enumeration<URL> it=classloader.getResources(filename); it.hasMoreElements(); ) {
        final URL url=it.nextElement();
        in=getReader(url.openStream());
        readNames(in,names);
      }
    }
  }
 catch (  IOException e) {
    Logging.unexpectedException(PaletteFactory.class,"getAvailableNames",e);
  }
  File dir=(directory != null) ? directory : new File(".");
  if (classloader != null) {
    dir=toFile(classloader.getResource(dir.getPath()));
    if (dir == null) {
      return;
    }
  }
 else   if (loader != null) {
    dir=toFile(loader.getResource(dir.getPath()));
    if (dir == null) {
      return;
    }
  }
  if (!dir.isDirectory()) {
    return;
  }
  final String[] list=dir.list(new DefaultFileFilter('*' + extension));
  final int extLg=extension.length();
  for (int i=0; i < list.length; i++) {
    filename=list[i];
    final int lg=filename.length();
    if (lg > extLg && filename.regionMatches(true,lg - extLg,extension,0,extLg)) {
      names.add(filename.substring(0,lg - extLg));
    }
  }
}
