{
  if (fixture == null) {
    return;
  }
  if (DISABLE) {
    return;
  }
  String processIdenLocal="DoubleAddition";
  WPSCapabilitiesType capabilities=wps.getCapabilities();
  ProcessOfferingsType processOfferings=capabilities.getProcessOfferings();
  EList processes=processOfferings.getProcess();
  boolean found=false;
  Iterator iterator=processes.iterator();
  while (iterator.hasNext()) {
    ProcessBriefType process=(ProcessBriefType)iterator.next();
    if (process.getIdentifier().getValue().equalsIgnoreCase(processIdenLocal)) {
      found=true;
      break;
    }
  }
  if (!found) {
    return;
  }
  DescribeProcessRequest descRequest=wps.createDescribeProcessRequest();
  descRequest.setIdentifier(processIdenLocal);
  DescribeProcessResponse descResponse=wps.issueRequest(descRequest);
  ProcessDescriptionsType processDesc=descResponse.getProcessDesc();
  ExecuteProcessRequest exeRequest=wps.createExecuteProcessRequest();
  exeRequest.setIdentifier(processIdenLocal);
  setLocalInputDataAdd(exeRequest,processDesc);
  ExecuteProcessResponse response=wps.issueRequest(exeRequest);
  assertNotNull(response);
  ExecuteResponseType executeResponse=response.getExecuteResponse();
  assertNotNull(executeResponse);
  ExceptionReportType exceptionResponse=response.getExceptionResponse();
  assertNull(exceptionResponse);
  EList outputs=executeResponse.getProcessOutputs().getOutput();
  assertTrue(!outputs.isEmpty());
  OutputDataType output=(OutputDataType)outputs.get(0);
  LiteralDataType literalData=output.getData().getLiteralData();
  String value=literalData.getValue();
  Double result=new Double(value);
  Double expected=77.84 + 40039.229;
  assertEquals(result,expected);
}
