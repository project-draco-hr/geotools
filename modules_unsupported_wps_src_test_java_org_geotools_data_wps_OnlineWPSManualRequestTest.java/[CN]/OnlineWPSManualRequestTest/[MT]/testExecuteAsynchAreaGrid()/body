{
  if (fixture == null) {
    return;
  }
  if (DISABLE) {
    return;
  }
  String processIdenLocal="gs:AreaGrid";
  WPSCapabilitiesType capabilities=wps.getCapabilities();
  ProcessOfferingsType processOfferings=capabilities.getProcessOfferings();
  EList processes=processOfferings.getProcess();
  boolean found=false;
  Iterator iterator=processes.iterator();
  while (iterator.hasNext()) {
    ProcessBriefType process=(ProcessBriefType)iterator.next();
    if (process.getIdentifier().getValue().equalsIgnoreCase(processIdenLocal)) {
      found=true;
      break;
    }
  }
  if (!found) {
    System.out.println("Skipping, gs:AreaGrid not found!");
    return;
  }
  ExecuteProcessRequest exeRequest=wps.createExecuteProcessRequest();
  exeRequest.setIdentifier(processIdenLocal);
  exeRequest.addInput("envelope",Arrays.asList(wps.createBoundingBoxInputValue("EPSG:4326",2,Arrays.asList(-180d,-90d),Arrays.asList(180d,90d))));
  exeRequest.addInput("width",Arrays.asList(wps.createLiteralInputValue("100")));
  exeRequest.addInput("height",Arrays.asList(wps.createLiteralInputValue("50")));
  ResponseDocumentType doc=wps.createResponseDocumentType(false,true,true,"result");
  DocumentOutputDefinitionType odt=(DocumentOutputDefinitionType)doc.getOutput().get(0);
  odt.setMimeType("application/arcgrid");
  odt.setAsReference(true);
  ResponseFormType responseForm=wps.createResponseForm(doc,null);
  exeRequest.setResponseForm(responseForm);
  ExecuteProcessResponse response=wps.issueRequest(exeRequest);
  assertNotNull(response);
  ExecuteResponseType executeResponse=response.getExecuteResponse();
  assertNotNull(executeResponse);
  while (executeResponse.getStatus().getProcessFailed() == null && executeResponse.getStatus().getProcessSucceeded() == null) {
    String location=executeResponse.getStatusLocation();
    URL url=new URL(location);
    response=wps.issueStatusRequest(url);
    executeResponse=response.getExecuteResponse();
    assertNotNull(executeResponse);
  }
  assertEquals(1,executeResponse.getProcessOutputs().getOutput().size());
  OutputDataType output=(OutputDataType)executeResponse.getProcessOutputs().getOutput().get(0);
  assertEquals("result",output.getIdentifier().getValue());
  assertEquals("application/arcgrid",output.getReference().getMimeType());
  assertNotNull(output.getReference().getHref());
  URL dataURL=new URL(output.getReference().getHref());
  BufferedReader reader=new BufferedReader(new InputStreamReader(dataURL.openStream()));
  StringBuilder sb=new StringBuilder();
  String line=null;
  int count=0;
  while ((line=reader.readLine()) != null && count <= 5) {
    sb.append(line).append("\n");
    count++;
  }
  reader.close();
  String arcgrid=sb.toString();
  String expectedHeader="NCOLS 100\n" + "NROWS 50\n" + "XLLCORNER -180.0\n"+ "YLLCORNER -90.0\n"+ "CELLSIZE 3.6\n"+ "NODATA_VALUE -9999";
  System.out.println(arcgrid);
  assertTrue(arcgrid.startsWith(expectedHeader));
}
