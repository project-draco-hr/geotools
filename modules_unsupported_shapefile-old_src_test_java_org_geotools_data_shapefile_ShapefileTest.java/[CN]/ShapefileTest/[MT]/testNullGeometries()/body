{
  Map<String,Serializable> params=new HashMap<String,Serializable>();
  File tmp=File.createTempFile("test",".dbf");
  if (!tmp.delete()) {
    throw new IllegalStateException("Unable to clear temp file");
  }
  URL shpUrl=tmp.toURI().toURL();
  params.put("url",shpUrl);
  ShapefileDataStore ds=(ShapefileDataStore)new ShapefileDataStoreFactory().createNewDataStore(params);
  SimpleFeatureTypeBuilder tb=new SimpleFeatureTypeBuilder();
  tb.setName("shapefile");
  tb.add("the_geom",Point.class);
  ds.createSchema(tb.buildFeatureType());
  Transaction transaction=Transaction.AUTO_COMMIT;
  FeatureWriter<SimpleFeatureType,SimpleFeature> writer=ds.getFeatureWriter(transaction);
  SimpleFeature feature=writer.next();
  feature.setAttribute(0,null);
  writer.close();
  transaction.commit();
  ds.dispose();
  ShpFiles shpFiles=new ShpFiles(shpUrl);
  ShapefileReader reader=new ShapefileReader(shpFiles,false,true,new GeometryFactory(),false);
  try {
    assertTrue(reader.hasNext());
    assertTrue(reader.nextRecord().shape() == null);
  }
  finally {
    reader.close();
  }
}
