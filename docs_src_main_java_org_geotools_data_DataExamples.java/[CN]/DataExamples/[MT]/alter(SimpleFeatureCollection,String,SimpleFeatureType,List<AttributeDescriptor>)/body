{
  try {
    SimpleFeatureTypeBuilder buildType=new SimpleFeatureTypeBuilder();
    buildType.init(featureType);
    buildType.setName(typename);
    buildType.addAll(newTypes);
    final SimpleFeatureType schema=buildType.buildFeatureType();
    final MemoryDataStore memory=new MemoryDataStore();
    memory.createSchema(schema);
    collection.accepts(new FeatureVisitor(){
      public void visit(      Feature feature){
        SimpleFeatureBuilder builder=new SimpleFeatureBuilder(schema);
        builder.init((SimpleFeature)feature);
        for (        AttributeDescriptor descriptor : newTypes) {
          builder.add(DataUtilities.defaultValue(descriptor));
        }
        SimpleFeature newFeature=builder.buildFeature(feature.getIdentifier().getID());
        memory.addFeature(newFeature);
      }
    }
,null);
    return memory.getFeatureSource(typename);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return null;
}
