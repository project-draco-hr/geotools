{
  SimpleFeatureType target=computeTargetSchemaStatically(source.getSchema(),typeName,definitions);
  if (target != null) {
    return target;
  }
  SimpleFeature sample=null;
  SimpleFeatureIterator iterator=null;
  try {
    iterator=source.getFeatures().features();
    if (iterator.hasNext()) {
      sample=iterator.next();
    }
  }
  finally {
    if (iterator != null) {
      iterator.close();
    }
  }
  if (sample == null) {
    throw new IllegalStateException("Cannot compute the target feature type from the " + "definitions by static analysis, and the source does not have any feature " + "that we can use as a sample to compute the target type dynamically");
  }
  SimpleFeatureTypeBuilder tb=new SimpleFeatureTypeBuilder();
  tb.setName(typeName);
  for (  Definition definition : definitions) {
    AttributeDescriptor ad=definition.getAttributeDescriptor(sample);
    tb.add(ad);
  }
  return tb.buildFeatureType();
}
