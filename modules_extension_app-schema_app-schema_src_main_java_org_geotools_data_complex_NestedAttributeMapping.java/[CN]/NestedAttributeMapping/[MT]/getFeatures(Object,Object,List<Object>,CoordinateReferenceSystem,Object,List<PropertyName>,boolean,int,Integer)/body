{
  if (foreignKeyValue == null) {
    return Collections.<Feature>emptyList();
  }
  if (isSameSource()) {
    throw new UnsupportedOperationException("Link field is missing from feature chaining mapping!");
  }
  FeatureSource<FeatureType,Feature> fSource=getMappingSource(feature);
  if (fSource == null) {
    return null;
  }
  Query query=new Query();
  query.setCoordinateSystemReproject(reprojection);
  Filter filter;
  PropertyName propertyName=filterFac.property(this.nestedTargetXPath.toString());
  filter=filterFac.equals(propertyName,filterFac.literal(foreignKeyValue));
  query.setFilter(filter);
  if (selectedProperties != null) {
    selectedProperties=new ArrayList<PropertyName>(selectedProperties);
    selectedProperties.add(propertyName);
  }
  final Hints hints=new Hints();
  hints.put(Query.INCLUDE_MANDATORY_PROPS,includeMandatory);
  if (resolveDepth > 0) {
    hints.put(Hints.RESOLVE,ResolveValueType.ALL);
    hints.put(Hints.ASSOCIATION_TRAVERSAL_DEPTH,resolveDepth);
    hints.put(Hints.RESOLVE_TIMEOUT,resolveTimeOut);
  }
 else {
    hints.put(Hints.RESOLVE,ResolveValueType.NONE);
  }
  query.setHints(hints);
  query.setProperties(selectedProperties);
  ArrayList<Feature> matchingFeatures=new ArrayList<Feature>();
  FeatureCollection<FeatureType,Feature> fCollection=fSource.getFeatures(query);
  if (fCollection instanceof MappingFeatureCollection) {
    FeatureIterator<Feature> iterator=fCollection.features();
    while (iterator.hasNext()) {
      matchingFeatures.add(iterator.next());
    }
    iterator.close();
  }
  return matchingFeatures;
}
