{
class TestInternalFunction extends InternalVolatileFunction {
    @Override public Object evaluate(    Object object){
      return null;
    }
    @Override public InternalFunction duplicate(    Expression... parameters){
      return new TestInternalFunction();
    }
  }
  Expression internalFunction=new TestInternalFunction();
  Filter filter=fac.isNull(internalFunction);
  DuplicatingFilterVisitor visitor=new DuplicatingFilterVisitor((FilterFactory2)fac);
  Filter newFilter=(Filter)filter.accept(visitor,null);
  assertTrue(newFilter instanceof PropertyIsNull);
  Expression newExpression=((PropertyIsNull)newFilter).getExpression();
  assertNotNull(newExpression);
  assertTrue(newExpression instanceof TestInternalFunction);
  assertNotSame(internalFunction,newExpression);
}
