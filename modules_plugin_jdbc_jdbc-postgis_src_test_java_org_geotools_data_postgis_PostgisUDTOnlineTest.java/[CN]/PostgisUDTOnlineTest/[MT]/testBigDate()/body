{
  SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss G",Locale.ENGLISH);
  df.setTimeZone(TimeZone.getTimeZone("GMT"));
  SimpleFeatureType schema=dataStore.getSchema(tname("date_udt"));
  assertTrue(Date.class.isAssignableFrom(schema.getType("bd").getBinding()));
  FeatureSource source=dataStore.getFeatureSource(tname("date_udt"));
  Date d=date(source,"epoch");
  assertEquals("1970-01-01T00:00:00 AD",df.format(d));
  d=date(source,"epoch+1");
  assertEquals("1970-01-01T00:00:01 AD",df.format(d));
  d=date(source,"epoch-1");
  assertEquals("1969-12-31T23:59:59 AD",df.format(d));
  d=date(source,"ce");
  assertEquals("0001-01-01T00:00:00 AD",df.format(d));
  d=date(source,"bc");
  assertEquals("0001-12-31T23:59:59 BC",df.format(d));
  d=date(source,"min");
  assertEquals("292269055-12-02T16:47:04 BC",df.format(d));
  try (FeatureWriter w=dataStore.getFeatureWriterAppend(tname("date_udt"),Transaction.AUTO_COMMIT)){
    SimpleFeature f=(SimpleFeature)w.next();
    f.setAttribute(aname("bd"),new Date(-62135769600000L));
    f.setAttribute(aname("name"),"ce2");
    w.write();
  }
   d=date(source,"ce2");
  assertEquals("0001-01-01T00:00:00 AD",df.format(d));
  FilterFactory ff=dataStore.getFilterFactory();
  Filter filter=ff.equals(ff.property(aname("bd")),ff.literal(df.parse("1970-01-01T00:00:00 AD")));
  FeatureCollection features=source.getFeatures(filter);
  try (FeatureIterator it=features.features()){
    assertTrue(it.hasNext());
    SimpleFeature f=(SimpleFeature)it.next();
    assertEquals("epoch",f.getAttribute("name"));
    assertFalse(it.hasNext());
  }
   filter=ff.greaterOrEqual(ff.property(aname("bd")),ff.literal(df.parse("1970-01-01T00:00:00 AD")));
  features=source.getFeatures(filter);
  Set<String> names=new HashSet<>();
  try (FeatureIterator it=features.features()){
    while (it.hasNext()) {
      names.add((((SimpleFeature)it.next()).getAttribute("name")).toString());
    }
  }
   assertEquals(2,names.size());
  assertTrue(names.contains("epoch"));
  assertTrue(names.contains("epoch+1"));
}
