{
  FeatureLock lock=FeatureLockFactory.generate("test",LOCK_DURATION);
  FeatureLocking<SimpleFeatureType,SimpleFeature> road=(FeatureLocking<SimpleFeatureType,SimpleFeature>)dataStore.getFeatureSource(tname("road"));
  road.setFeatureLock(lock);
  road.lockFeatures();
  try {
    road.unLockFeatures();
    fail("unlock should fail due on AUTO_COMMIT");
  }
 catch (  IOException expected) {
  }
  try (Transaction t=new DefaultTransaction()){
    road.setTransaction(t);
    try {
      road.unLockFeatures();
      fail("unlock should fail due lack of authorization");
    }
 catch (    IOException expected) {
    }
    t.addAuthorization(lock.getAuthorization());
    road.unLockFeatures();
  }
 }
