{
  try (Transaction t1=new DefaultTransaction();Transaction t2=new DefaultTransaction()){
    SimpleFeature feature;
    SimpleFeature[] ORIGINAL=td.roadFeatures;
    SimpleFeature[] REMOVE=new SimpleFeature[ORIGINAL.length - 1];
    SimpleFeature[] ADD=new SimpleFeature[ORIGINAL.length + 1];
    SimpleFeature[] FINAL=new SimpleFeature[ORIGINAL.length];
    try (FeatureWriter<SimpleFeatureType,SimpleFeature> writer1=dataStore.getFeatureWriter(tname("road"),td.rd1Filter,t1);FeatureWriter<SimpleFeatureType,SimpleFeature> writer2=dataStore.getFeatureWriterAppend(tname("road"),t2)){
      int i;
      int index;
      index=0;
      for (i=0; i < ORIGINAL.length; i++) {
        feature=ORIGINAL[i];
        if (!feature.getID().equals(td.roadFeatures[0].getID())) {
          REMOVE[index++]=feature;
        }
      }
      for (i=0; i < ORIGINAL.length; i++) {
        ADD[i]=ORIGINAL[i];
      }
      ADD[i]=td.newRoad;
      for (i=0; i < REMOVE.length; i++) {
        FINAL[i]=REMOVE[i];
      }
      FINAL[i]=td.newRoad;
      try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),Transaction.AUTO_COMMIT)){
        assertTrue("Sanity check failed: before modification reader didn't match original content",covers(reader,ORIGINAL));
      }
       while (writer1.hasNext()) {
        feature=(SimpleFeature)writer1.next();
        assertEquals(td.roadFeatures[0].getID(),feature.getID());
        writer1.remove();
      }
      try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),Transaction.AUTO_COMMIT)){
        assertTrue("Feature deletion managed to leak out of transaction?",covers(reader,ORIGINAL));
      }
       try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),t1)){
        assertTrue(covers(reader,REMOVE));
      }
       writer1.close();
      try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),Transaction.AUTO_COMMIT)){
        assertTrue(covers(reader,ORIGINAL));
      }
       try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),t1)){
        assertTrue(covers(reader,REMOVE));
      }
       feature=(SimpleFeature)writer2.next();
      feature.setAttributes(td.newRoad.getAttributes());
      writer2.write();
    }
     try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),t2)){
      td.newRoad=findFeature(reader,aname("name"),"r4");
      System.out.println("newRoad:" + td.newRoad);
      ADD[ADD.length - 1]=td.newRoad;
      FINAL[FINAL.length - 1]=td.newRoad;
    }
     try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),Transaction.AUTO_COMMIT)){
      assertTrue(covers(reader,ORIGINAL));
    }
     try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),t2)){
      assertMatched(ADD,reader);
    }
     try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),Transaction.AUTO_COMMIT)){
      assertTrue(covers(reader,ORIGINAL));
    }
     try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),t2)){
      assertTrue(coversLax(reader,ADD));
    }
     t1.commit();
    try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),Transaction.AUTO_COMMIT)){
      assertTrue(covers(reader,REMOVE));
    }
     try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),t1)){
      assertTrue(covers(reader,REMOVE));
    }
     try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),t2)){
      assertTrue(coversLax(reader,FINAL));
    }
     t2.commit();
    try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),Transaction.AUTO_COMMIT)){
      assertTrue(coversLax(reader,FINAL));
    }
     try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),t1)){
      assertTrue(coversLax(reader,FINAL));
    }
     try (FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(new Query(tname("road"),Filter.INCLUDE),t2)){
      assertTrue(coversLax(reader,FINAL));
    }
   }
 }
