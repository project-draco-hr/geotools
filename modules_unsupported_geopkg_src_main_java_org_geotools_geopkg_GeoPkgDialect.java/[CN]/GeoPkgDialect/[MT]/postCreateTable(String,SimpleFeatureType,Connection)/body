{
  FeatureEntry fe=(FeatureEntry)featureType.getUserData().get(FeatureEntry.class);
  if (fe == null) {
    fe=new FeatureEntry();
    fe.setIdentifier(featureType.getTypeName());
    fe.setDescription(featureType.getTypeName());
    fe.setTableName(featureType.getTypeName());
    fe.setLastChange(new Date());
  }
  GeometryDescriptor gd=featureType.getGeometryDescriptor();
  if (gd != null) {
    fe.setGeometryColumn(gd.getLocalName());
    fe.setGeometryType(Geometries.getForBinding((Class)gd.getType().getBinding()));
  }
  fe.setCoordDimension(2);
  CoordinateReferenceSystem crs=featureType.getCoordinateReferenceSystem();
  if (crs != null) {
    Integer epsgCode=null;
    try {
      epsgCode=CRS.lookupEpsgCode(crs,true);
    }
 catch (    FactoryException e) {
      LOGGER.log(Level.WARNING,"Error looking up epsg code for " + crs,e);
    }
    if (epsgCode != null) {
      fe.setSrid(epsgCode);
    }
  }
  GeoPackage geopkg=geopkg();
  try {
    geopkg.addGeoPackageContentsEntry(fe);
    geopkg.addGeometryColumnsEntry(fe);
  }
 catch (  IOException e) {
    throw new SQLException(e);
  }
}
