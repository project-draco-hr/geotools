{
switch (eDataType.getClassifierID()) {
case XlinkPackage.ACTUATE_TYPE:
    return convertActuateTypeToString(eDataType,instanceValue);
case XlinkPackage.SHOW_TYPE:
  return convertShowTypeToString(eDataType,instanceValue);
case XlinkPackage.TYPE_TYPE:
return convertTypeTypeToString(eDataType,instanceValue);
case XlinkPackage.ACTUATE_TYPE_OBJECT:
return convertActuateTypeObjectToString(eDataType,instanceValue);
case XlinkPackage.ARCROLE_TYPE:
return convertArcroleTypeToString(eDataType,instanceValue);
case XlinkPackage.FROM_TYPE:
return convertFromTypeToString(eDataType,instanceValue);
case XlinkPackage.HREF_TYPE:
return convertHrefTypeToString(eDataType,instanceValue);
case XlinkPackage.LABEL_TYPE:
return convertLabelTypeToString(eDataType,instanceValue);
case XlinkPackage.ROLE_TYPE:
return convertRoleTypeToString(eDataType,instanceValue);
case XlinkPackage.SHOW_TYPE_OBJECT:
return convertShowTypeObjectToString(eDataType,instanceValue);
case XlinkPackage.TITLE_ATTR_TYPE:
return convertTitleAttrTypeToString(eDataType,instanceValue);
case XlinkPackage.TO_TYPE:
return convertToTypeToString(eDataType,instanceValue);
case XlinkPackage.TYPE_TYPE_OBJECT:
return convertTypeTypeObjectToString(eDataType,instanceValue);
default :
throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
}
}
