{
  final NetcdfDataset dataset=NetcdfDataset.openDataset(TestData.url(this,"IASI_C_EUMP_20121120062959_31590_eps_o_l2.nc").toExternalForm());
  assertNotNull(dataset);
  final List<CoordinateAxis> cvs=dataset.getCoordinateAxes();
  assertNotNull(cvs);
  assertSame(8,cvs.size());
  Dimension dim=dataset.findDimension("cloud_formations");
  assertNotNull(dim);
  assertEquals("cloud_formations",dim.getShortName());
  CoordinateAxis coordinateAxis=dataset.findCoordinateAxis(dim.getShortName());
  assertNotNull(coordinateAxis);
  assertTrue(coordinateAxis instanceof CoordinateAxis1D);
  Class<?> binding=CoordinateVariable.suggestBinding((CoordinateAxis1D)coordinateAxis);
  assertNotNull(binding);
  assertSame(Short.class,binding);
  CoordinateVariable<?> cv=CoordinateVariable.create((CoordinateAxis1D)coordinateAxis);
  assertSame(Short.class,cv.getType());
  assertEquals((short)0,cv.getMinimum());
  assertEquals((short)2,cv.getMaximum());
  assertEquals(3,cv.getSize());
  assertEquals("level",cv.getUnit());
  dim=dataset.findDimension("lat");
  assertNotNull(dim);
  assertEquals("lat",dim.getShortName());
  coordinateAxis=dataset.findCoordinateAxis(dim.getShortName());
  assertNotNull(coordinateAxis);
  assertTrue(coordinateAxis instanceof CoordinateAxis1D);
  binding=CoordinateVariable.suggestBinding((CoordinateAxis1D)coordinateAxis);
  assertNotNull(binding);
  assertSame(Float.class,binding);
  cv=CoordinateVariable.create((CoordinateAxis1D)coordinateAxis);
  assertNotNull(cv);
  assertSame(Float.class,cv.getType());
  assertEquals(-77.327934f,cv.getMinimum());
  assertEquals(89.781555f,cv.getMaximum());
  assertEquals(766,cv.getSize());
  assertEquals("degrees_north",cv.getUnit());
  assertTrue(cv.isRegular());
  assertEquals(cv.getMinimum(),cv.getStart());
  assertEquals(0.2184437770469516,cv.getIncrement());
  dim=dataset.findDimension("lon");
  assertNotNull(dim);
  assertEquals("lon",dim.getShortName());
  coordinateAxis=dataset.findCoordinateAxis(dim.getShortName());
  assertNotNull(coordinateAxis);
  assertTrue(coordinateAxis instanceof CoordinateAxis1D);
  binding=CoordinateVariable.suggestBinding((CoordinateAxis1D)coordinateAxis);
  assertNotNull(binding);
  assertSame(Float.class,binding);
  cv=CoordinateVariable.create((CoordinateAxis1D)coordinateAxis);
  assertNotNull(cv);
  assertEquals("degrees_east",cv.getUnit());
  dim=dataset.findDimension("nlo");
  assertNotNull(dim);
  assertEquals("nlo",dim.getShortName());
  coordinateAxis=dataset.findCoordinateAxis(dim.getShortName());
  assertNotNull(coordinateAxis);
  assertTrue(coordinateAxis instanceof CoordinateAxis1D);
  binding=CoordinateVariable.suggestBinding((CoordinateAxis1D)coordinateAxis);
  assertNotNull(binding);
  assertSame(Double.class,binding);
  cv=CoordinateVariable.create((CoordinateAxis1D)coordinateAxis);
  assertNotNull(cv);
  assertEquals("Pa",cv.getUnit());
  dim=dataset.findDimension("nlt");
  assertNotNull(dim);
  assertEquals("nlt",dim.getShortName());
  coordinateAxis=dataset.findCoordinateAxis(dim.getShortName());
  assertNotNull(coordinateAxis);
  assertTrue(coordinateAxis instanceof CoordinateAxis1D);
  binding=CoordinateVariable.suggestBinding((CoordinateAxis1D)coordinateAxis);
  assertNotNull(binding);
  assertSame(Double.class,binding);
  cv=CoordinateVariable.create((CoordinateAxis1D)coordinateAxis);
  assertNotNull(cv);
  assertEquals("Pa",cv.getUnit());
  dataset.close();
}
