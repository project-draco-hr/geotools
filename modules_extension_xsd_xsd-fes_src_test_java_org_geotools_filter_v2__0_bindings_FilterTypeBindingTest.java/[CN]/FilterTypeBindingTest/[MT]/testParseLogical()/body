{
  String xml="<fes:Filter " + "   xmlns:fes='http://www.opengis.net/fes/2.0' " + "   xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' "+ "   xsi:schemaLocation='http://www.opengis.net/fes/2.0 "+ "   http://schemas.opengis.net/filter/2.0/filterAll.xsd'> "+ "   <fes:And> "+ "      <fes:Or> "+ "         <fes:PropertyIsEqualTo> "+ "            <fes:ValueReference>FIELD1</fes:ValueReference> "+ "            <fes:Literal>10</fes:Literal> "+ "         </fes:PropertyIsEqualTo> "+ "         <fes:PropertyIsEqualTo> "+ "            <fes:ValueReference>FIELD1</fes:ValueReference> "+ "            <fes:Literal>20</fes:Literal> "+ "         </fes:PropertyIsEqualTo> "+ "      </fes:Or> "+ "      <fes:PropertyIsEqualTo> "+ "         <fes:ValueReference>STATUS</fes:ValueReference> "+ "         <fes:Literal>VALID</fes:Literal> "+ "      </fes:PropertyIsEqualTo> "+ "   </fes:And> "+ "</fes:Filter> ";
  buildDocument(xml);
  And f=(And)parse();
  assertNotNull(f);
  assertEquals(2,f.getChildren().size());
  Or f1=(Or)f.getChildren().get(0);
  assertEquals(2,f1.getChildren().size());
  PropertyIsEqualTo f11=(PropertyIsEqualTo)f1.getChildren().get(0);
  assertEquals("FIELD1",((PropertyName)f11.getExpression1()).getPropertyName());
  assertEquals("10",((Literal)f11.getExpression2()).evaluate(null,String.class));
  PropertyIsEqualTo f12=(PropertyIsEqualTo)f1.getChildren().get(1);
  assertEquals("FIELD1",((PropertyName)f12.getExpression1()).getPropertyName());
  assertEquals("20",((Literal)f12.getExpression2()).evaluate(null,String.class));
  PropertyIsEqualTo f2=(PropertyIsEqualTo)f.getChildren().get(1);
  assertEquals("STATUS",((PropertyName)f2.getExpression1()).getPropertyName());
  assertEquals("VALID",((Literal)f2.getExpression2()).evaluate(null,String.class));
}
