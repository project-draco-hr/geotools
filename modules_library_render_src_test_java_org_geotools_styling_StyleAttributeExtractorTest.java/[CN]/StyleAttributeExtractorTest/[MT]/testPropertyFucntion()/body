{
  PointSymbolizer ps=sb.createPointSymbolizer();
  ps.setGeometry(ff.function("offset",ff.property("the_geom"),ff.property("offx"),ff.property("offy")));
  Function func=ff.function("property",ff.function("env",ff.literal("pname")));
  PropertyIsEqualTo filter=ff.equals(func,ff.literal("test"));
  Rule r=sb.createRule(ps);
  r.setFilter(filter);
  try {
    EnvFunction.setLocalValue("pname","name");
    StyleAttributeExtractor extractor=new StyleAttributeExtractor();
    r.accept(extractor);
    Set<String> atts=extractor.getAttributeNameSet();
    assertEquals(4,atts.size());
    assertTrue(atts.contains("the_geom"));
    assertTrue(atts.contains("offx"));
    assertTrue(atts.contains("offy"));
    assertTrue(atts.contains("name"));
    assertFalse(extractor.getDefaultGeometryUsed());
    Set<PropertyName> propNames=extractor.getAttributes();
    assertNotNull(propNames);
    assertEquals(atts.size(),propNames.size());
    for (    PropertyName pn : propNames) {
      assertTrue(atts.contains(pn.getPropertyName()));
    }
  }
  finally {
    EnvFunction.clearLocalValues();
  }
}
