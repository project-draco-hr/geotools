{
  this.name=(name=name.trim());
synchronized (values) {
    this.ordinal=values.size();
    if (!values.add((E)this)) {
      throw new IllegalArgumentException("Duplicated value: " + name);
    }
  }
  final Class<? extends CodeList> codeType=getClass();
synchronized (VALUES) {
    final Collection<? extends CodeList> previous=VALUES.put(codeType,values);
    if (previous != null && previous != values) {
      VALUES.put(codeType,previous);
      throw new IllegalArgumentException("List already exists: " + values);
    }
  }
}
