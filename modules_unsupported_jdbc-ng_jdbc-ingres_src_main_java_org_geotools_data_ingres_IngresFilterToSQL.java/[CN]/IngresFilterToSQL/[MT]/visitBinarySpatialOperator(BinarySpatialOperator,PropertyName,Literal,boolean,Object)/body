{
  try {
    if (filter instanceof DistanceBufferOperator) {
      visitDistanceSpatialOperator((DistanceBufferOperator)filter,property,geometry,swapped,extraData);
    }
 else {
      visitComparisonSpatialOperator(filter,property,geometry,swapped,extraData);
    }
  }
 catch (  IOException e) {
    throw new RuntimeException(IO_ERROR,e);
  }
  return extraData;
}
