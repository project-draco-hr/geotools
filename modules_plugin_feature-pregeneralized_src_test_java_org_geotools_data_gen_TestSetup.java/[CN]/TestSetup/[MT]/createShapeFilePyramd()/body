{
  URL url=null;
  File baseDir=new File("target" + File.separator + "0");
  if (baseDir.exists() == false)   baseDir.mkdir();
 else   return;
  String propFileName="target" + File.separator + "0"+ File.separator+ "streams.properties";
  File propFile=new File(propFileName);
  FileOutputStream out=new FileOutputStream(propFile);
  String line=ShapefileDataStoreFactory.URLP.key + "=" + "file:target/0/streams.shp\n";
  out.write(line.getBytes());
  out.close();
  url=TestData.url("shapes/streams.shp");
  ShapefileDataStore shapeDS=(ShapefileDataStore)new ShapefileDataStoreFactory().createDataStore(url);
  Map<String,Serializable> params=new HashMap<String,Serializable>();
  FileDataStoreFactorySpi factory=new ShapefileDataStoreFactory();
  params.put(ShapefileDataStoreFactory.URLP.key,new File("target/0/streams.shp").toURI().toURL());
  ShapefileDataStore ds=(ShapefileDataStore)factory.createNewDataStore(params);
  SimpleFeatureSource fs=shapeDS.getFeatureSource(shapeDS.getTypeNames()[0]);
  ds.createSchema(fs.getSchema());
  ds.forceSchemaCRS(fs.getSchema().getCoordinateReferenceSystem());
  FeatureWriter<SimpleFeatureType,SimpleFeature> writer=ds.getFeatureWriter(ds.getTypeNames()[0],Transaction.AUTO_COMMIT);
  Iterator<SimpleFeature> it=fs.getFeatures().iterator();
  while (it.hasNext()) {
    SimpleFeature f=it.next();
    SimpleFeature fNew=writer.next();
    fNew.setAttributes(f.getAttributes());
    writer.write();
  }
  writer.close();
  ds.dispose();
  shapeDS.dispose();
  Toolbox tb=new Toolbox();
  tb.parse(new String[]{"generalize","target" + File.separator + "0"+ File.separator+ "streams.shp","target","5.0,10.0,20.0,50.0"});
}
