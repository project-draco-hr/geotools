{
  XMLConfigDigester reader=new XMLConfigDigester();
  URL url=getClass().getResource(schemaBase + "BoreholeTest_properties.xml");
  AppSchemaDataAccessDTO config=reader.parse(url);
  Set mappings=AppSchemaDataAccessConfigurator.buildMappings(config);
  assertNotNull(mappings);
  assertEquals(1,mappings.size());
  FeatureTypeMapping mapping=(FeatureTypeMapping)mappings.iterator().next();
  AttributeDescriptor targetFeature=mapping.getTargetFeature();
  assertNotNull(targetFeature);
  assertNotNull(targetFeature.getType());
  assertEquals(XMMLNS,targetFeature.getName().getNamespaceURI());
  assertEquals("Borehole",targetFeature.getName().getLocalPart());
  source=mapping.getSource();
  assertNotNull(source);
  FeatureType schema=source.getSchema();
  String typeName=schema.getName().toString();
  assertEquals("test-data:boreholes_denormalized",typeName);
  List attributeMappings=mapping.getAttributeMappings();
  assertEquals(24,attributeMappings.size());
  AttributeMapping attMapping=(AttributeMapping)attributeMappings.get(0);
  assertNotNull(attMapping);
  StepList targetXPath=attMapping.getTargetXPath();
  assertNotNull(targetXPath);
  assertEquals("xmml:Borehole",targetXPath.toString());
  Expression idExpression=attMapping.getIdentifierExpression();
  assertNotNull(idExpression);
  assertTrue(idExpression instanceof Function);
  Function idFunction=(Function)idExpression;
  assertEquals("strConcat",idFunction.getName());
  assertTrue(idFunction.getParameters().get(0) instanceof Literal);
  assertTrue(idFunction.getParameters().get(1) instanceof PropertyName);
  assertEquals(Expression.NIL,attMapping.getSourceExpression());
}
