{
  List types=new ArrayList(schema.getTypeDefinitions());
  List anonymous=new ArrayList();
  for (Iterator e=schema.getElementDeclarations().iterator(); e.hasNext(); ) {
    XSDElementDeclaration element=(XSDElementDeclaration)e.next();
    if (element.getAnonymousTypeDefinition() != null) {
      element.getAnonymousTypeDefinition().setName("_" + element.getName());
      anonymous.add(element.getAnonymousTypeDefinition());
    }
  }
  for (Iterator a=schema.getAttributeDeclarations().iterator(); a.hasNext(); ) {
    XSDAttributeDeclaration attribute=(XSDAttributeDeclaration)a.next();
    if (attribute.getAnonymousTypeDefinition() != null) {
      attribute.getAnonymousTypeDefinition().setName("_" + attribute.getName());
      anonymous.add(attribute.getAnonymousTypeDefinition());
    }
  }
  for (Iterator t=types.iterator(); t.hasNext(); ) {
    XSDTypeDefinition type=(XSDTypeDefinition)t.next();
    List particles=Schemas.getChildElementParticles(type,false);
    for (Iterator p=particles.iterator(); p.hasNext(); ) {
      XSDParticle particle=(XSDParticle)p.next();
      XSDElementDeclaration element=(XSDElementDeclaration)particle.getContent();
      if (element.isElementDeclarationReference())       continue;
      if (element.getAnonymousTypeDefinition() != null) {
        element.getAnonymousTypeDefinition().setName(type.getName() + "_" + element.getName());
        anonymous.add(element.getAnonymousTypeDefinition());
      }
    }
  }
  types.addAll(anonymous);
  return types;
}
