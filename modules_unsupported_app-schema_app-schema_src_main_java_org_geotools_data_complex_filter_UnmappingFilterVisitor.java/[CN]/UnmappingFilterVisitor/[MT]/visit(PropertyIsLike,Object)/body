{
  Expression value=filter.getExpression();
  List unrolledValues=(List)value.accept(this,null);
  String literal=filter.getLiteral();
  String wildcard=filter.getWildCard();
  String single=filter.getSingleChar();
  String escape=filter.getEscape();
  List combined=new ArrayList(unrolledValues.size());
  for (Iterator it=unrolledValues.iterator(); it.hasNext(); ) {
    Expression sourceValue=(Expression)it.next();
    Filter newFilter=ff.like(sourceValue,literal,wildcard,single,escape);
    if (sourceValue instanceof NestedAttributeExpression) {
      newFilter=new MultiValuedOrImpl(ff,newFilter,(NestedAttributeExpression)sourceValue);
    }
    combined.add(newFilter);
  }
  Filter unrolled=combineOred(combined);
  return unrolled;
}
