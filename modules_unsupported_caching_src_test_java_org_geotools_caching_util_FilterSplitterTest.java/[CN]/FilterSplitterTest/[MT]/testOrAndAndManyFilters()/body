{
  Envelope testenv=new Envelope(bb2env);
  testenv.expandToInclude(bbenv);
  Filter testfilter=ff.bbox("geom",testenv.getMinX(),testenv.getMinY(),testenv.getMaxX(),testenv.getMaxY(),"srs");
  BBoxFilterSplitter splitter=new BBoxFilterSplitter();
  Filter or=ff.or(bb,bb2);
  Filter and=ff.and(or,att);
  and.accept(splitter,null);
  assertNotNull(splitter.getEnvelope());
  assertEquals(testfilter,splitter.getFilterPre());
  assertEquals(and,splitter.getFilterPost());
  splitter=new BBoxFilterSplitter();
  and=ff.and(bb,bb2);
  or=ff.or(and,att);
  or.accept(splitter,null);
  assertNotNull(splitter.getEnvelope());
  assertEquals(Filter.INCLUDE,splitter.getFilterPre());
  assertEquals(or,splitter.getFilterPost());
  splitter=new BBoxFilterSplitter();
  or=ff.or(bb,bb2);
  and=ff.and(or,bb);
  and.accept(splitter,null);
  assertNotNull(splitter.getEnvelope());
  assertEquals(testfilter,splitter.getFilterPre());
  assertEquals(and,splitter.getFilterPost());
  splitter=new BBoxFilterSplitter();
  or=ff.or(bb,att);
  and=ff.and(or,bb);
  and.accept(splitter,null);
  assertNotNull(splitter.getEnvelope());
  assertEquals(bb,splitter.getFilterPre());
  assertEquals(and,splitter.getFilterPost());
  splitter=new BBoxFilterSplitter();
  and=ff.and(bb,att);
  or=ff.or(and,bb2);
  or.accept(splitter,null);
  assertNotNull(splitter.getEnvelope());
  assertEquals(testfilter,splitter.getFilterPre());
  assertEquals(or,splitter.getFilterPost());
  splitter=new BBoxFilterSplitter();
  Filter and1=ff.and(bb,att);
  Filter and2=ff.and(bb2,att);
  or=ff.or(and1,and2);
  or.accept(splitter,null);
  assertNotNull(splitter.getEnvelope());
  assertEquals(testfilter,splitter.getFilterPre());
  assertEquals(or,splitter.getFilterPost());
  splitter=new BBoxFilterSplitter();
  Filter or1=ff.or(bb,att);
  Filter or2=ff.or(bb2,att);
  and=ff.and(or1,or2);
  and.accept(splitter,null);
  assertNotNull(splitter.getEnvelope());
  assertEquals(Filter.INCLUDE,splitter.getFilterPre());
  assertEquals(and,splitter.getFilterPost());
}
