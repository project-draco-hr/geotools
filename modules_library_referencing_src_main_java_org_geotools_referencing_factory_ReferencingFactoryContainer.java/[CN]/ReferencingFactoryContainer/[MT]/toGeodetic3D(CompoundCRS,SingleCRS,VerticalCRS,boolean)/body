{
  final CoordinateSystemAxis[] axis=new CoordinateSystemAxis[3];
  final CoordinateSystem cs=horizontal.getCoordinateSystem();
  axis[xyFirst ? 0 : 1]=cs.getAxis(0);
  axis[xyFirst ? 1 : 2]=cs.getAxis(1);
  axis[xyFirst ? 2 : 0]=vertical.getCoordinateSystem().getAxis(0);
  final Map<String,?> csName, crsName;
  if (crs != null) {
    csName=AbstractIdentifiedObject.getProperties(crs.getCoordinateSystem());
    crsName=AbstractIdentifiedObject.getProperties(crs);
  }
 else {
    csName=getTemporaryName(cs);
    crsName=getTemporaryName(horizontal);
  }
  final CSFactory csFactory=getCSFactory();
  final CRSFactory crsFactory=getCRSFactory();
  if (horizontal instanceof GeographicCRS) {
    final GeographicCRS sourceCRS=(GeographicCRS)horizontal;
    final EllipsoidalCS targetCS=csFactory.createEllipsoidalCS(csName,axis[0],axis[1],axis[2]);
    return crsFactory.createGeographicCRS(crsName,sourceCRS.getDatum(),targetCS);
  }
  if (horizontal instanceof ProjectedCRS) {
    final ProjectedCRS sourceCRS=(ProjectedCRS)horizontal;
    final CartesianCS targetCS=csFactory.createCartesianCS(csName,axis[0],axis[1],axis[2]);
    final GeographicCRS base2D=sourceCRS.getBaseCRS();
    final GeographicCRS base3D=(GeographicCRS)toGeodetic3D(null,base2D,vertical,xyFirst);
    final Matrix prepend=toStandard(base2D,false);
    final Matrix append=toStandard(sourceCRS,true);
    Conversion projection=sourceCRS.getConversionFromBase();
    if (!prepend.isIdentity() || !append.isIdentity()) {
      final MathTransformFactory mtFactory=getMathTransformFactory();
      MathTransform mt=projection.getMathTransform();
      mt=mtFactory.createConcatenatedTransform(mtFactory.createConcatenatedTransform(mtFactory.createAffineTransform(prepend),mt),mtFactory.createAffineTransform(append));
      projection=new DefiningConversion(AbstractCS.getProperties(projection),projection.getMethod(),mt);
    }
    return crsFactory.createProjectedCRS(crsName,base3D,projection,targetCS);
  }
  throw new AssertionError(horizontal);
}
