{
  this.useMemoryMappedBuffer=useMemoryMappedBuffer;
  streamLogger.open();
  ReadableByteChannel byteChannel=shpFiles.getReadChannel(ShpFileType.SHX,this);
  try {
    if (byteChannel instanceof FileChannel) {
      this.channel=(FileChannel)byteChannel;
      if (useMemoryMappedBuffer) {
        LOGGER.finest("Memory mapping file...");
        this.buf=this.channel.map(FileChannel.MapMode.READ_ONLY,0,this.channel.size());
        this.channelOffset=0;
      }
 else {
        LOGGER.finest("Reading from file...");
        this.buf=NIOUtilities.allocate(8 * RECS_IN_BUFFER);
        channel.read(buf);
        buf.flip();
        this.channelOffset=0;
      }
      header=new ShapefileHeader();
      header.read(buf,true);
    }
 else {
      LOGGER.finest("Loading all shx...");
      readHeader(byteChannel);
      readRecords(byteChannel);
      byteChannel.close();
    }
  }
 catch (  Throwable e) {
    if (byteChannel != null) {
      byteChannel.close();
    }
    throw (IOException)new IOException(e.getLocalizedMessage()).initCause(e);
  }
}
