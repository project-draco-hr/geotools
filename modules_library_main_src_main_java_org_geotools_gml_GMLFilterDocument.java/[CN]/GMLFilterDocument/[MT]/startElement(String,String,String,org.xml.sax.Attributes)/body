{
  LOGGER.entering("GMLFilterDocument","startElement",new Object[]{namespaceURI,localName,qName,atts});
  if (namespaceURI != null && namespaceURI.equals(GML_NAMESPACE)) {
    if (BASE_GEOMETRY_TYPES.contains(localName)) {
      parent.geometryStart(localName,atts);
    }
 else     if (SUB_GEOMETRY_TYPES.contains(localName)) {
      parent.geometrySub(localName);
    }
 else     if (COORDINATES_NAME.equals(localName)) {
      coordinateReader.insideCoordinates(true,atts);
      buffer=new StringBuffer();
    }
 else     if (COORD_NAME.equals(localName)) {
      coordinateReader.insideCoord(true);
      buffer=new StringBuffer();
    }
 else     if (X_NAME.equals(localName)) {
      buffer=new StringBuffer();
      coordinateReader.insideX(true);
    }
 else     if (Y_NAME.equals(localName)) {
      buffer=new StringBuffer();
      coordinateReader.insideY(true);
    }
 else     if (Z_NAME.equals(localName)) {
      buffer=new StringBuffer();
      coordinateReader.insideZ(true);
    }
 else {
      parent.startElement(namespaceURI,localName,qName,atts);
    }
  }
 else {
    parent.startElement(namespaceURI,localName,qName,atts);
  }
  LOGGER.exiting("GMLFilterDocument","startElement");
}
