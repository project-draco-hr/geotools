{
  LOGGER.entering("GMLFilterDocument","endElement",new Object[]{namespaceURI,localName,qName});
  if (namespaceURI.equals(GML_NAMESPACE) || !namespaceAware) {
    if (BASE_GEOMETRY_TYPES.contains(localName)) {
      parent.geometryEnd(localName);
    }
 else     if (SUB_GEOMETRY_TYPES.contains(localName)) {
      parent.geometrySub(localName);
    }
 else     if (COORDINATES_NAME.equals(localName)) {
      coordinateReader.readCoordinates(buffer.toString());
      coordinateReader.insideCoordinates(false);
    }
 else     if (COORD_NAME.equals(localName)) {
      coordinateReader.readCoord(buffer.toString());
      coordinateReader.insideCoord(false);
    }
 else     if (X_NAME.equals(localName)) {
      coordinateReader.readCoord(buffer.toString());
      coordinateReader.insideX(false);
    }
 else     if (Y_NAME.equals(localName)) {
      coordinateReader.readCoord(buffer.toString());
      coordinateReader.insideY(false);
    }
 else     if (Z_NAME.equals(localName)) {
      coordinateReader.readCoord(buffer.toString());
      coordinateReader.insideZ(false);
    }
 else     if (!namespaceAware) {
      parent.endElement(namespaceURI,localName,qName);
    }
 else {
      parent.endElement(namespaceURI,localName,qName);
    }
  }
 else {
    parent.endElement(namespaceURI,localName,qName);
  }
  LOGGER.exiting("GMLFilterDocument","endElement");
}
