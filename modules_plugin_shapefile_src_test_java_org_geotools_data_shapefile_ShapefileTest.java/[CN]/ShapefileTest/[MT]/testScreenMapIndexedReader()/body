{
  URL shpUrl=TestData.url(this,SHP_FILTER_BEFORE_SCREENMAP + "/" + SHP_FILTER_BEFORE_SCREENMAP+ ".shp");
  Map<String,Serializable> params=new HashMap<String,Serializable>();
  params.put(ShapefileDataStoreFactory.URLP.key,shpUrl);
  params.put(ShapefileDataStoreFactory.CREATE_SPATIAL_INDEX.key,Boolean.TRUE);
  ShapefileDataStore ds=(ShapefileDataStore)new ShapefileDataStoreFactory().createDataStore(params);
  String fidPrefix=ds.getTypeName().getLocalPart();
  Filter filter=ff.id(ff.featureId(fidPrefix + ".0"),ff.featureId(fidPrefix + ".1"),ff.featureId(fidPrefix + ".2"));
  ds.indexManager.hasFidIndex(true);
  FeatureReader<SimpleFeatureType,SimpleFeature> reader=ds.getFeatureReader(new Query(ds.getTypeNames()[0],filter),Transaction.AUTO_COMMIT);
  assertTrue(reader instanceof IndexedShapefileFeatureReader);
  ScreenMap screenMap=new ScreenMap(-180,-90,360,180);
  screenMap.setSpans(1.0,1.0);
  screenMap.setTransform(IdentityTransform.create(2));
  ((ShapefileFeatureReader)reader).setScreenMap(screenMap);
  ((ShapefileFeatureReader)reader).setSimplificationDistance(1.0);
  int count=0;
  while (reader.hasNext()) {
    SimpleFeature feature=reader.next();
    assertNotNull(feature);
    assertNotSame(ShapefileFeatureReader.SKIP,feature.getDefaultGeometry());
    count++;
  }
  assertEquals(1,count);
  reader.close();
}
