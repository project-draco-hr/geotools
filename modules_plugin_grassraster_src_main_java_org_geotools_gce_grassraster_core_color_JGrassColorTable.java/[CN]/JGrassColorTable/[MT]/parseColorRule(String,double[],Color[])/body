{
  if (colors == null) {
    colors=new Color[2];
  }
  String[] ruleSplit=rule.split("\\s+");
  if (ruleSplit.length >= 2) {
    String part1=ruleSplit[0];
    String part2=ruleSplit[1];
    int alpha=255;
    if (ruleSplit.length == 3)     alpha=Integer.parseInt(ruleSplit[2]);
    String[] part1Split=part1.split(":");
    String[] part2Split=part2.split(":");
    if (part1Split.length == 2) {
      values[0]=Double.parseDouble(part1Split[0]);
      colors[0]=new Color(Integer.parseInt(part1Split[1]),Integer.parseInt(part1Split[1]),Integer.parseInt(part1Split[1]),alpha);
    }
 else     if (part1Split.length == 4) {
      values[0]=Double.parseDouble(part1Split[0]);
      colors[0]=new Color(Integer.parseInt(part1Split[1]),Integer.parseInt(part1Split[2]),Integer.parseInt(part1Split[3]),alpha);
    }
 else {
      values[0]=Double.NaN;
      colors[0]=new Color(0,0,0);
    }
    if (part2Split.length == 2) {
      values[1]=Double.parseDouble(part2Split[0]);
      colors[1]=new Color(Integer.parseInt(part2Split[1]),Integer.parseInt(part2Split[1]),Integer.parseInt(part2Split[1]),alpha);
    }
 else     if (part2Split.length == 4) {
      values[1]=Double.parseDouble(part2Split[0]);
      colors[1]=new Color(Integer.parseInt(part2Split[1]),Integer.parseInt(part2Split[2]),Integer.parseInt(part2Split[3]),alpha);
    }
 else {
      values[1]=Double.NaN;
      colors[1]=new Color(255,255,255);
    }
  }
 else   if (ruleSplit.length >= 1) {
    String part=ruleSplit[0];
    int alpha=255;
    if (ruleSplit.length == 2)     alpha=Integer.parseInt(ruleSplit[1]);
    String[] partSplit=part.split(":");
    if (partSplit.length == 2) {
      values[0]=Double.parseDouble(partSplit[0]);
      colors[0]=new Color(Integer.parseInt(partSplit[1]),Integer.parseInt(partSplit[1]),Integer.parseInt(partSplit[1]),alpha);
    }
 else     if (partSplit.length == 4) {
      values[0]=Double.parseDouble(partSplit[0]);
      colors[0]=new Color(Integer.parseInt(partSplit[1]),Integer.parseInt(partSplit[2]),Integer.parseInt(partSplit[3]),alpha);
    }
 else {
      values[0]=Double.NaN;
      colors[0]=new Color(0,0,0);
    }
    values[1]=values[0];
    colors[1]=colors[0];
  }
 else {
    values[0]=-1000;
    colors[0]=new Color(0,0,0);
    values[1]=1000;
    colors[1]=new Color(255,255,255);
  }
}
