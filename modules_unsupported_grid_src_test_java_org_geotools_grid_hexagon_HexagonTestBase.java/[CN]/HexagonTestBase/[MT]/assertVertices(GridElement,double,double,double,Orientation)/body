{
  assertTrue("error in test code",hexagon instanceof Hexagon);
  final double span=Math.sqrt(3.0) * sideLen;
  Coordinate[] expected=new Coordinate[6];
  if (orientation == Orientation.FLAT) {
    expected[0]=new Coordinate(minx + 0.5 * sideLen,miny + span);
    expected[1]=new Coordinate(minx + 1.5 * sideLen,miny + span);
    expected[2]=new Coordinate(minx + 2.0 * sideLen,miny + 0.5 * span);
    expected[3]=new Coordinate(minx + 1.5 * sideLen,miny);
    expected[4]=new Coordinate(minx + 0.5 * sideLen,miny);
    expected[5]=new Coordinate(minx,miny + span / 2.0);
  }
 else {
    expected[0]=new Coordinate(minx + 0.5 * span,miny + 2.0 * sideLen);
    expected[1]=new Coordinate(minx + span,miny + 1.5 * sideLen);
    expected[2]=new Coordinate(minx + span,miny + 0.5 * sideLen);
    expected[3]=new Coordinate(minx + 0.5 * span,miny);
    expected[4]=new Coordinate(minx,miny + 0.5 * sideLen);
    expected[5]=new Coordinate(minx,miny + 1.5 * sideLen);
  }
  Coordinate[] vertices=hexagon.getVertices();
  assertEquals(6,vertices.length);
  for (int i=0; i < vertices.length; i++) {
    assertCoordinate(expected[i],vertices[i]);
  }
}
