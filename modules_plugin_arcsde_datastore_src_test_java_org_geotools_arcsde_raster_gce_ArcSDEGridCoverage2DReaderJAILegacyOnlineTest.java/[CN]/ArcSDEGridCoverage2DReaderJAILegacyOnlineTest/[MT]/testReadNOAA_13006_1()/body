{
  tableName="SDE.RASTER.NOAA_13006_1";
  final AbstractGridCoverage2DReader reader=getReader();
  assertNotNull("Couldn't obtain a reader for " + tableName,reader);
  final GeneralEnvelope originalEnvelope=reader.getOriginalEnvelope();
  final int reqWidth=100;
  final int reqHeight=75;
  GeneralEnvelope reqEnvelope=new GeneralEnvelope(new double[]{274059,837434},new double[]{355782,898216});
  reqEnvelope.setCoordinateReferenceSystem(originalEnvelope.getCoordinateReferenceSystem());
  final GridCoverage2D coverage=readCoverage(reader,reqWidth,reqHeight,reqEnvelope);
  assertNotNull("read coverage returned null",coverage);
  GridGeometry2D gg=coverage.getGridGeometry();
  Envelope2D envelope2D=gg.getEnvelope2D();
  GridEnvelope gridRange=gg.getGridRange();
  System.out.println("requested size: " + reqWidth + "x"+ reqHeight);
  System.out.println("result size   : " + gridRange.getSpan(0) + "x"+ gridRange.getSpan(1));
  System.out.println("requested envelope: " + reqEnvelope);
  System.out.println("result envelope   : " + envelope2D);
  writeToDisk(coverage,"testRead_" + tableName);
  RenderedImage image=coverage.getRenderedImage();
  ColorModel colorModel=image.getColorModel();
  assertTrue(colorModel instanceof IndexColorModel);
  IndexColorModel cm=((IndexColorModel)colorModel);
  int numComponents=cm.getMapSize();
  byte[] r=new byte[numComponents];
  byte[] g=new byte[numComponents];
  byte[] b=new byte[numComponents];
  byte[] a=new byte[numComponents];
  cm.getReds(r);
  cm.getGreens(g);
  cm.getBlues(b);
  cm.getAlphas(a);
  for (int i=0; i < numComponents; i++) {
    System.out.print(i + " = ");
    System.out.print((int)r[i] & 0xFF);
    System.out.print(',');
    System.out.print((int)g[i] & 0xFF);
    System.out.print(',');
    System.out.print((int)b[i] & 0xFF);
    System.out.print(',');
    System.out.print((int)a[i] & 0xFF);
    System.out.print('\n');
  }
}
