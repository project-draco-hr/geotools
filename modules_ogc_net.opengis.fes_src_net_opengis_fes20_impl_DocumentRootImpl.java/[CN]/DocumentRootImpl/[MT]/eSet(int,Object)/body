{
switch (featureID) {
case Fes20Package.DOCUMENT_ROOT__MIXED:
    ((FeatureMap.Internal)getMixed()).set(newValue);
  return;
case Fes20Package.DOCUMENT_ROOT__XMLNS_PREFIX_MAP:
((EStructuralFeature.Setting)getXMLNSPrefixMap()).set(newValue);
return;
case Fes20Package.DOCUMENT_ROOT__XSI_SCHEMA_LOCATION:
((EStructuralFeature.Setting)getXSISchemaLocation()).set(newValue);
return;
case Fes20Package.DOCUMENT_ROOT__AFTER:
setAfter((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__AND:
setAnd((BinaryLogicOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__ANY_INTERACTS:
setAnyInteracts((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__BBOX:
setBBOX((BBOXType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__BEFORE:
setBefore((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__BEGINS:
setBegins((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__BEGUN_BY:
setBegunBy((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__BEYOND:
setBeyond((DistanceBufferType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__CONTAINS:
setContains((BinarySpatialOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__CROSSES:
setCrosses((BinarySpatialOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__DISJOINT:
setDisjoint((BinarySpatialOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__DURING:
setDuring((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__DWITHIN:
setDWithin((DistanceBufferType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__ENDED_BY:
setEndedBy((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__ENDS:
setEnds((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__EQUALS:
setEquals((BinarySpatialOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__FILTER:
setFilter((FilterType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__FILTER_CAPABILITIES:
setFilterCapabilities((FilterCapabilitiesType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__FUNCTION:
setFunction((FunctionType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__INTERSECTS:
setIntersects((BinarySpatialOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__LITERAL:
setLiteral((LiteralType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__LOGICAL_OPERATORS:
setLogicalOperators((LogicalOperatorsType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__MEETS:
setMeets((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__MET_BY:
setMetBy((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__NOT:
setNot((UnaryLogicOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__OR:
setOr((BinaryLogicOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__OVERLAPPED_BY:
setOverlappedBy((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__OVERLAPS:
setOverlaps((BinarySpatialOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_BETWEEN:
setPropertyIsBetween((PropertyIsBetweenType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_EQUAL_TO:
setPropertyIsEqualTo((BinaryComparisonOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_GREATER_THAN:
setPropertyIsGreaterThan((BinaryComparisonOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_GREATER_THAN_OR_EQUAL_TO:
setPropertyIsGreaterThanOrEqualTo((BinaryComparisonOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_LESS_THAN:
setPropertyIsLessThan((BinaryComparisonOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_LESS_THAN_OR_EQUAL_TO:
setPropertyIsLessThanOrEqualTo((BinaryComparisonOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_LIKE:
setPropertyIsLike((PropertyIsLikeType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_NIL:
setPropertyIsNil((PropertyIsNilType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_NOT_EQUAL_TO:
setPropertyIsNotEqualTo((BinaryComparisonOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__PROPERTY_IS_NULL:
setPropertyIsNull((PropertyIsNullType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__RESOURCE_ID:
setResourceId((ResourceIdType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__SORT_BY:
setSortBy((SortByType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__TCONTAINS:
setTContains((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__TEQUALS:
setTEquals((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__TOUCHES:
setTouches((BinarySpatialOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__TOVERLAPS:
setTOverlaps((BinaryTemporalOpType)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__VALUE_REFERENCE:
setValueReference((String)newValue);
return;
case Fes20Package.DOCUMENT_ROOT__WITHIN:
setWithin((BinarySpatialOpType)newValue);
return;
}
super.eSet(featureID,newValue);
}
