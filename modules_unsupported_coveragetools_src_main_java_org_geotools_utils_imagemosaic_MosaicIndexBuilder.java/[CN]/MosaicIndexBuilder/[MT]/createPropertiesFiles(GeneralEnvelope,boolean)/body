{
  StringBuffer message;
  if (numFiles > 0 && doneSomething) {
    message=new StringBuffer("Creating final properties file ");
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine(message.toString());
    }
    fireEvent(message.toString(),99.9);
    final Properties properties=new Properties();
    properties.setProperty("AbsolutePath",Boolean.toString(absolute));
    properties.setProperty("NumFiles",Integer.toString(numFiles));
    properties.setProperty("Envelope2D",new StringBuffer(Double.toString(globEnvelope.getMinimum(0))).append(",").append(Double.toString(globEnvelope.getMinimum(1))).append(" ").append(Double.toString(globEnvelope.getMaximum(0))).append(",").append(Double.toString(globEnvelope.getMaximum(1))).toString());
    properties.setProperty("LevelsNum",Integer.toString(numberOfLevels));
    final StringBuffer levels=new StringBuffer();
    for (int k=0; k < numberOfLevels; k++) {
      levels.append(Double.toString(resolutionLevels[0][k])).append(",").append(Double.toString(resolutionLevels[1][k]));
      if (k < numberOfLevels - 1)       levels.append(" ");
    }
    properties.setProperty("Levels",levels.toString());
    properties.setProperty("Name",indexName);
    properties.setProperty("ExpandToRGB",Boolean.toString(mustConvertToRGB));
    OutputStream outStream=null;
    try {
      outStream=new BufferedOutputStream(new FileOutputStream(locationPath + "/" + indexName+ ".properties"));
      properties.store(outStream,"");
    }
 catch (    FileNotFoundException e) {
      fireEvent(e.getLocalizedMessage(),0);
    }
catch (    IOException e) {
      fireEvent(e.getLocalizedMessage(),0);
    }
 finally {
      try {
        if (outStream != null)         outStream.close();
      }
 catch (      Throwable e) {
        if (LOGGER.isLoggable(Level.FINE))         LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
      }
    }
    message=new StringBuffer("Done!!!");
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine(message.toString());
    }
    fireEvent(message.toString(),100);
  }
 else {
    message=new StringBuffer("No file to process!!!");
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine(message.toString());
    }
    fireEvent(message.toString(),100);
  }
}
