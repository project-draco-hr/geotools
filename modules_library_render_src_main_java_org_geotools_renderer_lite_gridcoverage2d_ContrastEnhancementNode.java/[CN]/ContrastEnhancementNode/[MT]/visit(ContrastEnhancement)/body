{
  if (ce == null) {
    return;
  }
  ContrastMethod contrastMethod=ce.getMethod();
  if (contrastMethod != null) {
    final String type=contrastMethod.name();
    if (type != null && !type.equalsIgnoreCase("None")) {
      this.type=type.toUpperCase();
      if (!SUPPORTED_HE_ALGORITHMS.contains(type.toUpperCase()))       throw new IllegalArgumentException(Errors.format(ErrorKeys.OPERATION_NOT_FOUND_$1,type.toUpperCase()));
      this.contrastEnhancementMethod=parseContrastEnhancementMethod(contrastMethod,ce.getOptions());
    }
  }
  final Expression gamma=ce.getGammaValue();
  if (gamma != null) {
    final Number number=gamma.evaluate(null,Double.class);
    if (number != null) {
      gammaValue=number.doubleValue();
      if (gammaValue < 0)       throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2,"Gamma",number));
      if (Double.isNaN(gammaValue) || Double.isInfinite(gammaValue))       throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2,"Gamma",number));
    }
  }
}
