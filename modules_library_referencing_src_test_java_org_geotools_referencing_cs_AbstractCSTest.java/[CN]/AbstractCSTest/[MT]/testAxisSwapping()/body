{
  CoordinateSystem cs1, cs2;
  cs1=new DefaultEllipsoidalCS("cs1",DefaultCoordinateSystemAxis.GEODETIC_LONGITUDE,DefaultCoordinateSystemAxis.GEODETIC_LATITUDE);
  cs2=new DefaultEllipsoidalCS("cs2",DefaultCoordinateSystemAxis.GEODETIC_LATITUDE,DefaultCoordinateSystemAxis.GEODETIC_LONGITUDE);
  assertTrue(AbstractCS.swapAndScaleAxis(cs1,cs1).isIdentity());
  assertTrue(AbstractCS.swapAndScaleAxis(cs2,cs2).isIdentity());
  compareMatrix(cs1,cs2,new double[]{0,1,0,1,0,0,0,0,1});
  cs1=new DefaultEllipsoidalCS("cs1",DefaultCoordinateSystemAxis.GEODETIC_LONGITUDE,DefaultCoordinateSystemAxis.GEODETIC_LATITUDE,DefaultCoordinateSystemAxis.ELLIPSOIDAL_HEIGHT);
  cs2=new DefaultEllipsoidalCS("cs2",DefaultCoordinateSystemAxis.GEODETIC_LATITUDE,DefaultCoordinateSystemAxis.GEODETIC_LONGITUDE,DefaultCoordinateSystemAxis.ELLIPSOIDAL_HEIGHT);
  compareMatrix(cs1,cs2,new double[]{0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,1});
  cs1=new DefaultCartesianCS("cs1",DefaultCoordinateSystemAxis.ELLIPSOIDAL_HEIGHT,DefaultCoordinateSystemAxis.EASTING,DefaultCoordinateSystemAxis.NORTHING);
  cs2=new DefaultCartesianCS("cs2",DefaultCoordinateSystemAxis.SOUTHING,DefaultCoordinateSystemAxis.EASTING,DefaultCoordinateSystemAxis.ELLIPSOIDAL_HEIGHT);
  compareMatrix(cs1,cs2,new double[]{0,0,-1,0,0,1,0,0,1,0,0,0,0,0,0,1});
}
