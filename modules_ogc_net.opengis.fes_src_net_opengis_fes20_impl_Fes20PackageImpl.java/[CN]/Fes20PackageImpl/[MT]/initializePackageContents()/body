{
  if (isInitialized)   return;
  isInitialized=true;
  setName(eNAME);
  setNsPrefix(eNS_PREFIX);
  setNsURI(eNS_URI);
  XMLTypePackage theXMLTypePackage=(XMLTypePackage)EPackage.Registry.INSTANCE.getEPackage(XMLTypePackage.eNS_URI);
  Ows11Package theOws11Package=(Ows11Package)EPackage.Registry.INSTANCE.getEPackage(Ows11Package.eNS_URI);
  EcorePackage theEcorePackage=(EcorePackage)EPackage.Registry.INSTANCE.getEPackage(EcorePackage.eNS_URI);
  abstractAdhocQueryExpressionTypeEClass.getESuperTypes().add(this.getAbstractQueryExpressionType());
  bboxTypeEClass.getESuperTypes().add(this.getSpatialOpsType());
  binaryComparisonOpTypeEClass.getESuperTypes().add(this.getComparisonOpsType());
  binaryLogicOpTypeEClass.getESuperTypes().add(this.getLogicOpsType());
  binarySpatialOpTypeEClass.getESuperTypes().add(this.getSpatialOpsType());
  binaryTemporalOpTypeEClass.getESuperTypes().add(this.getTemporalOpsType());
  distanceBufferTypeEClass.getESuperTypes().add(this.getSpatialOpsType());
  filterTypeEClass.getESuperTypes().add(this.getAbstractSelectionClauseType());
  propertyIsBetweenTypeEClass.getESuperTypes().add(this.getComparisonOpsType());
  propertyIsLikeTypeEClass.getESuperTypes().add(this.getComparisonOpsType());
  propertyIsNilTypeEClass.getESuperTypes().add(this.getComparisonOpsType());
  propertyIsNullTypeEClass.getESuperTypes().add(this.getComparisonOpsType());
  resourceIdTypeEClass.getESuperTypes().add(this.getAbstractIdType());
  unaryLogicOpTypeEClass.getESuperTypes().add(this.getLogicOpsType());
  initEClass(abstractAdhocQueryExpressionTypeEClass,AbstractAdhocQueryExpressionType.class,"AbstractAdhocQueryExpressionType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getAbstractAdhocQueryExpressionType_AbstractProjectionClause(),ecorePackage.getEJavaObject(),"abstractProjectionClause",null,0,-1,AbstractAdhocQueryExpressionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getAbstractAdhocQueryExpressionType_AbstractSelectionClause(),ecorePackage.getEJavaObject(),"abstractSelectionClause",null,0,1,AbstractAdhocQueryExpressionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getAbstractAdhocQueryExpressionType_AbstractSortingClause(),ecorePackage.getEJavaObject(),"abstractSortingClause",null,0,1,AbstractAdhocQueryExpressionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getAbstractAdhocQueryExpressionType_Aliases(),ecorePackage.getEString(),"aliases",null,0,-1,AbstractAdhocQueryExpressionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getAbstractAdhocQueryExpressionType_TypeNames(),ecorePackage.getEJavaObject(),"typeNames",null,0,-1,AbstractAdhocQueryExpressionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(abstractIdTypeEClass,AbstractIdType.class,"AbstractIdType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(abstractProjectionClauseTypeEClass,AbstractProjectionClauseType.class,"AbstractProjectionClauseType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(abstractQueryExpressionTypeEClass,AbstractQueryExpressionType.class,"AbstractQueryExpressionType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getAbstractQueryExpressionType_Handle(),theXMLTypePackage.getString(),"handle",null,0,1,AbstractQueryExpressionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(abstractSelectionClauseTypeEClass,AbstractSelectionClauseType.class,"AbstractSelectionClauseType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(abstractSortingClauseTypeEClass,AbstractSortingClauseType.class,"AbstractSortingClauseType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(additionalOperatorsTypeEClass,AdditionalOperatorsType.class,"AdditionalOperatorsType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getAdditionalOperatorsType_Operator(),this.getExtensionOperatorType(),null,"operator",null,0,-1,AdditionalOperatorsType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(argumentsTypeEClass,ArgumentsType.class,"ArgumentsType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getArgumentsType_Argument(),this.getArgumentType(),null,"argument",null,1,-1,ArgumentsType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(argumentTypeEClass,ArgumentType.class,"ArgumentType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getArgumentType_Metadata(),theOws11Package.getMetadataType(),null,"metadata",null,0,1,ArgumentType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getArgumentType_Type(),theXMLTypePackage.getQName(),"type",null,1,1,ArgumentType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getArgumentType_Name(),theXMLTypePackage.getString(),"name",null,1,1,ArgumentType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(availableFunctionsTypeEClass,AvailableFunctionsType.class,"AvailableFunctionsType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getAvailableFunctionsType_Function(),this.getAvailableFunctionType(),null,"function",null,1,-1,AvailableFunctionsType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(availableFunctionTypeEClass,AvailableFunctionType.class,"AvailableFunctionType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getAvailableFunctionType_Metadata(),theOws11Package.getMetadataType(),null,"metadata",null,0,1,AvailableFunctionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getAvailableFunctionType_Returns(),theXMLTypePackage.getQName(),"returns",null,1,1,AvailableFunctionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getAvailableFunctionType_Arguments(),this.getArgumentsType(),null,"arguments",null,0,1,AvailableFunctionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getAvailableFunctionType_Name(),theXMLTypePackage.getString(),"name",null,1,1,AvailableFunctionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(bboxTypeEClass,BBOXType.class,"BBOXType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getBBOXType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,0,1,BBOXType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getBBOXType_Expression(),theEcorePackage.getEObject(),null,"expression",null,0,1,BBOXType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getBBOXType_Any(),theEcorePackage.getEFeatureMapEntry(),"any",null,1,1,BBOXType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(binaryComparisonOpTypeEClass,BinaryComparisonOpType.class,"BinaryComparisonOpType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getBinaryComparisonOpType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,2,2,BinaryComparisonOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getBinaryComparisonOpType_Expression(),theEcorePackage.getEObject(),null,"expression",null,2,2,BinaryComparisonOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryComparisonOpType_MatchAction(),this.getMatchActionType(),"matchAction","Any",0,1,BinaryComparisonOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryComparisonOpType_MatchCase(),theXMLTypePackage.getBoolean(),"matchCase","true",0,1,BinaryComparisonOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(binaryLogicOpTypeEClass,BinaryLogicOpType.class,"BinaryLogicOpType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getBinaryLogicOpType_FilterPredicates(),theEcorePackage.getEFeatureMapEntry(),"filterPredicates",null,0,-1,BinaryLogicOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryLogicOpType_ComparisonOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"comparisonOpsGroup",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getBinaryLogicOpType_ComparisonOps(),this.getComparisonOpsType(),null,"comparisonOps",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryLogicOpType_SpatialOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"spatialOpsGroup",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getBinaryLogicOpType_SpatialOps(),this.getSpatialOpsType(),null,"spatialOps",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryLogicOpType_TemporalOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"temporalOpsGroup",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getBinaryLogicOpType_TemporalOps(),this.getTemporalOpsType(),null,"temporalOps",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryLogicOpType_LogicOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"logicOpsGroup",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getBinaryLogicOpType_LogicOps(),this.getLogicOpsType(),null,"logicOps",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryLogicOpType_ExtensionOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"extensionOpsGroup",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getBinaryLogicOpType_ExtensionOps(),this.getExtensionOpsType(),null,"extensionOps",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getBinaryLogicOpType_Function(),this.getFunctionType(),null,"function",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryLogicOpType_IdGroup(),theEcorePackage.getEFeatureMapEntry(),"idGroup",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getBinaryLogicOpType_Id(),this.getAbstractIdType(),null,"id",null,0,-1,BinaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEClass(binarySpatialOpTypeEClass,BinarySpatialOpType.class,"BinarySpatialOpType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getBinarySpatialOpType_ValueReference(),theXMLTypePackage.getString(),"valueReference",null,1,1,BinarySpatialOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinarySpatialOpType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,0,1,BinarySpatialOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getBinarySpatialOpType_Expression(),theEcorePackage.getEObject(),null,"expression",null,0,1,BinarySpatialOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinarySpatialOpType_Any(),theEcorePackage.getEFeatureMapEntry(),"any",null,0,1,BinarySpatialOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(binaryTemporalOpTypeEClass,BinaryTemporalOpType.class,"BinaryTemporalOpType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getBinaryTemporalOpType_ValueReference(),theXMLTypePackage.getString(),"valueReference",null,1,1,BinaryTemporalOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryTemporalOpType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,0,1,BinaryTemporalOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getBinaryTemporalOpType_Expression(),theEcorePackage.getEObject(),null,"expression",null,0,1,BinaryTemporalOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getBinaryTemporalOpType_Any(),theEcorePackage.getEFeatureMapEntry(),"any",null,0,1,BinaryTemporalOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(comparisonOperatorsTypeEClass,ComparisonOperatorsType.class,"ComparisonOperatorsType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getComparisonOperatorsType_Group(),theEcorePackage.getEFeatureMapEntry(),"group",null,0,-1,ComparisonOperatorsType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getComparisonOperatorsType_ComparisonOperator(),this.getComparisonOperatorType(),null,"comparisonOperator",null,1,-1,ComparisonOperatorsType.class,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEClass(comparisonOperatorTypeEClass,ComparisonOperatorType.class,"ComparisonOperatorType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getComparisonOperatorType_Name(),this.getComparisonOperatorNameType(),"name",null,1,1,ComparisonOperatorType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(comparisonOpsTypeEClass,ComparisonOpsType.class,"ComparisonOpsType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(conformanceTypeEClass,ConformanceType.class,"ConformanceType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getConformanceType_Constraint(),theOws11Package.getDomainType(),null,"constraint",null,1,-1,ConformanceType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(distanceBufferTypeEClass,DistanceBufferType.class,"DistanceBufferType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getDistanceBufferType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,0,1,DistanceBufferType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getDistanceBufferType_Expression(),theEcorePackage.getEObject(),null,"expression",null,0,1,DistanceBufferType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getDistanceBufferType_Any(),theEcorePackage.getEFeatureMapEntry(),"any",null,1,1,DistanceBufferType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getDistanceBufferType_Distance(),this.getMeasureType(),null,"distance",null,1,1,DistanceBufferType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(documentRootEClass,DocumentRoot.class,"DocumentRoot",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getDocumentRoot_Mixed(),theEcorePackage.getEFeatureMapEntry(),"mixed",null,0,-1,null,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_XMLNSPrefixMap(),theEcorePackage.getEStringToStringMapEntry(),null,"xMLNSPrefixMap",null,0,-1,null,IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_XSISchemaLocation(),theEcorePackage.getEStringToStringMapEntry(),null,"xSISchemaLocation",null,0,-1,null,IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Id(),this.getAbstractIdType(),null,"id",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_AbstractAdhocQueryExpression(),this.getAbstractAdhocQueryExpressionType(),null,"abstractAdhocQueryExpression",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_AbstractQueryExpression(),this.getAbstractQueryExpressionType(),null,"abstractQueryExpression",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_AbstractProjectionClause(),theEcorePackage.getEObject(),null,"abstractProjectionClause",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_AbstractSelectionClause(),theEcorePackage.getEObject(),null,"abstractSelectionClause",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_AbstractSortingClause(),theEcorePackage.getEObject(),null,"abstractSortingClause",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_After(),this.getBinaryTemporalOpType(),null,"after",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_TemporalOps(),this.getTemporalOpsType(),null,"temporalOps",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_And(),this.getBinaryLogicOpType(),null,"and",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_LogicOps(),this.getLogicOpsType(),null,"logicOps",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_AnyInteracts(),this.getBinaryTemporalOpType(),null,"anyInteracts",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_BBOX(),this.getBBOXType(),null,"bBOX",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_SpatialOps(),this.getSpatialOpsType(),null,"spatialOps",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Before(),this.getBinaryTemporalOpType(),null,"before",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Begins(),this.getBinaryTemporalOpType(),null,"begins",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_BegunBy(),this.getBinaryTemporalOpType(),null,"begunBy",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Beyond(),this.getDistanceBufferType(),null,"beyond",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_ComparisonOps(),this.getComparisonOpsType(),null,"comparisonOps",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Contains(),this.getBinarySpatialOpType(),null,"contains",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Crosses(),this.getBinarySpatialOpType(),null,"crosses",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Disjoint(),this.getBinarySpatialOpType(),null,"disjoint",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_During(),this.getBinaryTemporalOpType(),null,"during",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_DWithin(),this.getDistanceBufferType(),null,"dWithin",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_EndedBy(),this.getBinaryTemporalOpType(),null,"endedBy",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Ends(),this.getBinaryTemporalOpType(),null,"ends",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Equals(),this.getBinarySpatialOpType(),null,"equals",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Expression(),theEcorePackage.getEObject(),null,"expression",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_ExtensionOps(),this.getExtensionOpsType(),null,"extensionOps",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Filter(),this.getFilterType(),null,"filter",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_FilterCapabilities(),this.getFilterCapabilitiesType(),null,"filterCapabilities",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Function(),this.getFunctionType(),null,"function",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Intersects(),this.getBinarySpatialOpType(),null,"intersects",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Literal(),this.getLiteralType(),null,"literal",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_LogicalOperators(),this.getLogicalOperatorsType(),null,"logicalOperators",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Meets(),this.getBinaryTemporalOpType(),null,"meets",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_MetBy(),this.getBinaryTemporalOpType(),null,"metBy",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Not(),this.getUnaryLogicOpType(),null,"not",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Or(),this.getBinaryLogicOpType(),null,"or",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_OverlappedBy(),this.getBinaryTemporalOpType(),null,"overlappedBy",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Overlaps(),this.getBinarySpatialOpType(),null,"overlaps",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsBetween(),this.getPropertyIsBetweenType(),null,"propertyIsBetween",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsEqualTo(),this.getBinaryComparisonOpType(),null,"propertyIsEqualTo",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsGreaterThan(),this.getBinaryComparisonOpType(),null,"propertyIsGreaterThan",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsGreaterThanOrEqualTo(),this.getBinaryComparisonOpType(),null,"propertyIsGreaterThanOrEqualTo",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsLessThan(),this.getBinaryComparisonOpType(),null,"propertyIsLessThan",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsLessThanOrEqualTo(),this.getBinaryComparisonOpType(),null,"propertyIsLessThanOrEqualTo",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsLike(),this.getPropertyIsLikeType(),null,"propertyIsLike",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsNil(),this.getPropertyIsNilType(),null,"propertyIsNil",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsNotEqualTo(),this.getBinaryComparisonOpType(),null,"propertyIsNotEqualTo",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_PropertyIsNull(),this.getPropertyIsNullType(),null,"propertyIsNull",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_ResourceId(),this.getResourceIdType(),null,"resourceId",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_SortBy(),this.getSortByType(),null,"sortBy",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_TContains(),this.getBinaryTemporalOpType(),null,"tContains",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_TEquals(),this.getBinaryTemporalOpType(),null,"tEquals",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Touches(),this.getBinarySpatialOpType(),null,"touches",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_TOverlaps(),this.getBinaryTemporalOpType(),null,"tOverlaps",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getDocumentRoot_ValueReference(),theXMLTypePackage.getString(),"valueReference",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getDocumentRoot_Within(),this.getBinarySpatialOpType(),null,"within",null,0,-2,null,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEClass(extendedCapabilitiesTypeEClass,ExtendedCapabilitiesType.class,"ExtendedCapabilitiesType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getExtendedCapabilitiesType_AdditionalOperators(),this.getAdditionalOperatorsType(),null,"additionalOperators",null,0,1,ExtendedCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(extensionOperatorTypeEClass,ExtensionOperatorType.class,"ExtensionOperatorType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getExtensionOperatorType_Name(),theXMLTypePackage.getQName(),"name",null,1,1,ExtensionOperatorType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(extensionOpsTypeEClass,ExtensionOpsType.class,"ExtensionOpsType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(filterCapabilitiesTypeEClass,FilterCapabilitiesType.class,"FilterCapabilitiesType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getFilterCapabilitiesType_Conformance(),this.getConformanceType(),null,"conformance",null,1,1,FilterCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterCapabilitiesType_IdCapabilities(),this.getIdCapabilitiesType(),null,"idCapabilities",null,0,1,FilterCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterCapabilitiesType_ScalarCapabilities(),this.getScalarCapabilitiesType(),null,"scalarCapabilities",null,0,1,FilterCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterCapabilitiesType_SpatialCapabilities(),this.getSpatialCapabilitiesType(),null,"spatialCapabilities",null,0,1,FilterCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterCapabilitiesType_TemporalCapabilities(),this.getTemporalCapabilitiesType(),null,"temporalCapabilities",null,0,1,FilterCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterCapabilitiesType_Functions(),this.getAvailableFunctionsType(),null,"functions",null,0,1,FilterCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterCapabilitiesType_ExtendedCapabilities(),this.getExtendedCapabilitiesType(),null,"extendedCapabilities",null,0,1,FilterCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(filterTypeEClass,FilterType.class,"FilterType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getFilterType_ComparisonOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"comparisonOpsGroup",null,0,1,FilterType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterType_ComparisonOps(),this.getComparisonOpsType(),null,"comparisonOps",null,0,1,FilterType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getFilterType_SpatialOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"spatialOpsGroup",null,0,1,FilterType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterType_SpatialOps(),this.getSpatialOpsType(),null,"spatialOps",null,0,1,FilterType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getFilterType_TemporalOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"temporalOpsGroup",null,0,1,FilterType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterType_TemporalOps(),this.getTemporalOpsType(),null,"temporalOps",null,0,1,FilterType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getFilterType_LogicOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"logicOpsGroup",null,0,1,FilterType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterType_LogicOps(),this.getLogicOpsType(),null,"logicOps",null,0,1,FilterType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getFilterType_ExtensionOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"extensionOpsGroup",null,0,1,FilterType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterType_ExtensionOps(),this.getExtensionOpsType(),null,"extensionOps",null,0,1,FilterType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getFilterType_Function(),this.getFunctionType(),null,"function",null,0,1,FilterType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getFilterType_IdGroup(),theEcorePackage.getEFeatureMapEntry(),"idGroup",null,0,-1,FilterType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFilterType_Id(),this.getAbstractIdType(),null,"id",null,0,-1,FilterType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEClass(functionTypeEClass,FunctionType.class,"FunctionType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getFunctionType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,0,-1,FunctionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getFunctionType_Expression(),theEcorePackage.getEObject(),null,"expression",null,0,-1,FunctionType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getFunctionType_Name(),theXMLTypePackage.getString(),"name",null,1,1,FunctionType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(geometryOperandsTypeEClass,GeometryOperandsType.class,"GeometryOperandsType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getGeometryOperandsType_GeometryOperand(),this.getGeometryOperandType(),null,"geometryOperand",null,1,-1,GeometryOperandsType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(geometryOperandTypeEClass,GeometryOperandType.class,"GeometryOperandType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getGeometryOperandType_Name(),theXMLTypePackage.getQName(),"name",null,1,1,GeometryOperandType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(idCapabilitiesTypeEClass,IdCapabilitiesType.class,"IdCapabilitiesType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getIdCapabilitiesType_ResourceIdentifier(),this.getResourceIdentifierType(),null,"resourceIdentifier",null,1,-1,IdCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(literalTypeEClass,LiteralType.class,"LiteralType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getLiteralType_Mixed(),theEcorePackage.getEFeatureMapEntry(),"mixed",null,0,-1,LiteralType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getLiteralType_Any(),theEcorePackage.getEFeatureMapEntry(),"any",null,0,1,LiteralType.class,IS_TRANSIENT,IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getLiteralType_Type(),theXMLTypePackage.getQName(),"type",null,0,1,LiteralType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(logicalOperatorsTypeEClass,LogicalOperatorsType.class,"LogicalOperatorsType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(logicOpsTypeEClass,LogicOpsType.class,"LogicOpsType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(lowerBoundaryTypeEClass,LowerBoundaryType.class,"LowerBoundaryType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getLowerBoundaryType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,0,1,LowerBoundaryType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getLowerBoundaryType_Expression(),theEcorePackage.getEObject(),null,"expression",null,0,1,LowerBoundaryType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEClass(measureTypeEClass,MeasureType.class,"MeasureType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getMeasureType_Value(),theXMLTypePackage.getDouble(),"value",null,0,1,MeasureType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getMeasureType_Uom(),this.getUomIdentifier(),"uom",null,1,1,MeasureType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(propertyIsBetweenTypeEClass,PropertyIsBetweenType.class,"PropertyIsBetweenType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getPropertyIsBetweenType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,1,1,PropertyIsBetweenType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getPropertyIsBetweenType_Expression(),theEcorePackage.getEObject(),null,"expression",null,1,1,PropertyIsBetweenType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getPropertyIsBetweenType_LowerBoundary(),this.getLowerBoundaryType(),null,"lowerBoundary",null,1,1,PropertyIsBetweenType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getPropertyIsBetweenType_UpperBoundary(),this.getUpperBoundaryType(),null,"upperBoundary",null,1,1,PropertyIsBetweenType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(propertyIsLikeTypeEClass,PropertyIsLikeType.class,"PropertyIsLikeType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getPropertyIsLikeType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,2,2,PropertyIsLikeType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getPropertyIsLikeType_Expression(),theEcorePackage.getEObject(),null,"expression",null,2,2,PropertyIsLikeType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getPropertyIsLikeType_EscapeChar(),theXMLTypePackage.getString(),"escapeChar",null,1,1,PropertyIsLikeType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getPropertyIsLikeType_SingleChar(),theXMLTypePackage.getString(),"singleChar",null,1,1,PropertyIsLikeType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getPropertyIsLikeType_WildCard(),theXMLTypePackage.getString(),"wildCard",null,1,1,PropertyIsLikeType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(propertyIsNilTypeEClass,PropertyIsNilType.class,"PropertyIsNilType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getPropertyIsNilType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,0,1,PropertyIsNilType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getPropertyIsNilType_Expression(),theEcorePackage.getEObject(),null,"expression",null,0,1,PropertyIsNilType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getPropertyIsNilType_NilReason(),theXMLTypePackage.getString(),"nilReason",null,0,1,PropertyIsNilType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(propertyIsNullTypeEClass,PropertyIsNullType.class,"PropertyIsNullType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getPropertyIsNullType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,0,1,PropertyIsNullType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getPropertyIsNullType_Expression(),theEcorePackage.getEObject(),null,"expression",null,0,1,PropertyIsNullType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEClass(resourceIdentifierTypeEClass,ResourceIdentifierType.class,"ResourceIdentifierType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getResourceIdentifierType_Metadata(),theOws11Package.getMetadataType(),null,"metadata",null,0,1,ResourceIdentifierType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getResourceIdentifierType_Name(),theXMLTypePackage.getQName(),"name",null,1,1,ResourceIdentifierType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(resourceIdTypeEClass,ResourceIdType.class,"ResourceIdType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getResourceIdType_EndDate(),theXMLTypePackage.getDateTime(),"endDate",null,0,1,ResourceIdType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getResourceIdType_PreviousRid(),theXMLTypePackage.getString(),"previousRid",null,0,1,ResourceIdType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getResourceIdType_Rid(),theXMLTypePackage.getString(),"rid",null,1,1,ResourceIdType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getResourceIdType_StartDate(),theXMLTypePackage.getDateTime(),"startDate",null,0,1,ResourceIdType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getResourceIdType_Version(),this.getVersionType(),"version",null,0,1,ResourceIdType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(scalarCapabilitiesTypeEClass,ScalarCapabilitiesType.class,"ScalarCapabilitiesType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getScalarCapabilitiesType_LogicalOperators(),this.getLogicalOperatorsType(),null,"logicalOperators",null,0,1,ScalarCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getScalarCapabilitiesType_ComparisonOperators(),this.getComparisonOperatorsType(),null,"comparisonOperators",null,0,1,ScalarCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(sortByTypeEClass,SortByType.class,"SortByType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getSortByType_SortProperty(),this.getSortPropertyType(),null,"sortProperty",null,1,-1,SortByType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(sortPropertyTypeEClass,SortPropertyType.class,"SortPropertyType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getSortPropertyType_ValueReference(),theXMLTypePackage.getString(),"valueReference",null,1,1,SortPropertyType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getSortPropertyType_SortOrder(),this.getSortOrderType(),"sortOrder",null,0,1,SortPropertyType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(spatialCapabilitiesTypeEClass,SpatialCapabilitiesType.class,"SpatialCapabilitiesType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getSpatialCapabilitiesType_GeometryOperands(),this.getGeometryOperandsType(),null,"geometryOperands",null,1,1,SpatialCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getSpatialCapabilitiesType_SpatialOperators(),this.getSpatialOperatorsType(),null,"spatialOperators",null,1,1,SpatialCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(spatialOperatorsTypeEClass,SpatialOperatorsType.class,"SpatialOperatorsType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getSpatialOperatorsType_SpatialOperator(),this.getSpatialOperatorType(),null,"spatialOperator",null,1,-1,SpatialOperatorsType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(spatialOperatorTypeEClass,SpatialOperatorType.class,"SpatialOperatorType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getSpatialOperatorType_GeometryOperands(),this.getGeometryOperandsType(),null,"geometryOperands",null,0,1,SpatialOperatorType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getSpatialOperatorType_Name(),this.getSpatialOperatorNameType(),"name",null,0,1,SpatialOperatorType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(spatialOpsTypeEClass,SpatialOpsType.class,"SpatialOpsType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(temporalCapabilitiesTypeEClass,TemporalCapabilitiesType.class,"TemporalCapabilitiesType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getTemporalCapabilitiesType_TemporalOperands(),this.getTemporalOperandsType(),null,"temporalOperands",null,1,1,TemporalCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getTemporalCapabilitiesType_TemporalOperators(),this.getTemporalOperatorsType(),null,"temporalOperators",null,1,1,TemporalCapabilitiesType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(temporalOperandsTypeEClass,TemporalOperandsType.class,"TemporalOperandsType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getTemporalOperandsType_TemporalOperand(),this.getTemporalOperandType(),null,"temporalOperand",null,1,-1,TemporalOperandsType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(temporalOperandTypeEClass,TemporalOperandType.class,"TemporalOperandType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getTemporalOperandType_Name(),theXMLTypePackage.getQName(),"name",null,1,1,TemporalOperandType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(temporalOperatorsTypeEClass,TemporalOperatorsType.class,"TemporalOperatorsType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getTemporalOperatorsType_TemporalOperator(),this.getTemporalOperatorType(),null,"temporalOperator",null,1,-1,TemporalOperatorsType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(temporalOperatorTypeEClass,TemporalOperatorType.class,"TemporalOperatorType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEReference(getTemporalOperatorType_TemporalOperands(),this.getTemporalOperandsType(),null,"temporalOperands",null,0,1,TemporalOperatorType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getTemporalOperatorType_Name(),this.getTemporalOperatorNameType(),"name",null,1,1,TemporalOperatorType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEClass(temporalOpsTypeEClass,TemporalOpsType.class,"TemporalOpsType",IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEClass(unaryLogicOpTypeEClass,UnaryLogicOpType.class,"UnaryLogicOpType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getUnaryLogicOpType_ComparisonOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"comparisonOpsGroup",null,0,1,UnaryLogicOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getUnaryLogicOpType_ComparisonOps(),this.getComparisonOpsType(),null,"comparisonOps",null,0,1,UnaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getUnaryLogicOpType_SpatialOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"spatialOpsGroup",null,0,1,UnaryLogicOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getUnaryLogicOpType_SpatialOps(),this.getSpatialOpsType(),null,"spatialOps",null,0,1,UnaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getUnaryLogicOpType_TemporalOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"temporalOpsGroup",null,0,1,UnaryLogicOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getUnaryLogicOpType_TemporalOps(),this.getTemporalOpsType(),null,"temporalOps",null,0,1,UnaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getUnaryLogicOpType_LogicOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"logicOpsGroup",null,0,1,UnaryLogicOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getUnaryLogicOpType_LogicOps(),this.getLogicOpsType(),null,"logicOps",null,0,1,UnaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEAttribute(getUnaryLogicOpType_ExtensionOpsGroup(),theEcorePackage.getEFeatureMapEntry(),"extensionOpsGroup",null,0,1,UnaryLogicOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getUnaryLogicOpType_ExtensionOps(),this.getExtensionOpsType(),null,"extensionOps",null,0,1,UnaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEReference(getUnaryLogicOpType_Function(),this.getFunctionType(),null,"function",null,0,1,UnaryLogicOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEAttribute(getUnaryLogicOpType_IdGroup(),theEcorePackage.getEFeatureMapEntry(),"idGroup",null,0,-1,UnaryLogicOpType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,!IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getUnaryLogicOpType_Id(),this.getAbstractIdType(),null,"id",null,0,-1,UnaryLogicOpType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEClass(upperBoundaryTypeEClass,UpperBoundaryType.class,"UpperBoundaryType",!IS_ABSTRACT,!IS_INTERFACE,IS_GENERATED_INSTANCE_CLASS);
  initEAttribute(getUpperBoundaryType_ExpressionGroup(),theEcorePackage.getEFeatureMapEntry(),"expressionGroup",null,1,1,UpperBoundaryType.class,!IS_TRANSIENT,!IS_VOLATILE,IS_CHANGEABLE,!IS_UNSETTABLE,!IS_ID,IS_UNIQUE,!IS_DERIVED,IS_ORDERED);
  initEReference(getUpperBoundaryType_Expression(),theEcorePackage.getEObject(),null,"expression",null,1,1,UpperBoundaryType.class,IS_TRANSIENT,IS_VOLATILE,!IS_CHANGEABLE,IS_COMPOSITE,!IS_RESOLVE_PROXIES,!IS_UNSETTABLE,IS_UNIQUE,IS_DERIVED,IS_ORDERED);
  initEEnum(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.class,"ComparisonOperatorNameTypeMember0");
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_EQUAL_TO);
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_NOT_EQUAL_TO);
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_LESS_THAN);
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_GREATER_THAN);
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_LESS_THAN_OR_EQUAL_TO);
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_GREATER_THAN_OR_EQUAL_TO);
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_LIKE);
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_NULL);
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_NIL);
  addEEnumLiteral(comparisonOperatorNameTypeMember0EEnum,ComparisonOperatorNameTypeMember0.PROPERTY_IS_BETWEEN);
  initEEnum(matchActionTypeEEnum,MatchActionType.class,"MatchActionType");
  addEEnumLiteral(matchActionTypeEEnum,MatchActionType.ALL);
  addEEnumLiteral(matchActionTypeEEnum,MatchActionType.ANY);
  addEEnumLiteral(matchActionTypeEEnum,MatchActionType.ONE);
  initEEnum(sortOrderTypeEEnum,SortOrderType.class,"SortOrderType");
  addEEnumLiteral(sortOrderTypeEEnum,SortOrderType.DESC);
  addEEnumLiteral(sortOrderTypeEEnum,SortOrderType.ASC);
  initEEnum(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.class,"SpatialOperatorNameTypeMember0");
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.BBOX);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.EQUALS);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.DISJOINT);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.INTERSECTS);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.TOUCHES);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.CROSSES);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.WITHIN);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.CONTAINS);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.OVERLAPS);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.BEYOND);
  addEEnumLiteral(spatialOperatorNameTypeMember0EEnum,SpatialOperatorNameTypeMember0.DWITHIN);
  initEEnum(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.class,"TemporalOperatorNameTypeMember0");
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.AFTER);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.BEFORE);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.BEGINS);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.BEGUN_BY);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.TCONTAINS);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.DURING);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.TEQUALS);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.TOVERLAPS);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.MEETS);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.OVERLAPPED_BY);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.MET_BY);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.ENDS);
  addEEnumLiteral(temporalOperatorNameTypeMember0EEnum,TemporalOperatorNameTypeMember0.ENDED_BY);
  initEEnum(versionActionTokensEEnum,VersionActionTokens.class,"VersionActionTokens");
  addEEnumLiteral(versionActionTokensEEnum,VersionActionTokens.FIRST);
  addEEnumLiteral(versionActionTokensEEnum,VersionActionTokens.LAST);
  addEEnumLiteral(versionActionTokensEEnum,VersionActionTokens.PREVIOUS);
  addEEnumLiteral(versionActionTokensEEnum,VersionActionTokens.NEXT);
  addEEnumLiteral(versionActionTokensEEnum,VersionActionTokens.ALL);
  initEDataType(aliasesTypeEDataType,List.class,"AliasesType",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(comparisonOperatorNameTypeEDataType,Object.class,"ComparisonOperatorNameType",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(comparisonOperatorNameTypeMember0ObjectEDataType,ComparisonOperatorNameTypeMember0.class,"ComparisonOperatorNameTypeMember0Object",IS_SERIALIZABLE,IS_GENERATED_INSTANCE_CLASS);
  initEDataType(comparisonOperatorNameTypeMember1EDataType,String.class,"ComparisonOperatorNameTypeMember1",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(matchActionTypeObjectEDataType,MatchActionType.class,"MatchActionTypeObject",IS_SERIALIZABLE,IS_GENERATED_INSTANCE_CLASS);
  initEDataType(schemaElementEDataType,String.class,"SchemaElement",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(sortOrderTypeObjectEDataType,SortOrderType.class,"SortOrderTypeObject",IS_SERIALIZABLE,IS_GENERATED_INSTANCE_CLASS);
  initEDataType(spatialOperatorNameTypeEDataType,Object.class,"SpatialOperatorNameType",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(spatialOperatorNameTypeMember0ObjectEDataType,SpatialOperatorNameTypeMember0.class,"SpatialOperatorNameTypeMember0Object",IS_SERIALIZABLE,IS_GENERATED_INSTANCE_CLASS);
  initEDataType(spatialOperatorNameTypeMember1EDataType,String.class,"SpatialOperatorNameTypeMember1",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(temporalOperatorNameTypeEDataType,Object.class,"TemporalOperatorNameType",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(temporalOperatorNameTypeMember0ObjectEDataType,TemporalOperatorNameTypeMember0.class,"TemporalOperatorNameTypeMember0Object",IS_SERIALIZABLE,IS_GENERATED_INSTANCE_CLASS);
  initEDataType(temporalOperatorNameTypeMember1EDataType,String.class,"TemporalOperatorNameTypeMember1",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(typeNamesListTypeEDataType,List.class,"TypeNamesListType",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(typeNamesTypeEDataType,Object.class,"TypeNamesType",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(uomIdentifierEDataType,String.class,"UomIdentifier",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(uomSymbolEDataType,String.class,"UomSymbol",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(uomURIEDataType,String.class,"UomURI",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  initEDataType(versionActionTokensObjectEDataType,VersionActionTokens.class,"VersionActionTokensObject",IS_SERIALIZABLE,IS_GENERATED_INSTANCE_CLASS);
  initEDataType(versionTypeEDataType,Object.class,"VersionType",IS_SERIALIZABLE,!IS_GENERATED_INSTANCE_CLASS);
  createResource(eNS_URI);
  createUrnopengisspecificationgmlschemaxlinksv3Annotations();
  createExtendedMetaDataAnnotations();
}
