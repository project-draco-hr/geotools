{
  if (isCreated)   return;
  isCreated=true;
  abstractAdhocQueryExpressionTypeEClass=createEClass(ABSTRACT_ADHOC_QUERY_EXPRESSION_TYPE);
  createEAttribute(abstractAdhocQueryExpressionTypeEClass,ABSTRACT_ADHOC_QUERY_EXPRESSION_TYPE__ABSTRACT_PROJECTION_CLAUSE);
  createEAttribute(abstractAdhocQueryExpressionTypeEClass,ABSTRACT_ADHOC_QUERY_EXPRESSION_TYPE__ABSTRACT_SELECTION_CLAUSE);
  createEAttribute(abstractAdhocQueryExpressionTypeEClass,ABSTRACT_ADHOC_QUERY_EXPRESSION_TYPE__ABSTRACT_SORTING_CLAUSE);
  createEAttribute(abstractAdhocQueryExpressionTypeEClass,ABSTRACT_ADHOC_QUERY_EXPRESSION_TYPE__ALIASES);
  createEAttribute(abstractAdhocQueryExpressionTypeEClass,ABSTRACT_ADHOC_QUERY_EXPRESSION_TYPE__TYPE_NAMES);
  abstractIdTypeEClass=createEClass(ABSTRACT_ID_TYPE);
  abstractProjectionClauseTypeEClass=createEClass(ABSTRACT_PROJECTION_CLAUSE_TYPE);
  abstractQueryExpressionTypeEClass=createEClass(ABSTRACT_QUERY_EXPRESSION_TYPE);
  createEAttribute(abstractQueryExpressionTypeEClass,ABSTRACT_QUERY_EXPRESSION_TYPE__HANDLE);
  abstractSelectionClauseTypeEClass=createEClass(ABSTRACT_SELECTION_CLAUSE_TYPE);
  abstractSortingClauseTypeEClass=createEClass(ABSTRACT_SORTING_CLAUSE_TYPE);
  additionalOperatorsTypeEClass=createEClass(ADDITIONAL_OPERATORS_TYPE);
  createEReference(additionalOperatorsTypeEClass,ADDITIONAL_OPERATORS_TYPE__OPERATOR);
  argumentsTypeEClass=createEClass(ARGUMENTS_TYPE);
  createEReference(argumentsTypeEClass,ARGUMENTS_TYPE__ARGUMENT);
  argumentTypeEClass=createEClass(ARGUMENT_TYPE);
  createEReference(argumentTypeEClass,ARGUMENT_TYPE__METADATA);
  createEAttribute(argumentTypeEClass,ARGUMENT_TYPE__TYPE);
  createEAttribute(argumentTypeEClass,ARGUMENT_TYPE__NAME);
  availableFunctionsTypeEClass=createEClass(AVAILABLE_FUNCTIONS_TYPE);
  createEReference(availableFunctionsTypeEClass,AVAILABLE_FUNCTIONS_TYPE__FUNCTION);
  availableFunctionTypeEClass=createEClass(AVAILABLE_FUNCTION_TYPE);
  createEReference(availableFunctionTypeEClass,AVAILABLE_FUNCTION_TYPE__METADATA);
  createEAttribute(availableFunctionTypeEClass,AVAILABLE_FUNCTION_TYPE__RETURNS);
  createEReference(availableFunctionTypeEClass,AVAILABLE_FUNCTION_TYPE__ARGUMENTS);
  createEAttribute(availableFunctionTypeEClass,AVAILABLE_FUNCTION_TYPE__NAME);
  bboxTypeEClass=createEClass(BBOX_TYPE);
  createEAttribute(bboxTypeEClass,BBOX_TYPE__EXPRESSION_GROUP);
  createEReference(bboxTypeEClass,BBOX_TYPE__EXPRESSION);
  createEAttribute(bboxTypeEClass,BBOX_TYPE__ANY);
  binaryComparisonOpTypeEClass=createEClass(BINARY_COMPARISON_OP_TYPE);
  createEAttribute(binaryComparisonOpTypeEClass,BINARY_COMPARISON_OP_TYPE__EXPRESSION_GROUP);
  createEReference(binaryComparisonOpTypeEClass,BINARY_COMPARISON_OP_TYPE__EXPRESSION);
  createEAttribute(binaryComparisonOpTypeEClass,BINARY_COMPARISON_OP_TYPE__MATCH_ACTION);
  createEAttribute(binaryComparisonOpTypeEClass,BINARY_COMPARISON_OP_TYPE__MATCH_CASE);
  binaryLogicOpTypeEClass=createEClass(BINARY_LOGIC_OP_TYPE);
  createEAttribute(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__FILTER_PREDICATES);
  createEAttribute(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__COMPARISON_OPS_GROUP);
  createEReference(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__COMPARISON_OPS);
  createEAttribute(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__SPATIAL_OPS_GROUP);
  createEReference(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__SPATIAL_OPS);
  createEAttribute(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__TEMPORAL_OPS_GROUP);
  createEReference(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__TEMPORAL_OPS);
  createEAttribute(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__LOGIC_OPS_GROUP);
  createEReference(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__LOGIC_OPS);
  createEAttribute(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__EXTENSION_OPS_GROUP);
  createEReference(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__EXTENSION_OPS);
  createEReference(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__FUNCTION);
  createEAttribute(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__ID_GROUP);
  createEReference(binaryLogicOpTypeEClass,BINARY_LOGIC_OP_TYPE__ID);
  binarySpatialOpTypeEClass=createEClass(BINARY_SPATIAL_OP_TYPE);
  createEAttribute(binarySpatialOpTypeEClass,BINARY_SPATIAL_OP_TYPE__VALUE_REFERENCE);
  createEAttribute(binarySpatialOpTypeEClass,BINARY_SPATIAL_OP_TYPE__EXPRESSION_GROUP);
  createEReference(binarySpatialOpTypeEClass,BINARY_SPATIAL_OP_TYPE__EXPRESSION);
  createEAttribute(binarySpatialOpTypeEClass,BINARY_SPATIAL_OP_TYPE__ANY);
  binaryTemporalOpTypeEClass=createEClass(BINARY_TEMPORAL_OP_TYPE);
  createEAttribute(binaryTemporalOpTypeEClass,BINARY_TEMPORAL_OP_TYPE__VALUE_REFERENCE);
  createEAttribute(binaryTemporalOpTypeEClass,BINARY_TEMPORAL_OP_TYPE__EXPRESSION_GROUP);
  createEReference(binaryTemporalOpTypeEClass,BINARY_TEMPORAL_OP_TYPE__EXPRESSION);
  createEAttribute(binaryTemporalOpTypeEClass,BINARY_TEMPORAL_OP_TYPE__ANY);
  comparisonOperatorsTypeEClass=createEClass(COMPARISON_OPERATORS_TYPE);
  createEAttribute(comparisonOperatorsTypeEClass,COMPARISON_OPERATORS_TYPE__GROUP);
  createEReference(comparisonOperatorsTypeEClass,COMPARISON_OPERATORS_TYPE__COMPARISON_OPERATOR);
  comparisonOperatorTypeEClass=createEClass(COMPARISON_OPERATOR_TYPE);
  createEAttribute(comparisonOperatorTypeEClass,COMPARISON_OPERATOR_TYPE__NAME);
  comparisonOpsTypeEClass=createEClass(COMPARISON_OPS_TYPE);
  conformanceTypeEClass=createEClass(CONFORMANCE_TYPE);
  createEReference(conformanceTypeEClass,CONFORMANCE_TYPE__CONSTRAINT);
  distanceBufferTypeEClass=createEClass(DISTANCE_BUFFER_TYPE);
  createEAttribute(distanceBufferTypeEClass,DISTANCE_BUFFER_TYPE__EXPRESSION_GROUP);
  createEReference(distanceBufferTypeEClass,DISTANCE_BUFFER_TYPE__EXPRESSION);
  createEAttribute(distanceBufferTypeEClass,DISTANCE_BUFFER_TYPE__ANY);
  createEReference(distanceBufferTypeEClass,DISTANCE_BUFFER_TYPE__DISTANCE);
  documentRootEClass=createEClass(DOCUMENT_ROOT);
  createEAttribute(documentRootEClass,DOCUMENT_ROOT__MIXED);
  createEReference(documentRootEClass,DOCUMENT_ROOT__XMLNS_PREFIX_MAP);
  createEReference(documentRootEClass,DOCUMENT_ROOT__XSI_SCHEMA_LOCATION);
  createEReference(documentRootEClass,DOCUMENT_ROOT__ID);
  createEReference(documentRootEClass,DOCUMENT_ROOT__ABSTRACT_ADHOC_QUERY_EXPRESSION);
  createEReference(documentRootEClass,DOCUMENT_ROOT__ABSTRACT_QUERY_EXPRESSION);
  createEReference(documentRootEClass,DOCUMENT_ROOT__ABSTRACT_PROJECTION_CLAUSE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__ABSTRACT_SELECTION_CLAUSE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__ABSTRACT_SORTING_CLAUSE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__AFTER);
  createEReference(documentRootEClass,DOCUMENT_ROOT__TEMPORAL_OPS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__AND);
  createEReference(documentRootEClass,DOCUMENT_ROOT__LOGIC_OPS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__ANY_INTERACTS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__BBOX);
  createEReference(documentRootEClass,DOCUMENT_ROOT__SPATIAL_OPS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__BEFORE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__BEGINS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__BEGUN_BY);
  createEReference(documentRootEClass,DOCUMENT_ROOT__BEYOND);
  createEReference(documentRootEClass,DOCUMENT_ROOT__COMPARISON_OPS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__CONTAINS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__CROSSES);
  createEReference(documentRootEClass,DOCUMENT_ROOT__DISJOINT);
  createEReference(documentRootEClass,DOCUMENT_ROOT__DURING);
  createEReference(documentRootEClass,DOCUMENT_ROOT__DWITHIN);
  createEReference(documentRootEClass,DOCUMENT_ROOT__ENDED_BY);
  createEReference(documentRootEClass,DOCUMENT_ROOT__ENDS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__EQUALS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__EXPRESSION);
  createEReference(documentRootEClass,DOCUMENT_ROOT__EXTENSION_OPS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__FILTER);
  createEReference(documentRootEClass,DOCUMENT_ROOT__FILTER_CAPABILITIES);
  createEReference(documentRootEClass,DOCUMENT_ROOT__FUNCTION);
  createEReference(documentRootEClass,DOCUMENT_ROOT__INTERSECTS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__LITERAL);
  createEReference(documentRootEClass,DOCUMENT_ROOT__LOGICAL_OPERATORS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__MEETS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__MET_BY);
  createEReference(documentRootEClass,DOCUMENT_ROOT__NOT);
  createEReference(documentRootEClass,DOCUMENT_ROOT__OR);
  createEReference(documentRootEClass,DOCUMENT_ROOT__OVERLAPPED_BY);
  createEReference(documentRootEClass,DOCUMENT_ROOT__OVERLAPS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_BETWEEN);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_EQUAL_TO);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_GREATER_THAN);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_GREATER_THAN_OR_EQUAL_TO);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_LESS_THAN);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_LESS_THAN_OR_EQUAL_TO);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_LIKE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_NIL);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_NOT_EQUAL_TO);
  createEReference(documentRootEClass,DOCUMENT_ROOT__PROPERTY_IS_NULL);
  createEReference(documentRootEClass,DOCUMENT_ROOT__RESOURCE_ID);
  createEReference(documentRootEClass,DOCUMENT_ROOT__SORT_BY);
  createEReference(documentRootEClass,DOCUMENT_ROOT__TCONTAINS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__TEQUALS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__TOUCHES);
  createEReference(documentRootEClass,DOCUMENT_ROOT__TOVERLAPS);
  createEAttribute(documentRootEClass,DOCUMENT_ROOT__VALUE_REFERENCE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__WITHIN);
  extendedCapabilitiesTypeEClass=createEClass(EXTENDED_CAPABILITIES_TYPE);
  createEReference(extendedCapabilitiesTypeEClass,EXTENDED_CAPABILITIES_TYPE__ADDITIONAL_OPERATORS);
  extensionOperatorTypeEClass=createEClass(EXTENSION_OPERATOR_TYPE);
  createEAttribute(extensionOperatorTypeEClass,EXTENSION_OPERATOR_TYPE__NAME);
  extensionOpsTypeEClass=createEClass(EXTENSION_OPS_TYPE);
  filterCapabilitiesTypeEClass=createEClass(FILTER_CAPABILITIES_TYPE);
  createEReference(filterCapabilitiesTypeEClass,FILTER_CAPABILITIES_TYPE__CONFORMANCE);
  createEReference(filterCapabilitiesTypeEClass,FILTER_CAPABILITIES_TYPE__ID_CAPABILITIES);
  createEReference(filterCapabilitiesTypeEClass,FILTER_CAPABILITIES_TYPE__SCALAR_CAPABILITIES);
  createEReference(filterCapabilitiesTypeEClass,FILTER_CAPABILITIES_TYPE__SPATIAL_CAPABILITIES);
  createEReference(filterCapabilitiesTypeEClass,FILTER_CAPABILITIES_TYPE__TEMPORAL_CAPABILITIES);
  createEReference(filterCapabilitiesTypeEClass,FILTER_CAPABILITIES_TYPE__FUNCTIONS);
  createEReference(filterCapabilitiesTypeEClass,FILTER_CAPABILITIES_TYPE__EXTENDED_CAPABILITIES);
  filterTypeEClass=createEClass(FILTER_TYPE);
  createEAttribute(filterTypeEClass,FILTER_TYPE__COMPARISON_OPS_GROUP);
  createEReference(filterTypeEClass,FILTER_TYPE__COMPARISON_OPS);
  createEAttribute(filterTypeEClass,FILTER_TYPE__SPATIAL_OPS_GROUP);
  createEReference(filterTypeEClass,FILTER_TYPE__SPATIAL_OPS);
  createEAttribute(filterTypeEClass,FILTER_TYPE__TEMPORAL_OPS_GROUP);
  createEReference(filterTypeEClass,FILTER_TYPE__TEMPORAL_OPS);
  createEAttribute(filterTypeEClass,FILTER_TYPE__LOGIC_OPS_GROUP);
  createEReference(filterTypeEClass,FILTER_TYPE__LOGIC_OPS);
  createEAttribute(filterTypeEClass,FILTER_TYPE__EXTENSION_OPS_GROUP);
  createEReference(filterTypeEClass,FILTER_TYPE__EXTENSION_OPS);
  createEReference(filterTypeEClass,FILTER_TYPE__FUNCTION);
  createEAttribute(filterTypeEClass,FILTER_TYPE__ID_GROUP);
  createEReference(filterTypeEClass,FILTER_TYPE__ID);
  functionTypeEClass=createEClass(FUNCTION_TYPE);
  createEAttribute(functionTypeEClass,FUNCTION_TYPE__EXPRESSION_GROUP);
  createEReference(functionTypeEClass,FUNCTION_TYPE__EXPRESSION);
  createEAttribute(functionTypeEClass,FUNCTION_TYPE__NAME);
  geometryOperandsTypeEClass=createEClass(GEOMETRY_OPERANDS_TYPE);
  createEReference(geometryOperandsTypeEClass,GEOMETRY_OPERANDS_TYPE__GEOMETRY_OPERAND);
  geometryOperandTypeEClass=createEClass(GEOMETRY_OPERAND_TYPE);
  createEAttribute(geometryOperandTypeEClass,GEOMETRY_OPERAND_TYPE__NAME);
  idCapabilitiesTypeEClass=createEClass(ID_CAPABILITIES_TYPE);
  createEReference(idCapabilitiesTypeEClass,ID_CAPABILITIES_TYPE__RESOURCE_IDENTIFIER);
  literalTypeEClass=createEClass(LITERAL_TYPE);
  createEAttribute(literalTypeEClass,LITERAL_TYPE__MIXED);
  createEAttribute(literalTypeEClass,LITERAL_TYPE__ANY);
  createEAttribute(literalTypeEClass,LITERAL_TYPE__TYPE);
  logicalOperatorsTypeEClass=createEClass(LOGICAL_OPERATORS_TYPE);
  logicOpsTypeEClass=createEClass(LOGIC_OPS_TYPE);
  lowerBoundaryTypeEClass=createEClass(LOWER_BOUNDARY_TYPE);
  createEAttribute(lowerBoundaryTypeEClass,LOWER_BOUNDARY_TYPE__EXPRESSION_GROUP);
  createEReference(lowerBoundaryTypeEClass,LOWER_BOUNDARY_TYPE__EXPRESSION);
  measureTypeEClass=createEClass(MEASURE_TYPE);
  createEAttribute(measureTypeEClass,MEASURE_TYPE__VALUE);
  createEAttribute(measureTypeEClass,MEASURE_TYPE__UOM);
  propertyIsBetweenTypeEClass=createEClass(PROPERTY_IS_BETWEEN_TYPE);
  createEAttribute(propertyIsBetweenTypeEClass,PROPERTY_IS_BETWEEN_TYPE__EXPRESSION_GROUP);
  createEReference(propertyIsBetweenTypeEClass,PROPERTY_IS_BETWEEN_TYPE__EXPRESSION);
  createEReference(propertyIsBetweenTypeEClass,PROPERTY_IS_BETWEEN_TYPE__LOWER_BOUNDARY);
  createEReference(propertyIsBetweenTypeEClass,PROPERTY_IS_BETWEEN_TYPE__UPPER_BOUNDARY);
  propertyIsLikeTypeEClass=createEClass(PROPERTY_IS_LIKE_TYPE);
  createEAttribute(propertyIsLikeTypeEClass,PROPERTY_IS_LIKE_TYPE__EXPRESSION_GROUP);
  createEReference(propertyIsLikeTypeEClass,PROPERTY_IS_LIKE_TYPE__EXPRESSION);
  createEAttribute(propertyIsLikeTypeEClass,PROPERTY_IS_LIKE_TYPE__ESCAPE_CHAR);
  createEAttribute(propertyIsLikeTypeEClass,PROPERTY_IS_LIKE_TYPE__SINGLE_CHAR);
  createEAttribute(propertyIsLikeTypeEClass,PROPERTY_IS_LIKE_TYPE__WILD_CARD);
  propertyIsNilTypeEClass=createEClass(PROPERTY_IS_NIL_TYPE);
  createEAttribute(propertyIsNilTypeEClass,PROPERTY_IS_NIL_TYPE__EXPRESSION_GROUP);
  createEReference(propertyIsNilTypeEClass,PROPERTY_IS_NIL_TYPE__EXPRESSION);
  createEAttribute(propertyIsNilTypeEClass,PROPERTY_IS_NIL_TYPE__NIL_REASON);
  propertyIsNullTypeEClass=createEClass(PROPERTY_IS_NULL_TYPE);
  createEAttribute(propertyIsNullTypeEClass,PROPERTY_IS_NULL_TYPE__EXPRESSION_GROUP);
  createEReference(propertyIsNullTypeEClass,PROPERTY_IS_NULL_TYPE__EXPRESSION);
  resourceIdentifierTypeEClass=createEClass(RESOURCE_IDENTIFIER_TYPE);
  createEReference(resourceIdentifierTypeEClass,RESOURCE_IDENTIFIER_TYPE__METADATA);
  createEAttribute(resourceIdentifierTypeEClass,RESOURCE_IDENTIFIER_TYPE__NAME);
  resourceIdTypeEClass=createEClass(RESOURCE_ID_TYPE);
  createEAttribute(resourceIdTypeEClass,RESOURCE_ID_TYPE__END_DATE);
  createEAttribute(resourceIdTypeEClass,RESOURCE_ID_TYPE__PREVIOUS_RID);
  createEAttribute(resourceIdTypeEClass,RESOURCE_ID_TYPE__RID);
  createEAttribute(resourceIdTypeEClass,RESOURCE_ID_TYPE__START_DATE);
  createEAttribute(resourceIdTypeEClass,RESOURCE_ID_TYPE__VERSION);
  scalarCapabilitiesTypeEClass=createEClass(SCALAR_CAPABILITIES_TYPE);
  createEReference(scalarCapabilitiesTypeEClass,SCALAR_CAPABILITIES_TYPE__LOGICAL_OPERATORS);
  createEReference(scalarCapabilitiesTypeEClass,SCALAR_CAPABILITIES_TYPE__COMPARISON_OPERATORS);
  sortByTypeEClass=createEClass(SORT_BY_TYPE);
  createEReference(sortByTypeEClass,SORT_BY_TYPE__SORT_PROPERTY);
  sortPropertyTypeEClass=createEClass(SORT_PROPERTY_TYPE);
  createEAttribute(sortPropertyTypeEClass,SORT_PROPERTY_TYPE__VALUE_REFERENCE);
  createEAttribute(sortPropertyTypeEClass,SORT_PROPERTY_TYPE__SORT_ORDER);
  spatialCapabilitiesTypeEClass=createEClass(SPATIAL_CAPABILITIES_TYPE);
  createEReference(spatialCapabilitiesTypeEClass,SPATIAL_CAPABILITIES_TYPE__GEOMETRY_OPERANDS);
  createEReference(spatialCapabilitiesTypeEClass,SPATIAL_CAPABILITIES_TYPE__SPATIAL_OPERATORS);
  spatialOperatorsTypeEClass=createEClass(SPATIAL_OPERATORS_TYPE);
  createEReference(spatialOperatorsTypeEClass,SPATIAL_OPERATORS_TYPE__SPATIAL_OPERATOR);
  spatialOperatorTypeEClass=createEClass(SPATIAL_OPERATOR_TYPE);
  createEReference(spatialOperatorTypeEClass,SPATIAL_OPERATOR_TYPE__GEOMETRY_OPERANDS);
  createEAttribute(spatialOperatorTypeEClass,SPATIAL_OPERATOR_TYPE__NAME);
  spatialOpsTypeEClass=createEClass(SPATIAL_OPS_TYPE);
  temporalCapabilitiesTypeEClass=createEClass(TEMPORAL_CAPABILITIES_TYPE);
  createEReference(temporalCapabilitiesTypeEClass,TEMPORAL_CAPABILITIES_TYPE__TEMPORAL_OPERANDS);
  createEReference(temporalCapabilitiesTypeEClass,TEMPORAL_CAPABILITIES_TYPE__TEMPORAL_OPERATORS);
  temporalOperandsTypeEClass=createEClass(TEMPORAL_OPERANDS_TYPE);
  createEReference(temporalOperandsTypeEClass,TEMPORAL_OPERANDS_TYPE__TEMPORAL_OPERAND);
  temporalOperandTypeEClass=createEClass(TEMPORAL_OPERAND_TYPE);
  createEAttribute(temporalOperandTypeEClass,TEMPORAL_OPERAND_TYPE__NAME);
  temporalOperatorsTypeEClass=createEClass(TEMPORAL_OPERATORS_TYPE);
  createEReference(temporalOperatorsTypeEClass,TEMPORAL_OPERATORS_TYPE__TEMPORAL_OPERATOR);
  temporalOperatorTypeEClass=createEClass(TEMPORAL_OPERATOR_TYPE);
  createEReference(temporalOperatorTypeEClass,TEMPORAL_OPERATOR_TYPE__TEMPORAL_OPERANDS);
  createEAttribute(temporalOperatorTypeEClass,TEMPORAL_OPERATOR_TYPE__NAME);
  temporalOpsTypeEClass=createEClass(TEMPORAL_OPS_TYPE);
  unaryLogicOpTypeEClass=createEClass(UNARY_LOGIC_OP_TYPE);
  createEAttribute(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__COMPARISON_OPS_GROUP);
  createEReference(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__COMPARISON_OPS);
  createEAttribute(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__SPATIAL_OPS_GROUP);
  createEReference(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__SPATIAL_OPS);
  createEAttribute(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__TEMPORAL_OPS_GROUP);
  createEReference(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__TEMPORAL_OPS);
  createEAttribute(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__LOGIC_OPS_GROUP);
  createEReference(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__LOGIC_OPS);
  createEAttribute(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__EXTENSION_OPS_GROUP);
  createEReference(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__EXTENSION_OPS);
  createEReference(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__FUNCTION);
  createEAttribute(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__ID_GROUP);
  createEReference(unaryLogicOpTypeEClass,UNARY_LOGIC_OP_TYPE__ID);
  upperBoundaryTypeEClass=createEClass(UPPER_BOUNDARY_TYPE);
  createEAttribute(upperBoundaryTypeEClass,UPPER_BOUNDARY_TYPE__EXPRESSION_GROUP);
  createEReference(upperBoundaryTypeEClass,UPPER_BOUNDARY_TYPE__EXPRESSION);
  comparisonOperatorNameTypeMember0EEnum=createEEnum(COMPARISON_OPERATOR_NAME_TYPE_MEMBER0);
  matchActionTypeEEnum=createEEnum(MATCH_ACTION_TYPE);
  sortOrderTypeEEnum=createEEnum(SORT_ORDER_TYPE);
  spatialOperatorNameTypeMember0EEnum=createEEnum(SPATIAL_OPERATOR_NAME_TYPE_MEMBER0);
  temporalOperatorNameTypeMember0EEnum=createEEnum(TEMPORAL_OPERATOR_NAME_TYPE_MEMBER0);
  versionActionTokensEEnum=createEEnum(VERSION_ACTION_TOKENS);
  aliasesTypeEDataType=createEDataType(ALIASES_TYPE);
  comparisonOperatorNameTypeEDataType=createEDataType(COMPARISON_OPERATOR_NAME_TYPE);
  comparisonOperatorNameTypeMember0ObjectEDataType=createEDataType(COMPARISON_OPERATOR_NAME_TYPE_MEMBER0_OBJECT);
  comparisonOperatorNameTypeMember1EDataType=createEDataType(COMPARISON_OPERATOR_NAME_TYPE_MEMBER1);
  matchActionTypeObjectEDataType=createEDataType(MATCH_ACTION_TYPE_OBJECT);
  schemaElementEDataType=createEDataType(SCHEMA_ELEMENT);
  sortOrderTypeObjectEDataType=createEDataType(SORT_ORDER_TYPE_OBJECT);
  spatialOperatorNameTypeEDataType=createEDataType(SPATIAL_OPERATOR_NAME_TYPE);
  spatialOperatorNameTypeMember0ObjectEDataType=createEDataType(SPATIAL_OPERATOR_NAME_TYPE_MEMBER0_OBJECT);
  spatialOperatorNameTypeMember1EDataType=createEDataType(SPATIAL_OPERATOR_NAME_TYPE_MEMBER1);
  temporalOperatorNameTypeEDataType=createEDataType(TEMPORAL_OPERATOR_NAME_TYPE);
  temporalOperatorNameTypeMember0ObjectEDataType=createEDataType(TEMPORAL_OPERATOR_NAME_TYPE_MEMBER0_OBJECT);
  temporalOperatorNameTypeMember1EDataType=createEDataType(TEMPORAL_OPERATOR_NAME_TYPE_MEMBER1);
  typeNamesListTypeEDataType=createEDataType(TYPE_NAMES_LIST_TYPE);
  typeNamesTypeEDataType=createEDataType(TYPE_NAMES_TYPE);
  uomIdentifierEDataType=createEDataType(UOM_IDENTIFIER);
  uomSymbolEDataType=createEDataType(UOM_SYMBOL);
  uomURIEDataType=createEDataType(UOM_URI);
  versionActionTokensObjectEDataType=createEDataType(VERSION_ACTION_TOKENS_OBJECT);
  versionTypeEDataType=createEDataType(VERSION_TYPE);
}
