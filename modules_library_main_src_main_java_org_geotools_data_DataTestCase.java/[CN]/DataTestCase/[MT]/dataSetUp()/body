{
  String namespace=getName();
  roadType=DataUtilities.createType(namespace + ".road","id:0,geom:LineString,name:String");
  subRoadType=DataUtilities.createType(namespace + "road","id:0,geom:LineString");
  gf=new GeometryFactory();
  roadFeatures=new SimpleFeature[3];
  roadFeatures[0]=SimpleFeatureBuilder.build(roadType,new Object[]{new Integer(1),line(new int[]{1,1,2,2,4,2,5,1}),"r1"},"road.rd1");
  roadFeatures[1]=SimpleFeatureBuilder.build(roadType,new Object[]{new Integer(2),line(new int[]{3,0,3,2,3,3,3,4}),"r2"},"road.rd2");
  roadFeatures[2]=SimpleFeatureBuilder.build(roadType,new Object[]{new Integer(3),line(new int[]{3,2,4,2,5,3}),"r3"},"road.rd3");
  roadBounds=new ReferencedEnvelope();
  roadBounds.expandToInclude(new ReferencedEnvelope(roadFeatures[0].getBounds()));
  roadBounds.expandToInclude(new ReferencedEnvelope(roadFeatures[1].getBounds()));
  roadBounds.expandToInclude(new ReferencedEnvelope(roadFeatures[2].getBounds()));
  rd1Filter=ff.id(Collections.singleton(ff.featureId("road.rd1")));
  rd2Filter=ff.id(Collections.singleton(ff.featureId("road.rd2")));
  Id create=ff.id(new HashSet(Arrays.asList(ff.featureId("road.rd1"),ff.featureId("road.rd2"))));
  rd12Filter=create;
  rd12Bounds=new ReferencedEnvelope();
  rd12Bounds.expandToInclude(new ReferencedEnvelope(roadFeatures[0].getBounds()));
  rd12Bounds.expandToInclude(new ReferencedEnvelope(roadFeatures[1].getBounds()));
  newRoad=SimpleFeatureBuilder.build(roadType,new Object[]{new Integer(4),line(new int[]{1,2,2,3}),"r4"},"road.rd4");
  riverType=DataUtilities.createType(namespace + ".river","id:0,geom:MultiLineString,river:String,flow:0.0");
  subRiverType=DataUtilities.createType(namespace + ".river","river:String,flow:0.0");
  gf=new GeometryFactory();
  riverFeatures=new SimpleFeature[2];
  riverFeatures[0]=SimpleFeatureBuilder.build(riverType,new Object[]{new Integer(1),lines(new int[][]{{5,5,7,4},{7,5,9,7,13,7},{7,5,9,3,11,3}}),"rv1",new Double(4.5)},"river.rv1");
  riverFeatures[1]=SimpleFeatureBuilder.build(riverType,new Object[]{new Integer(2),lines(new int[][]{{4,6,4,8,6,10}}),"rv2",new Double(3.0)},"river.rv2");
  riverBounds=new ReferencedEnvelope();
  riverBounds.expandToInclude(ReferencedEnvelope.reference(riverFeatures[0].getBounds()));
  riverBounds.expandToInclude(ReferencedEnvelope.reference(riverFeatures[1].getBounds()));
  rv1Filter=ff.id(Collections.singleton(ff.featureId("river.rv1")));
  newRiver=SimpleFeatureBuilder.build(riverType,new Object[]{new Integer(3),lines(new int[][]{{9,5,11,5,13,3}}),"rv3",new Double(1.5)},"river.rv3");
  lakeType=DataUtilities.createType(namespace + ".lake","id:0,geom:Polygon:nillable,name:String");
  lakeFeatures=new SimpleFeature[1];
  lakeFeatures[0]=SimpleFeatureBuilder.build(lakeType,new Object[]{new Integer(0),polygon(new int[]{12,6,14,8,16,6,16,4,14,4,12,6}),"muddy"},"lake.lk1");
  lakeBounds=new ReferencedEnvelope();
  lakeBounds.expandToInclude(ReferencedEnvelope.reference(lakeFeatures[0].getBounds()));
}
