{
  boolean doPost=false;
  URL url;
  if (postData != null && (baseURL.length() + resource.length() + postData.length() < 2048)) {
    url=new URL(baseURL + resource + "?"+ postData);
  }
 else {
    url=new URL(baseURL + resource);
  }
  HttpURLConnection urlConnection=(HttpURLConnection)url.openConnection();
  urlConnection.setRequestProperty("Accept-Encoding","gzip");
  if (user != null && password != null) {
    String combined=nullToEmpty(user) + ":" + nullToEmpty(password);
    byte[] authBytes=combined.getBytes("US-ASCII");
    String encoded=new String(Base64.encodeBase64(authBytes));
    urlConnection.setRequestProperty("Authorization","Basic " + encoded);
  }
  if (timeout > 0) {
    urlConnection.setConnectTimeout(timeout);
    urlConnection.setReadTimeout(timeout);
  }
  urlConnection.setDoInput(true);
  if (doPost && postData != null && !"".equals(postData.trim())) {
    urlConnection.setRequestMethod("POST");
    urlConnection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    urlConnection.setDoOutput(true);
    OutputStreamWriter wr=null;
    try {
      wr=new OutputStreamWriter(urlConnection.getOutputStream());
      wr.write(postData);
      wr.flush();
    }
  finally {
      if (wr != null) {
        wr.close();
      }
    }
  }
 else {
    urlConnection.setRequestMethod("GET");
  }
  if (urlConnection.getResponseCode() != 200) {
    throw new IOException("Server reported and error with code " + urlConnection.getResponseCode() + ": "+ urlConnection.getResponseMessage()+ " accessing resource "+ url.toExternalForm());
  }
 else {
    InputStream is=urlConnection.getInputStream();
    String encoding=urlConnection.getContentEncoding();
    if ("gzip".equalsIgnoreCase(encoding)) {
      is=new GZIPInputStream(is);
    }
    return is;
  }
}
