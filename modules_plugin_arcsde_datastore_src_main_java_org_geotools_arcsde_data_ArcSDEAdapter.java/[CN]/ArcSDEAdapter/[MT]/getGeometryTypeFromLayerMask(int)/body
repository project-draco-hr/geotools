{
  Class<? extends Geometry> clazz=com.vividsolutions.jts.geom.Geometry.class;
  final int MULTIPART_MASK=SeLayer.SE_MULTIPART_TYPE_MASK;
  final int POINT_MASK=SeLayer.SE_POINT_TYPE_MASK;
  final int SIMPLE_LINE_MASK=SeLayer.SE_SIMPLE_LINE_TYPE_MASK;
  final int LINESTRING_MASK=SeLayer.SE_LINE_TYPE_MASK;
  final int AREA_MASK=SeLayer.SE_AREA_TYPE_MASK;
  final int isCollection=((seShapeType & MULTIPART_MASK) == MULTIPART_MASK) ? 1 : 0;
  final int isPoint=((seShapeType & POINT_MASK) == POINT_MASK) ? 1 : 0;
  final int isLineString=(((seShapeType & SIMPLE_LINE_MASK) == SIMPLE_LINE_MASK) || ((seShapeType & LINESTRING_MASK) == LINESTRING_MASK)) ? 1 : 0;
  final int isPolygon=((seShapeType & AREA_MASK) == AREA_MASK) ? 1 : 0;
  if ((isPoint + isLineString + isPolygon) > 1) {
    clazz=Geometry.class;
    if (4 < (isCollection + isPoint + isLineString+ isPolygon)) {
      LOGGER.warning("Be careful!! we're mapping an ArcSDE Shape type " + "to the generic Geometry class, but the shape type " + "does not really allows all geometry types!: "+ "isCollection=" + isCollection + ", isPoint="+ isPoint+ ", isLineString="+ isLineString+ ", isPolygon="+ isPolygon);
    }
 else {
      LOGGER.fine("safely mapping SeShapeType to abstract Geometry");
    }
  }
 else   if (isCollection == 1) {
    if (isPoint == 1) {
      clazz=MultiPoint.class;
    }
 else     if (isLineString == 1) {
      clazz=MultiLineString.class;
    }
 else     if (isPolygon == 1) {
      clazz=MultiPolygon.class;
    }
 else {
      throw new IllegalStateException("this shouldn't happen!");
    }
  }
 else {
    if (isPoint == 1) {
      clazz=Point.class;
    }
 else     if (isLineString == 1) {
      clazz=LineString.class;
    }
 else     if (isPolygon == 1) {
      clazz=Polygon.class;
    }
 else {
      throw new IllegalStateException("this shouldn't happen!");
    }
  }
  return clazz;
}
