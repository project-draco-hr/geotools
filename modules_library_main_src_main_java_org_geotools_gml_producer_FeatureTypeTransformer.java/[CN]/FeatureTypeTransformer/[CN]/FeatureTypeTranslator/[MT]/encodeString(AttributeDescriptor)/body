{
  int length=Integer.MAX_VALUE;
  for (  Filter f : attribute.getType().getRestrictions()) {
    if (f == Filter.INCLUDE || f == Filter.EXCLUDE)     continue;
    try {
      if (f instanceof PropertyIsLessThan || f instanceof PropertyIsLessThanOrEqualTo) {
        BinaryComparisonOperator cf=(BinaryComparisonOperator)f;
        Expression e=cf.getExpression1();
        if (e != null && e instanceof LengthFunction) {
          length=Integer.parseInt(((Literal)cf.getExpression2()).getValue().toString());
        }
 else {
          if (cf.getExpression2() instanceof LengthFunction) {
            length=Integer.parseInt(((Literal)cf.getExpression1()).getValue().toString());
          }
        }
      }
    }
 catch (    Throwable t) {
      length=Integer.MAX_VALUE;
    }
  }
  AttributesImpl atts=createStandardAttributes(attribute);
  if (length == 0) {
    atts.addAttribute("","type","type","","xs:string");
    contentHandler.startElement(SCHEMA_NS,"element","xs:element",atts);
    contentHandler.endElement(SCHEMA_NS,"element","xs:element");
  }
 else {
    contentHandler.startElement(SCHEMA_NS,"element","xs:element",atts);
    contentHandler.startElement(SCHEMA_NS,"simpleType","xs:simpleType",new AttributesImpl());
    atts=new AttributesImpl();
    atts.addAttribute("","base","base","","xs:string");
    contentHandler.startElement(SCHEMA_NS,"restriction","xs:restriction",atts);
    atts=new AttributesImpl();
    atts.addAttribute("","value","value","","" + length);
    contentHandler.startElement(SCHEMA_NS,"maxLength","xs:maxLength",atts);
    contentHandler.endElement(SCHEMA_NS,"maxLength","xs:maxLength");
    contentHandler.endElement(SCHEMA_NS,"restriction","xs:restriction");
    contentHandler.endElement(SCHEMA_NS,"simpleType","xs:simpleType");
    contentHandler.endElement(SCHEMA_NS,"element","xs:element");
  }
}
