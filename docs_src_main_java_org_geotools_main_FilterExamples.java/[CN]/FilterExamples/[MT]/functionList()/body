{
  Set<FunctionFactory> functionFactories=CommonFactoryFinder.getFunctionFactories(null);
  for (  FunctionFactory factory : functionFactories) {
    System.out.println(factory.getClass().getName());
    List<FunctionName> functionNames=factory.getFunctionNames();
    ArrayList<FunctionName> sorted=new ArrayList<>(functionNames);
    Collections.sort(sorted,new Comparator<FunctionName>(){
      public int compare(      FunctionName o1,      FunctionName o2){
        if (o1 == null && o2 == null)         return 0;
        if (o1 == null && o2 != null)         return 1;
        if (o1 != null && o2 == null)         return -1;
        return o1.getName().compareTo(o2.getName());
      }
    }
);
    for (    FunctionName functionName : sorted) {
      System.out.print("    ");
      System.out.print(functionName.getName());
      System.out.print("(");
      int i=0;
      for (      Parameter<?> argument : functionName.getArguments()) {
        if (i++ > 0) {
          System.out.print(", ");
        }
        System.out.print(argument.getName());
        if (argument.getType() == Object.class && argument.isRequired()) {
        }
 else {
          System.out.print("{");
          System.out.print(argument.getType().getSimpleName());
          if (argument.isRequired()) {
            System.out.print(",required");
          }
 else           if (argument.getMinOccurs() == 0 && argument.getMaxOccurs() == 1) {
            System.out.print(",optional");
          }
 else {
            int min=argument.getMinOccurs();
            int max=argument.getMaxOccurs();
            System.out.print(",");
            System.out.print(min);
            System.out.print(":");
            System.out.print(max == Integer.MAX_VALUE ? "unbounded" : max);
          }
          System.out.print("}");
        }
      }
      Parameter<?> result=functionName.getReturn();
      System.out.print(")");
      System.out.print(":" + result.getName());
      if (result.getType() != Object.class) {
        System.out.print("{");
        Class<?> type=result.getType();
        if (type != null) {
          System.out.print(type.getSimpleName());
        }
 else {
          System.out.print("null");
        }
        System.out.print("}");
      }
      System.out.println();
    }
  }
}
