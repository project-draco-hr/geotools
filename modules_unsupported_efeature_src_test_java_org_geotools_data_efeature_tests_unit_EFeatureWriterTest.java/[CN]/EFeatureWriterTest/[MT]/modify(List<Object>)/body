{
  List<Object> modified=new ArrayList<Object>(values.size());
  for (  Object it : values) {
    Object v=it;
    if (DataTypes.isNumeric(it)) {
      if (it instanceof Integer) {
      }
 else       if (it instanceof Double) {
        v=((Double)it).doubleValue() * Math.random();
      }
 else       if (it instanceof Float) {
        v=((Float)it).floatValue() * Math.random();
      }
 else       if (it instanceof Byte) {
        v=((Byte)it).byteValue() * Math.random();
      }
 else       if (it instanceof Integer) {
        v=((Integer)it).intValue() * Math.random();
      }
 else       if (it instanceof Short) {
        v=((Short)it).shortValue() * Math.random();
      }
 else       if (it instanceof Long) {
        v=((Long)it).longValue() * Math.random();
      }
 else       if (it instanceof Character) {
        v=((Character)it).charValue() * Math.random();
      }
    }
 else     if (DataTypes.isBoolean(it,true)) {
      modified.add(!Boolean.valueOf(it.toString()));
    }
 else     if (DataTypes.isGeometry(it)) {
      Geometry g=(Geometry)it;
      g=g.getFactory().createGeometry(g);
      Coordinate[] c=g.getCoordinates();
      c[0].x=c[0].x * c[0].x * Math.random()* 100;
      c[0].y=c[0].y * c[0].y * Math.random()* 100;
      modified.add(g);
    }
 else     if (DataTypes.isDate(it)) {
      modified.add(Calendar.getInstance().getTime());
    }
 else     if (DataTypes.isString(it)) {
      modified.add(((String)it) + ((String)it));
    }
    assertNotSame("Value not modified",it,v);
    modified.add(v);
  }
  return modified;
}
