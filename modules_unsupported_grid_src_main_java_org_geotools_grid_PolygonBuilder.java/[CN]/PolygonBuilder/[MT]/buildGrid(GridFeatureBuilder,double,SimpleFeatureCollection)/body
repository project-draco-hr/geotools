{
  boolean result=true;
  final boolean densify=isValidDenseVertexSpacing(vertexSpacing);
  final SimpleFeatureBuilder fb=new SimpleFeatureBuilder(gridFeatureBuilder.getType());
  final String geomPropName=gridFeatureBuilder.getType().getGeometryDescriptor().getLocalName();
  PolygonElement el0=getFirstElement();
  PolygonElement el=el0;
  while (el.getBounds().getMinY() <= gridBounds.getMaxY()) {
    while (el.getBounds().getMaxX() <= gridBounds.getMaxX()) {
      if (((Envelope)gridBounds).contains(el.getBounds())) {
        if (gridFeatureBuilder.getCreateFeature(el)) {
          Map<String,Object> attrMap=new HashMap<String,Object>();
          gridFeatureBuilder.setAttributes(el,attrMap);
          if (densify) {
            fb.set(geomPropName,el.toDenseGeometry(vertexSpacing));
          }
 else {
            fb.set(geomPropName,el.toGeometry());
          }
          for (          String propName : attrMap.keySet()) {
            fb.set(propName,attrMap.get(propName));
          }
          fc.add(fb.buildFeature(gridFeatureBuilder.getFeatureID(el)));
        }
      }
      el=getNextXElement(el);
    }
    el0=getNextYElement(el0);
    el=el0;
  }
  return result;
}
