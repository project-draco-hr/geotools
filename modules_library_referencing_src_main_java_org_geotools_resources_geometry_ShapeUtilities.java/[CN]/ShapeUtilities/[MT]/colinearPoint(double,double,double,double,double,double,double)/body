{
  final double ox1=x1;
  final double oy1=y1;
  final double ox2=x2;
  final double oy2=y2;
  distance*=distance;
  if (x1 == x2) {
    double dy=x1 - x;
    dy=sqrt(distance - dy * dy);
    y1=y - dy;
    y2=y + dy;
  }
 else   if (y1 == y2) {
    double dx=y1 - y;
    dx=sqrt(distance - dx * dx);
    x1=x - dx;
    x2=x + dx;
  }
 else {
    final double m=(y1 - y2) / (x2 - x1);
    final double y0=(y2 - y) + m * (x2 - x);
    final double B=m * y0;
    final double A=m * m + 1;
    final double C=sqrt(B * B + A * (distance - y0 * y0));
    x1=(B + C) / A;
    x2=(B - C) / A;
    y1=y + y0 - m * x1;
    y2=y + y0 - m * x2;
    x1+=x;
    x2+=x;
  }
  boolean in1, in2;
  if (oy1 > oy2) {
    in1=y1 <= oy1 && y1 >= oy2;
    in2=y2 <= oy1 && y2 >= oy2;
  }
 else {
    in1=y1 >= oy1 && y1 <= oy2;
    in2=y2 >= oy1 && y2 <= oy2;
  }
  if (ox1 > ox2) {
    in1&=x1 <= ox1 && x1 >= ox2;
    in2&=x2 <= ox1 && x2 >= ox2;
  }
 else {
    in1&=x1 >= ox1 && x1 <= ox2;
    in2&=x2 >= ox1 && x2 <= ox2;
  }
  if (!in1 && !in2)   return null;
  if (!in1)   return new Point2D.Double(x2,y2);
  if (!in2)   return new Point2D.Double(x1,y1);
  x=x1 - ox1;
  y=y1 - oy1;
  final double d1=x * x + y * y;
  x=x2 - ox1;
  y=y2 - oy1;
  final double d2=x * x + y * y;
  if (d1 > d2)   return new Point2D.Double(x2,y2);
 else   return new Point2D.Double(x1,y1);
}
