{
  m_inNode=new BasicDirectedNode();
  m_outNode=new BasicDirectedNode();
  m_edge=new BasicDirectedEdge(m_inNode,m_outNode);
  m_inNode.addOut(m_edge);
  m_outNode.addIn(m_edge);
  m_otherInNode=new BasicDirectedNode();
  m_otherOutNode=new BasicDirectedNode();
  m_inEdge=new BasicDirectedEdge(m_otherInNode,m_inNode);
  m_otherInNode.addOut(m_inEdge);
  m_inNode.addIn(m_inEdge);
  m_outEdge=new BasicDirectedEdge(m_outNode,m_otherOutNode);
  m_outNode.addOut(m_outEdge);
  m_otherOutNode.addIn(m_outEdge);
  m_same=new BasicDirectedEdge(m_inNode,m_outNode);
  m_same2=new BasicDirectedEdge(m_inNode,m_outNode);
  m_opp=new BasicDirectedEdge(m_outNode,m_inNode);
  m_opp2=new BasicDirectedEdge(m_outNode,m_inNode);
  m_inloop=new BasicDirectedEdge(m_inNode,m_inNode);
  m_outloop=new BasicDirectedEdge(m_outNode,m_outNode);
  m_inoutEdge=new BasicDirectedEdge(m_inNode,m_otherInNode);
  m_outinEdge=new BasicDirectedEdge(m_otherOutNode,m_outNode);
}
