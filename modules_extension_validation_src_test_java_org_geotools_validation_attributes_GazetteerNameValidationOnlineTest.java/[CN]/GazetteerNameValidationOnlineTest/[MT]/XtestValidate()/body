{
class TestFeature implements SimpleFeature {
    Map attrs=new HashMap();
    public SimpleFeatureCollection getParent(){
      return null;
    }
    public void setParent(    SimpleFeatureCollection collection){
    }
    public SimpleFeatureType getFeatureType(){
      return null;
    }
    public String getID(){
      return "";
    }
    public FeatureId getIdentifier(){
      return null;
    }
    public Object[] getAttributes(    Object[] attributes){
      return attrs.entrySet().toArray();
    }
    public Object getAttribute(    String xPath){
      return attrs.get(xPath);
    }
    public Object getAttribute(    int index){
      return attrs.entrySet().toArray()[index];
    }
    public void setAttribute(    int position,    Object val) throws IllegalAttributeException, ArrayIndexOutOfBoundsException {
    }
    public int getNumberOfAttributes(){
      return attrs.size();
    }
    public void setAttributes(    Object[] attributes) throws IllegalAttributeException {
    }
    public void setAttribute(    String xPath,    Object attribute) throws IllegalAttributeException {
      attrs.put(xPath,attribute);
    }
    public void setDefaultGeometry(    Geometry geometry) throws IllegalAttributeException {
    }
    public ReferencedEnvelope getBounds(){
      return null;
    }
    public Object getDefaultGeometryValue(){
      return null;
    }
    public SimpleFeatureType getType(){
      return null;
    }
    public List getTypes(){
      return null;
    }
    public Object getValue(    String name){
      return null;
    }
    public Object getValue(    int index){
      return null;
    }
    public List getValues(){
      return null;
    }
    public Object operation(    String name,    Object parameters){
      return null;
    }
    public void setDefaultGeometryValue(    Object geometry){
    }
    public void setValue(    String name,    Object value){
    }
    public void setValue(    int index,    Object value){
    }
    public void setValues(    List values){
    }
    public void setValues(    Object[] values){
    }
    public CoordinateReferenceSystem getCRS(){
      return null;
    }
    public Geometry getDefaultGeometry(){
      return null;
    }
    public Object getUserData(    Object key){
      return null;
    }
    public void putUserData(    Object key,    Object value){
    }
    public void setCRS(    CoordinateReferenceSystem crs){
    }
    public void setDefaultGeometry(    GeometryAttribute geometryAttribute){
    }
    public Collection associations(){
      return null;
    }
    public Collection attributes(){
      return null;
    }
    public Object get(){
      return null;
    }
    public List get(    Name name){
      return null;
    }
    public AttributeDescriptor getDescriptor(){
      return null;
    }
    public void set(    Object newValue) throws IllegalArgumentException {
    }
    public boolean nillable(){
      return false;
    }
    public Object operation(    Name name,    List parameters){
      return null;
    }
    public PropertyDescriptor descriptor(){
      return null;
    }
    public Name name(){
      return null;
    }
    public List getAttributes(){
      return null;
    }
    public Collection<? extends Property> getValue(){
      return null;
    }
    public void setValue(    List values){
    }
    public void setValue(    Object values){
    }
    public Object getAttribute(    Name name){
      return null;
    }
    public int getAttributeCount(){
      return 0;
    }
    public void setAttribute(    Name name,    Object value){
    }
    public void setAttributes(    List<Object> values){
    }
    public void setDefaultGeometry(    Object geometry){
    }
    public GeometryAttribute getDefaultGeometryProperty(){
      return null;
    }
    public void setDefaultGeometryProperty(    GeometryAttribute geometryAttribute){
    }
    public Collection<Property> getProperties(    Name name){
      return null;
    }
    public Collection<Property> getProperties(    String name){
      return null;
    }
    public Property getProperty(    Name name){
      return null;
    }
    public Property getProperty(    String name){
      return null;
    }
    public void setValue(    Collection<Property> values){
    }
    public Name getName(){
      return null;
    }
    public Map<Object,Object> getUserData(){
      return null;
    }
    public boolean isNillable(){
      return false;
    }
    public Collection<Property> getProperties(){
      return null;
    }
    public void validate(){
    }
  }
  SimpleFeature f=new TestFeature();
  try {
    f.setAttribute("CityName","Vancouver");
  }
 catch (  Exception e) {
  }
  GazetteerNameValidation gnv=new GazetteerNameValidation();
  gnv.setAttributeName("CityName");
  try {
    gnv.setGazetteer(new URL("http://cgdi-dev.geoconnections.org/cgi-bin/prototypes/cgdigaz/cgdigaz.cgi?version=1.0&request=GetPlacenameGeometry&wildcards=false&geomtype=bbox"));
  }
 catch (  Exception e) {
  }
}
