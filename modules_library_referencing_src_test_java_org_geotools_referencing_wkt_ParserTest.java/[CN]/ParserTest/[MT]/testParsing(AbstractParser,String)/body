{
  final BufferedReader reader=TestData.openReader(ScriptRunner.class,filename);
  if (reader == null) {
    throw new FileNotFoundException(filename);
  }
  final Collection<Object> pool=new HashSet<Object>();
  String line;
  while ((line=reader.readLine()) != null) {
    line=line.trim();
    if (line.length() == 0 || line.startsWith("#")) {
      continue;
    }
    final Object parsed;
    try {
      parsed=parser.parseObject(line);
    }
 catch (    ParseException exception) {
      System.err.println();
      System.err.println("-----------------------------");
      System.err.println("Parse failed. Dump WKT below.");
      System.err.println("-----------------------------");
      System.err.println(line);
      System.err.println();
      throw exception;
    }
    assertNotNull("Parsing returns null.",parsed);
    assertEquals("Inconsistent equals method",parsed,parsed);
    assertSame("Parsing twice returns different objects.",parsed,parser.parseObject(line));
    assertTrue("An identical object already exists.",pool.add(parsed));
    assertTrue("Inconsistent hashCode or equals method.",pool.contains(parsed));
    String formatted=parser.format(parsed);
    final Object again;
    try {
      again=parser.parseObject(formatted);
    }
 catch (    ParseException exception) {
      System.err.println();
      System.err.println("------------------------------------");
      System.err.println("Second parse failed. Dump WKT below.");
      System.err.println("------------------------------------");
      System.err.println(line);
      System.err.println();
      System.err.println("------ Reformatted WKT below -------");
      System.err.println();
      System.err.println(formatted);
      System.err.println();
      throw exception;
    }
    assertEquals("Second parsing produced different objects",parsed,again);
    assertTrue("Inconsistent hashCode or equals method.",pool.contains(again));
  }
  reader.close();
}
