{
  if (requestCRS == null)   requestCRS=CRS.getHorizontalCRS(requestedBBox.getCoordinateReferenceSystem());
  try {
    if (destinationToSourceTransform != null && !destinationToSourceTransform.isIdentity()) {
      final GeneralEnvelope temp=new GeneralEnvelope(CRS.transform(requestedBBox,coverageProperties.crs2D));
      temp.setCoordinateReferenceSystem(coverageProperties.crs2D);
      cropBBox=new ReferencedEnvelope(temp);
      needsReprojection=true;
    }
 else {
      cropBBox=new ReferencedEnvelope(requestedBBox.getMinX(),requestedBBox.getMaxX(),requestedBBox.getMinY(),requestedBBox.getMaxY(),coverageProperties.crs2D);
    }
    if (!cropBBox.intersects((BoundingBox)coverageProperties.bbox)) {
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.fine(new StringBuilder("The computed CropBoundingBox ").append(cropBBox).append(" Doesn't intersect the coverage BoundingBox ").append(coverageProperties.bbox).append(" resulting in an empty request").toString());
      }
      cropBBox=null;
      empty=true;
      return;
    }
    cropBBox=new ReferencedEnvelope(((ReferencedEnvelope)cropBBox).intersection(coverageProperties.bbox),coverageProperties.crs2D);
    return;
  }
 catch (  TransformException te) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,te.getLocalizedMessage(),te);
  }
  try {
    if (coverageProperties.geographicCRS2D != null && coverageProperties.geographicBBox != null) {
      if (!CRS.equalsIgnoreMetadata(coverageProperties.geographicCRS2D,requestCRS)) {
        requestCRSToCoverageGeographicCRS2D=CRS.findMathTransform(requestCRS,coverageProperties.geographicCRS2D,true);
        if (!requestCRSToCoverageGeographicCRS2D.isIdentity()) {
          requestedBBOXInCoverageGeographicCRS=CRS.transform(requestedBBox,coverageProperties.geographicCRS2D);
          requestedBBOXInCoverageGeographicCRS.setCoordinateReferenceSystem(coverageProperties.geographicCRS2D);
        }
      }
      if (requestedBBOXInCoverageGeographicCRS == null) {
        requestedBBOXInCoverageGeographicCRS=new GeneralEnvelope(requestCRS);
      }
      if (!requestedBBOXInCoverageGeographicCRS.intersects(coverageProperties.geographicBBox,true)) {
        cropBBox=null;
        empty=true;
        return;
      }
      requestedBBOXInCoverageGeographicCRS.intersect(coverageProperties.geographicBBox);
      requestedBBOXInCoverageGeographicCRS.setCoordinateReferenceSystem(coverageProperties.geographicCRS2D);
      approximateRequestedBBoInNativeCRS=CRS.transform(requestedBBOXInCoverageGeographicCRS,coverageProperties.crs2D);
      approximateRequestedBBoInNativeCRS.setCoordinateReferenceSystem(coverageProperties.crs2D);
      cropBBox=new ReferencedEnvelope(approximateRequestedBBoInNativeCRS);
      return;
    }
  }
 catch (  TransformException te) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,te.getLocalizedMessage(),te);
  }
catch (  FactoryException fe) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,fe.getLocalizedMessage(),fe);
  }
  LOGGER.log(Level.INFO,"We did not manage to crop the requested envelope, we fall back onto loading the whole coverage.");
  cropBBox=null;
}
