{
  final int SIZE=64;
  final BufferedImage source=new BufferedImage(SIZE,SIZE,BufferedImage.TYPE_BYTE_INDEXED);
  final DataBufferByte buffer=(DataBufferByte)source.getRaster().getDataBuffer();
  final byte[] array=buffer.getData(0);
  for (int i=0; i < array.length; i++) {
    array[i]=(byte)random.nextInt(161);
  }
  final MathTransform identity=IdentityTransform.create(2);
  final GridCoverageFactory factory=CoverageFactoryFinder.getGridCoverageFactory(null);
  GridCoverage2D coverage;
  coverage=factory.create("Test",source,DefaultGeographicCRS.WGS84,identity,new GridSampleDimension[]{band},null,null);
  final RenderedImage target=coverage.view(ViewType.GEOPHYSICS).getRenderedImage();
  assertSame(target,PlanarImage.wrapRenderedImage(target));
  assertEquals(DataBuffer.TYPE_BYTE,source.getSampleModel().getDataType());
  if (coverage.getRenderedImage() != target) {
    assertEquals(DataBuffer.TYPE_FLOAT,target.getSampleModel().getDataType());
  }
  double[] sourceData=source.getData().getSamples(0,0,SIZE,SIZE,0,(double[])null);
  double[] targetData=target.getData().getSamples(0,0,SIZE,SIZE,0,(double[])null);
  band.getSampleToGeophysics().transform(sourceData,0,sourceData,0,sourceData.length);
  CategoryListTest.compare(sourceData,targetData,EPS);
  RenderedImage back=PlanarImage.wrapRenderedImage(target).getAsBufferedImage();
  coverage=factory.create("Test",back,DefaultGeographicCRS.WGS84,identity,new GridSampleDimension[]{band.geophysics(true)},null,null);
  back=coverage.view(ViewType.PACKED).getRenderedImage();
  assertEquals(DataBuffer.TYPE_BYTE,back.getSampleModel().getDataType());
  sourceData=source.getData().getSamples(0,0,SIZE,SIZE,0,(double[])null);
  targetData=back.getData().getSamples(0,0,SIZE,SIZE,0,(double[])null);
  CategoryListTest.compare(sourceData,targetData,1.0 + EPS);
  return target;
}
