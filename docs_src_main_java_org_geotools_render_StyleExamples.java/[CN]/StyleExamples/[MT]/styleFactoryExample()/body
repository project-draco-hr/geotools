{
  org.geotools.styling.StyleFactory sf=CommonFactoryFinder.getStyleFactory(null);
  FilterFactory2 ff=CommonFactoryFinder.getFilterFactory2(null);
  StyledLayerDescriptor sld=sf.createStyledLayerDescriptor();
  sld.setName("sld");
  sld.setTitle("Example");
  sld.setAbstract("Example Style Layer Descriptor");
  UserLayer layer=sf.createUserLayer();
  layer.setName("layer");
  FeatureTypeConstraint constraint=sf.createFeatureTypeConstraint("Feature",Filter.INCLUDE,null);
  layer.layerFeatureConstraints().add(constraint);
  Style style=sf.createStyle();
  style.setName("style");
  style.getDescription().setTitle("User Style");
  style.getDescription().setAbstract("Definition of Style");
  FeatureTypeStyle featureTypeStyle=sf.createFeatureTypeStyle();
  Rule rule1=sf.createRule();
  rule1.setName("rule1");
  rule1.getDescription().setTitle("City");
  rule1.getDescription().setAbstract("Rule for drawing cities");
  rule1.setFilter(ff.less(ff.property("POPULATION"),ff.literal(50000)));
  Stroke stroke=sf.stroke(ff.literal("#000000"),null,null,null,null,null,null);
  Fill fill=sf.fill(null,ff.literal(Color.BLUE),ff.literal(1.0));
  OnLineResourceImpl svg=new OnLineResourceImpl(new URI("file:city.svg"));
  svg.freeze();
  OnLineResourceImpl png=new OnLineResourceImpl(new URI("file:city.png"));
  png.freeze();
  List<GraphicalSymbol> symbols=new ArrayList<GraphicalSymbol>();
  symbols.add(sf.externalGraphic(svg,"svg",null));
  symbols.add(sf.externalGraphic(png,"png",null));
  symbols.add(sf.mark(ff.literal("circle"),fill,stroke));
  Expression opacity=null;
  Expression size=ff.literal(10);
  Expression rotation=null;
  AnchorPoint anchor=null;
  Displacement displacement=null;
  Graphic city=sf.graphic(symbols,opacity,size,rotation,anchor,displacement);
  PointSymbolizer pointSymbolizer=sf.pointSymbolizer("point",ff.property("the_geom"),null,null,city);
  rule1.symbolizers().add(pointSymbolizer);
  featureTypeStyle.rules().add(rule1);
  List<GraphicalSymbol> dotSymbols=new ArrayList<GraphicalSymbol>();
  dotSymbols.add(sf.mark(ff.literal("circle"),null,null));
  Graphic dotGraphic=sf.graphic(dotSymbols,null,ff.literal(3),null,null,null);
  PointSymbolizer dotSymbolizer=sf.pointSymbolizer("dot",null,null,null,dotGraphic);
  List<Symbolizer> symbolizers=new ArrayList<Symbolizer>();
  symbolizers.add(dotSymbolizer);
  Filter other=null;
  Rule rule2=sf.rule("default",null,null,Double.MIN_VALUE,Double.MAX_VALUE,symbolizers,other);
  featureTypeStyle.rules().add(rule2);
  style.featureTypeStyles().add(featureTypeStyle);
  layer.userStyles().add(style);
  sld.layers().add(layer);
}
