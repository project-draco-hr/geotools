{
  SimpleFeatureTypeBuilder builder=new SimpleFeatureTypeBuilder();
  builder.setName(typeName);
  builder.userData("mapping","geometry");
  builder.userData("encoding","GeoJSON");
  builder.add("geometry",MultiPolygon.class,CRS.decode("EPSG:4269",true));
  builder.userData("mapping","child.prop1");
  builder.add("propString",String.class);
  builder.userData("mapping","child.prop2");
  builder.add("propBoolean",Boolean.class);
  builder.userData("mapping","child.prop3");
  builder.add("propFloat",Float.class);
  builder.userData("mapping","child.prop4");
  builder.add("propDouble",Double.class);
  builder.userData("mapping","child.prop5");
  builder.add("propByte",Byte.class);
  builder.userData("mapping","child.prop6");
  builder.add("propShort",Short.class);
  builder.userData("mapping","child.prop7");
  builder.add("propInteger",Integer.class);
  builder.userData("mapping","child.prop8");
  builder.add("propLong",Long.class);
  builder.userData("mapping","child.prop9");
  builder.add("propDate",Date.class);
  SimpleFeatureType original=builder.buildFeatureType();
  original.getUserData().put("sample-key","sample-value");
  return original;
}
