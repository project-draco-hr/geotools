{
  String pathname="";
  if (input instanceof URL) {
    final URL url=(URL)input;
    final String protocol=url.getProtocol();
    if (protocol.equalsIgnoreCase("file"))     pathname=DataUtilities.urlToFile(url).getPath();
 else {
      if (protocol.equalsIgnoreCase("http")) {
        final String query;
        try {
          query=java.net.URLDecoder.decode(url.getQuery().intern(),"UTF-8");
        }
 catch (        UnsupportedEncodingException e) {
          if (LOGGER.isLoggable(Level.FINE))           LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
          return false;
        }
        if (query.toLowerCase().intern().indexOf("getmap") == -1)         return false;
        return true;
      }
    }
  }
 else   if (input instanceof File) {
    File file=(File)input;
    pathname=file.getAbsolutePath();
  }
 else   if (input instanceof String)   pathname=(String)input;
 else   return false;
  if (!(pathname.endsWith(".gif") || pathname.endsWith(".jpg") || pathname.endsWith(".jpeg")|| pathname.endsWith(".tif")|| pathname.endsWith(".tiff")|| pathname.endsWith(".png")|| pathname.endsWith(".bmp"))) {
    return false;
  }
  final File source=new File(pathname);
  if (!source.exists())   return false;
  String suffix;
  String fileName;
  boolean answer=false;
  final File parentDir=source.getParentFile();
  if (parentDir != null) {
    final int dotIndex=pathname.lastIndexOf('.');
    if (dotIndex != -1) {
      fileName=pathname.substring(0,dotIndex);
      suffix=pathname.substring(dotIndex + 1,pathname.length());
      final Set<String> suffixes=WorldImageFormat.getWorldExtension(suffix);
      final Iterator<String> it=suffixes.iterator();
      StringBuffer buff=new StringBuffer(fileName);
      do {
        answer=new File(buff.append(it.next()).toString()).exists();
        buff=new StringBuffer(fileName);
      }
 while (!answer && it.hasNext());
      if (!answer) {
        buff.setLength(0);
        buff.append(fileName);
        buff.append(".wld");
        answer=new File(buff.toString()).exists();
      }
      if (!answer) {
        buff.setLength(0);
        buff.append(fileName);
        buff.append(".meta");
        answer=new File(buff.toString()).exists();
      }
    }
  }
  return answer;
}
