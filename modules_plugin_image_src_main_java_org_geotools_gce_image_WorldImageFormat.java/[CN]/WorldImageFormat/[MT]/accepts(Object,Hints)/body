{
  String pathname="";
  if (input instanceof URL) {
    final URL url=(URL)input;
    final String protocol=url.getProtocol();
    if (protocol.equalsIgnoreCase("file"))     pathname=DataUtilities.urlToFile(url).getPath();
 else {
      if (protocol.equalsIgnoreCase("http")) {
        final String query;
        try {
          query=java.net.URLDecoder.decode(url.getQuery().intern(),"UTF-8");
        }
 catch (        UnsupportedEncodingException e) {
          if (LOGGER.isLoggable(Level.FINE))           LOGGER.log(Level.FINE,e.getLocalizedMessage(),e);
          return false;
        }
        if (query.toLowerCase().intern().indexOf("getmap") == -1)         return false;
        return true;
      }
    }
  }
 else   if (input instanceof File) {
    File file=(File)input;
    pathname=file.getAbsolutePath();
  }
 else   if (input instanceof String)   pathname=(String)input;
 else   return false;
  if (!(pathname.endsWith(".gif") || pathname.endsWith(".jpg") || pathname.endsWith(".jpeg")|| pathname.endsWith(".tif")|| pathname.endsWith(".tiff")|| pathname.endsWith(".png")|| pathname.endsWith(".bmp"))) {
    return false;
  }
  try (ImageInputStream is=ImageIO.createImageInputStream(new File(pathname))){
    Iterator<ImageReader> readers=ImageIO.getImageReaders(is);
    return readers.hasNext();
  }
 catch (  IOException e) {
    return false;
  }
}
