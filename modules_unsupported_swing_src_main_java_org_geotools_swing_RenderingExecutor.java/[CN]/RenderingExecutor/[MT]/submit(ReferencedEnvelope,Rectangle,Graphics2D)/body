{
  if (!isRunning() || cancelLatch.getCount() > 0) {
    try {
      cancelLatch.await();
    }
 catch (    InterruptedException ex) {
      return false;
    }
    task=new Task(envelope,paintArea,graphics);
    taskRunning.set(true);
    taskResult=taskExecutor.submit(task);
    watcher=watchExecutor.scheduleAtFixedRate(new Runnable(){
      public void run(){
        pollTaskResult();
      }
    }
,DEFAULT_POLLING_INTERVAL,DEFAULT_POLLING_INTERVAL,TimeUnit.MILLISECONDS);
    return true;
  }
  return false;
}
