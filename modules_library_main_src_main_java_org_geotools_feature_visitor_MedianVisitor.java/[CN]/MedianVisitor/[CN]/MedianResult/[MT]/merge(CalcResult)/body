{
  if (!isCompatible(resultsToAdd)) {
    throw new IllegalArgumentException("Parameter is not a compatible type");
  }
  if (resultsToAdd == CalcResult.NULL_RESULT) {
    return this;
  }
  if (resultsToAdd instanceof MedianResult) {
    MedianResult moreResults=(MedianResult)resultsToAdd;
    if (isOptimized() || moreResults.isOptimized()) {
      throw new IllegalArgumentException("Optimized median results cannot be merged.");
    }
    List toAdd=(ArrayList)moreResults.getList();
    List newList=new ArrayList();
    int size=list.size() + toAdd.size();
    Object[] values=new Object[size];
    int i;
    for (i=0; i < list.size(); i++)     values[i]=list.get(i);
    for (int j=0; j < toAdd.size(); j++)     values[i + j]=toAdd.get(j);
    Class bestClass=CalcUtil.bestClass(values);
    for (int k=0; k < size; k++) {
      if (values[k].getClass() != bestClass)       values[k]=CalcUtil.convert(values[k],bestClass);
      newList.add((Comparable)values[k]);
    }
    return new MedianResult(newList);
  }
 else {
    throw new IllegalArgumentException("The CalcResults claim to be compatible, but the appropriate merge method has not been implemented.");
  }
}
