{
  isSameType(lower,"lower",upper,"upper",true);
  if (lower instanceof Integer)   return NumberCondition.between((Integer)lower,(Integer)upper);
 else   if (lower instanceof Double)   return NumberCondition.between((Double)lower,(Double)upper);
 else   if (lower instanceof Long)   return NumberCondition.between((Long)lower,(Long)upper);
 else   if (lower instanceof Float)   return NumberCondition.between((Float)lower,(Float)upper);
 else   if (lower instanceof Short)   return NumberCondition.between((Short)lower,(Short)upper);
 else   if (lower instanceof Byte)   return NumberCondition.between((Byte)lower,(Byte)upper);
  throw new EFeatureEncoderException("Type " + lower + " not supported");
}
