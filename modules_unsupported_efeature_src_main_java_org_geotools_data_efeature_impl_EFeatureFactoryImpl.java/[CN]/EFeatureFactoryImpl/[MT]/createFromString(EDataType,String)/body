{
switch (eDataType.getClassifierID()) {
case EFeaturePackage.PROPERTY:
    return createPropertyFromString(eDataType,initialValue);
case EFeaturePackage.ATTRIBUTE:
  return createAttributeFromString(eDataType,initialValue);
case EFeaturePackage.GEOMETRY:
return createGeometryFromString(eDataType,initialValue);
case EFeaturePackage.ESTRUCTURAL_FEATURE:
return createEStructuralFeatureFromString(eDataType,initialValue);
default :
throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
}
}
