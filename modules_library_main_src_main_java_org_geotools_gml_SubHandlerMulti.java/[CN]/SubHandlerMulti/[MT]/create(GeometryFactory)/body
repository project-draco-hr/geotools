{
  if (internalType.equals("Point")) {
    Point[] pointArray=geometryFactory.toPointArray(geometries);
    MultiPoint multiPoint=geometryFactory.createMultiPoint(pointArray);
    multiPoint.setUserData(getSRS());
    multiPoint.setSRID(getSRID());
    LOGGER.fine("created " + multiPoint);
    return multiPoint;
  }
 else   if (internalType.equals("LineString")) {
    LineString[] lineStringArray=geometryFactory.toLineStringArray(geometries);
    MultiLineString multiLineString=geometryFactory.createMultiLineString(lineStringArray);
    multiLineString.setUserData(getSRS());
    multiLineString.setSRID(getSRID());
    LOGGER.fine("created " + multiLineString);
    return multiLineString;
  }
 else   if (internalType.equals("Polygon")) {
    Polygon[] polygonArray=geometryFactory.toPolygonArray(geometries);
    MultiPolygon multiPolygon=geometryFactory.createMultiPolygon(polygonArray);
    multiPolygon.setUserData(getSRS());
    multiPolygon.setSRID(getSRID());
    LOGGER.fine("created " + multiPolygon);
    return multiPolygon;
  }
 else {
    return null;
  }
}
