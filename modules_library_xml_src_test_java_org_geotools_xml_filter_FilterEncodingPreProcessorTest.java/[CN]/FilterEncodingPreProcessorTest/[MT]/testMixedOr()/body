{
  FilterFactory2 factory=CommonFactoryFinder.getFilterFactory2(null);
  String fid1="FID.1";
  String fid2="FID.2";
  Filter filter=factory.or(createFidFilter(fid1),createFidFilter(fid2));
  Filter nullFilter=factory.isNull(factory.property("att"));
  filter=factory.or(filter,nullFilter);
  FilterEncodingPreProcessor visitor=new FilterEncodingPreProcessor(XMLHandlerHints.VALUE_FILTER_COMPLIANCE_LOW);
  filter.accept(visitor,null);
  assertEquals(filter,visitor.getFilter());
  Filter fidFilter=createFidFilter();
  assertEquals(fidFilter,visitor.getFidFilter());
  assertFalse(visitor.requiresPostProcessing());
  visitor=new FilterEncodingPreProcessor(XMLHandlerHints.VALUE_FILTER_COMPLIANCE_MEDIUM);
  filter.accept(visitor,null);
  assertEquals(nullFilter,visitor.getFilter());
  fidFilter=createFidFilter(fid1,fid2);
  assertEquals(fidFilter,visitor.getFidFilter());
  assertFalse(visitor.requiresPostProcessing());
  visitor=new FilterEncodingPreProcessor(XMLHandlerHints.VALUE_FILTER_COMPLIANCE_HIGH);
  try {
    filter.accept(visitor,null);
    fail("This is not a legal filter for this compliance level");
  }
 catch (  UnsupportedFilterException e) {
  }
}
