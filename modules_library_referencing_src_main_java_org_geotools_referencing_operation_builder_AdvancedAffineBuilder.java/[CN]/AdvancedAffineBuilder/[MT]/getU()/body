{
  GeneralMatrix U=new GeneralMatrix(valueConstrain.size(),1);
  int i=0;
  if (valueConstrain.containsKey(SX)) {
    U.setRow(i,new double[]{-sx + valueConstrain.get(SX)});
    i++;
  }
  if (valueConstrain.containsKey(SY)) {
    U.setRow(i,new double[]{-sy + valueConstrain.get(SY)});
    i++;
  }
  if (valueConstrain.containsKey(PHIX)) {
    U.setRow(i,new double[]{-phix + valueConstrain.get(PHIX)});
    i++;
  }
  if (valueConstrain.containsKey(PHIY)) {
    U.setRow(i,new double[]{-phiy + valueConstrain.get(PHIY)});
    i++;
  }
  if (valueConstrain.containsKey(TX)) {
    U.setRow(i,new double[]{-tx + valueConstrain.get(TX)});
    i++;
  }
  if (valueConstrain.containsKey(SXY)) {
    U.setRow(i,new double[]{(phix - phiy) + valueConstrain.get(SXY)});
    i++;
  }
 else   if (valueConstrain.containsKey(TY)) {
    U.setRow(i,new double[]{-ty + valueConstrain.get(TY)});
    i++;
  }
  return U;
}
