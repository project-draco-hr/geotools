{
  final GeometryFactory gf=dataStore.getGeometryFactory();
  Query query=new Query(tname("ft1"));
  FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(query,Transaction.AUTO_COMMIT);
  assertFeatureReader(0,3,reader,new SimpleFeatureAssertion(){
    public int toIndex(    SimpleFeature feature){
      return ((Number)feature.getAttribute(aname("intProperty"))).intValue();
    }
    public void check(    int index,    SimpleFeature feature){
      assertEquals(4,feature.getAttributeCount());
      Point p=gf.createPoint(new Coordinate(index,index));
      assertTrue(p.equalsExact((Geometry)feature.getAttribute(aname("geometry"))));
      Number ip=(Number)feature.getAttribute(aname("intProperty"));
      assertEquals(index,ip.intValue());
    }
  }
);
  query.setPropertyNames(new String[]{aname("intProperty")});
  reader=dataStore.getFeatureReader(query,Transaction.AUTO_COMMIT);
  for (int i=0; i < 3; i++) {
    assertTrue(reader.hasNext());
    SimpleFeature feature=reader.next();
    assertEquals(1,feature.getAttributeCount());
  }
  assertFalse(reader.hasNext());
  reader.close();
  FilterFactory ff=dataStore.getFilterFactory();
  Filter f=ff.equals(ff.property(aname("intProperty")),ff.literal(1));
  query.setFilter(f);
  reader=dataStore.getFeatureReader(query,Transaction.AUTO_COMMIT);
  for (int i=0; i < 1; i++) {
    assertTrue(reader.hasNext());
    SimpleFeature feature=reader.next();
  }
  assertFalse(reader.hasNext());
  reader.close();
}
