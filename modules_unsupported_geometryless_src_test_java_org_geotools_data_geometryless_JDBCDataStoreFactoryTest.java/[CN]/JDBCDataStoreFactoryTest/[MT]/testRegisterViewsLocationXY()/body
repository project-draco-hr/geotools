{
  Map params=new HashMap(this.local);
  DataStoreFactorySpi factory=new LocationsXYDataStoreFactory();
  params.put(LocationsXYDataStoreFactory.DBTYPE.key,"locationsxy");
  params.put(LocationsXYDataStoreFactory.XCOLUMN.key,"x");
  params.put(LocationsXYDataStoreFactory.YCOLUMN.key,"y");
  params.put(LocationsXYDataStoreFactory.GEOMNAME.key,"location");
  assertTrue(factory.canProcess(params));
  this.local=params;
  DataStore ds=testRegisterViews(factory);
  assertTrue(ds instanceof LocationsXYDataStore);
  FeatureSource<SimpleFeatureType,SimpleFeature> fs=ds.getFeatureSource("ViewType1");
  assertNotNull(fs);
  SimpleFeatureType schema=fs.getSchema();
  assertNotNull(schema);
  GeometryDescriptor defaultGeometry=(GeometryDescriptor)schema.getGeometryDescriptor();
  assertNotNull("No default geometry: " + schema.toString(),defaultGeometry);
  assertEquals("location",defaultGeometry.getName().getLocalPart());
  FeatureCollection<SimpleFeatureType,SimpleFeature> features=fs.getFeatures();
  assertNotNull(features);
  FeatureIterator<SimpleFeature> iterator=features.features();
  while (iterator.hasNext()) {
    SimpleFeature next=iterator.next();
    assertNotNull(next);
    Object location=next.getAttribute("location");
    assertNotNull(location);
    assertTrue(location instanceof Point);
  }
  features.close(iterator);
}
