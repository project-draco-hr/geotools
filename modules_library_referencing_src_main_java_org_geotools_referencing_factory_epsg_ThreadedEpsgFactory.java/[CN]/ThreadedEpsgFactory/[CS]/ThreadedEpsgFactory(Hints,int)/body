{
  super(userHints,priority);
  Object hint=(userHints == null) ? null : userHints.get(Hints.EPSG_DATA_SOURCE);
  if (hint == null) {
    datasourceName=DATASOURCE_NAME;
    hints.put(Hints.EPSG_DATA_SOURCE,datasourceName);
  }
 else   if (hint instanceof String) {
    datasourceName=(String)hint;
    hints.put(Hints.EPSG_DATA_SOURCE,datasourceName);
  }
 else   if (hint instanceof Name) {
    Name name=(Name)hint;
    hints.put(Hints.EPSG_DATA_SOURCE,name);
    datasourceName=name.toString();
  }
 else   if (hint instanceof DataSource) {
    datasource=(DataSource)hint;
    hints.put(Hints.EPSG_DATA_SOURCE,datasource);
    datasourceName=DATASOURCE_NAME;
    dynamicDataSource=false;
  }
  factories=ReferencingFactoryContainer.instance(userHints);
  long timeout=30 * 60 * 1000;
  String defaultTimeout=System.getProperty("org.geotools.epsg.factory.timeout",String.valueOf(30 * 60 * 1000));
  try {
    timeout=Long.valueOf(defaultTimeout);
  }
 catch (  NumberFormatException e) {
    LOGGER.log(Level.WARNING,"Invalid value for org.geotools.epsg.factory.timeout, " + "using the default (30 minutes) instead");
  }
  if (timeout > 0) {
    LOGGER.log(Level.FINE,"Setting the EPSG factory " + getClass().getName() + " to a "+ timeout+ "ms timeout");
    setTimeout(timeout);
  }
 else {
    LOGGER.log(Level.FINE,"The EPSG factory " + getClass().getName() + " will not timeout");
  }
}
