{
  Expression property=ff.property("gsml:composition/gsml:CompositionPart/gsml:proportion/gsml:CGI_TermValue/gsml:value");
  Filter filter=ff.like(property,"significant");
  FeatureCollection<FeatureType,Feature> filteredResults=guFeatureSource.getFeatures(filter);
  assertEquals(2,size(filteredResults));
  mfDataAccess.dispose();
  Map<String,Serializable> dsParams=new HashMap<String,Serializable>();
  URL url=getClass().getResource(schemaBase + "MappedFeaturePropertyfile.xml");
  assertNotNull(url);
  dsParams.put("dbtype","app-schema");
  dsParams.put("url",url.toExternalForm());
  mfDataAccess=DataAccessFinder.getDataStore(dsParams);
  assertNotNull(mfDataAccess);
  FeatureSource<FeatureType,Feature> mfSource=mfDataAccess.getFeatureSource(MAPPED_FEATURE);
  property=ff.property("gsml:specification/gsml:GeologicUnit/gsml:bodyMorphology/gsml:CGI_TermValue/gsml:value");
  filter=ff.like(property,"vein");
  filteredResults=mfSource.getFeatures(filter);
  assertEquals(2,size(filteredResults));
}
