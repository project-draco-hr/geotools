{
  if (!super.parseArgs(args))   return false;
  sourcePath=(String)getOptionValue(locationOpt);
  if (hasOption(tileDimOpt)) {
    final String tileDim=(String)getOptionValue(tileDimOpt);
    final String[] pairs=tileDim.split(",");
    tileW=Integer.parseInt(pairs[0]);
    if (pairs.length > 1) {
      tileH=Integer.parseInt(pairs[1]);
    }
 else {
      tileH=tileW;
    }
  }
  final String scaleF=(String)getOptionValue(scaleFactorOpt);
  downsampleStep=Integer.parseInt(scaleF);
  if (hasOption(wildcardOpt))   wildcardString=(String)getOptionValue(wildcardOpt);
  if (hasOption(externalOpt))   external=Boolean.parseBoolean((String)getOptionValue(externalOpt));
  scaleAlgorithm=(String)getOptionValue(scaleAlgorithmOpt);
  if (scaleAlgorithm == null)   scaleAlgorithm="nn";
  numSteps=Integer.parseInt((String)getOptionValue(numStepsOpt));
  if (hasOption(compressionTypeOpt)) {
    compressionScheme=(String)getOptionValue(compressionTypeOpt);
    if (compressionScheme == "")     compressionScheme=null;
  }
  if (hasOption(compressionRatioOpt)) {
    try {
      compressionRatio=Double.parseDouble((String)getOptionValue(compressionRatioOpt));
    }
 catch (    Exception e) {
      compressionRatio=Double.NaN;
    }
  }
  return true;
}
