{
  return new ResourceInfo(){
    public ReferencedEnvelope getBounds(){
      try {
        return ds.getBounds(new Query(fname));
      }
 catch (      IOException e) {
        return new ReferencedEnvelope();
      }
    }
    public CoordinateReferenceSystem getCRS(){
      try {
        return CRS.decode(featureSetDescription.getSRS());
      }
 catch (      NoSuchAuthorityCodeException e) {
        LOGGER.log(Level.INFO,e.getMessage(),e);
      }
catch (      FactoryException e) {
        LOGGER.log(Level.INFO,e.getMessage(),e);
      }
      return null;
    }
    public String getDescription(){
      return featureSetDescription.getAbstract();
    }
    public Set<String> getKeywords(){
      return extractKeywords(featureSetDescription.getKeywords());
    }
    @SuppressWarnings("unchecked") private Set<String> extractKeywords(    List<?> keywordsList){
      Set<String> keywords=new HashSet<String>();
      if (keywordsList != null) {
        for (        Object keys : keywordsList) {
          if (keys instanceof KeywordsType) {
            List<String> kws=((KeywordsType)keys).getKeyword();
            for (            String kw : kws) {
              if (kw != null && kw.trim().length() > 0) {
                keywords.add(kw);
              }
            }
          }
 else           if (keys instanceof String) {
            keywords.add((String)keys);
          }
        }
      }
      return keywords;
    }
    public String getName(){
      return fname;
    }
    @SuppressWarnings("deprecation") public URI getSchema(){
      try {
        return ds.protocolHandler.getDescribeFeatureTypeURLGet(fname).toURI();
      }
 catch (      MalformedURLException e) {
        return null;
      }
catch (      URISyntaxException e) {
        return null;
      }
    }
    public String getTitle(){
      String title=featureSetDescription.getTitle();
      if (null == title || title.trim().length() == 0) {
        title=getName();
      }
      return title;
    }
  }
;
}
