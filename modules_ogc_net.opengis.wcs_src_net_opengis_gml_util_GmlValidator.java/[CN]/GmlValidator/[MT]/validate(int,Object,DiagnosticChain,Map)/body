{
switch (classifierID) {
case GmlPackage.ABSTRACT_GEOMETRIC_PRIMITIVE_TYPE:
    return validateAbstractGeometricPrimitiveType((AbstractGeometricPrimitiveType)value,diagnostics,context);
case GmlPackage.ABSTRACT_GEOMETRY_BASE_TYPE:
  return validateAbstractGeometryBaseType((AbstractGeometryBaseType)value,diagnostics,context);
case GmlPackage.ABSTRACT_GEOMETRY_TYPE:
return validateAbstractGeometryType((AbstractGeometryType)value,diagnostics,context);
case GmlPackage.ABSTRACT_GML_TYPE:
return validateAbstractGMLType((AbstractGMLType)value,diagnostics,context);
case GmlPackage.ABSTRACT_META_DATA_TYPE:
return validateAbstractMetaDataType((AbstractMetaDataType)value,diagnostics,context);
case GmlPackage.ABSTRACT_RING_PROPERTY_TYPE:
return validateAbstractRingPropertyType((AbstractRingPropertyType)value,diagnostics,context);
case GmlPackage.ABSTRACT_RING_TYPE:
return validateAbstractRingType((AbstractRingType)value,diagnostics,context);
case GmlPackage.ABSTRACT_SURFACE_TYPE:
return validateAbstractSurfaceType((AbstractSurfaceType)value,diagnostics,context);
case GmlPackage.BOUNDING_SHAPE_TYPE:
return validateBoundingShapeType((BoundingShapeType)value,diagnostics,context);
case GmlPackage.CODE_LIST_TYPE:
return validateCodeListType((CodeListType)value,diagnostics,context);
case GmlPackage.CODE_TYPE:
return validateCodeType((CodeType)value,diagnostics,context);
case GmlPackage.DIRECT_POSITION_TYPE:
return validateDirectPositionType((DirectPositionType)value,diagnostics,context);
case GmlPackage.DOCUMENT_ROOT:
return validateDocumentRoot((DocumentRoot)value,diagnostics,context);
case GmlPackage.ENVELOPE_TYPE:
return validateEnvelopeType((EnvelopeType)value,diagnostics,context);
case GmlPackage.ENVELOPE_WITH_TIME_PERIOD_TYPE:
return validateEnvelopeWithTimePeriodType((EnvelopeWithTimePeriodType)value,diagnostics,context);
case GmlPackage.GRID_ENVELOPE_TYPE:
return validateGridEnvelopeType((GridEnvelopeType)value,diagnostics,context);
case GmlPackage.GRID_LIMITS_TYPE:
return validateGridLimitsType((GridLimitsType)value,diagnostics,context);
case GmlPackage.GRID_TYPE:
return validateGridType((GridType)value,diagnostics,context);
case GmlPackage.LINEAR_RING_TYPE:
return validateLinearRingType((LinearRingType)value,diagnostics,context);
case GmlPackage.META_DATA_PROPERTY_TYPE:
return validateMetaDataPropertyType((MetaDataPropertyType)value,diagnostics,context);
case GmlPackage.POINT_TYPE:
return validatePointType((PointType)value,diagnostics,context);
case GmlPackage.POLYGON_TYPE:
return validatePolygonType((PolygonType)value,diagnostics,context);
case GmlPackage.RECTIFIED_GRID_TYPE:
return validateRectifiedGridType((RectifiedGridType)value,diagnostics,context);
case GmlPackage.REFERENCE_TYPE:
return validateReferenceType((ReferenceType)value,diagnostics,context);
case GmlPackage.STRING_OR_REF_TYPE:
return validateStringOrRefType((StringOrRefType)value,diagnostics,context);
case GmlPackage.TIME_POSITION_TYPE:
return validateTimePositionType((TimePositionType)value,diagnostics,context);
case GmlPackage.VECTOR_TYPE:
return validateVectorType((VectorType)value,diagnostics,context);
case GmlPackage.TIME_INDETERMINATE_VALUE_TYPE:
return validateTimeIndeterminateValueType((TimeIndeterminateValueType)value,diagnostics,context);
case GmlPackage.DOUBLE_LIST:
return validateDoubleList((List)value,diagnostics,context);
case GmlPackage.INTEGER_LIST:
return validateIntegerList((List)value,diagnostics,context);
case GmlPackage.NAME_LIST:
return validateNameList((List)value,diagnostics,context);
case GmlPackage.TEMPORAL_POSITION_TYPE:
return validateTemporalPositionType(value,diagnostics,context);
case GmlPackage.TIME_DURATION_TYPE:
return validateTimeDurationType(value,diagnostics,context);
case GmlPackage.TIME_INDETERMINATE_VALUE_TYPE_OBJECT:
return validateTimeIndeterminateValueTypeObject((TimeIndeterminateValueType)value,diagnostics,context);
case GmlPackage.VECTOR_TYPE_BASE:
return validateVectorTypeBase((List)value,diagnostics,context);
case GmlPackage.GRID_ENVELOPE:
return validateGridEnvelope((GridEnvelope)value,diagnostics,context);
default :
return true;
}
}
