{
  if (diagnostics != null) {
    BasicDiagnostic tempDiagnostics=new BasicDiagnostic();
    if (XMLTypePackage.Literals.DATE_TIME.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateDateTime(temporalPositionType,tempDiagnostics,context))       return true;
    }
    if (XMLTypePackage.Literals.DATE.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateDate(temporalPositionType,tempDiagnostics,context))       return true;
    }
    if (XMLTypePackage.Literals.GYEAR_MONTH.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateGYearMonth(temporalPositionType,tempDiagnostics,context))       return true;
    }
    if (XMLTypePackage.Literals.GYEAR.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateGYear(temporalPositionType,tempDiagnostics,context))       return true;
    }
    if (XMLTypePackage.Literals.ANY_URI.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateAnyURI((String)temporalPositionType,tempDiagnostics,context))       return true;
    }
    if (XMLTypePackage.Literals.DECIMAL.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateDecimal((BigDecimal)temporalPositionType,tempDiagnostics,context))       return true;
    }
    List children=tempDiagnostics.getChildren();
    for (int i=0; i < children.size(); i++) {
      diagnostics.add((Diagnostic)children.get(i));
    }
  }
 else {
    if (XMLTypePackage.Literals.DATE_TIME.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateDateTime(temporalPositionType,null,context))       return true;
    }
    if (XMLTypePackage.Literals.DATE.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateDate(temporalPositionType,null,context))       return true;
    }
    if (XMLTypePackage.Literals.GYEAR_MONTH.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateGYearMonth(temporalPositionType,null,context))       return true;
    }
    if (XMLTypePackage.Literals.GYEAR.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateGYear(temporalPositionType,null,context))       return true;
    }
    if (XMLTypePackage.Literals.ANY_URI.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateAnyURI((String)temporalPositionType,null,context))       return true;
    }
    if (XMLTypePackage.Literals.DECIMAL.isInstance(temporalPositionType)) {
      if (xmlTypeValidator.validateDecimal((BigDecimal)temporalPositionType,null,context))       return true;
    }
  }
  return false;
}
