{
  final int postIncrement;
  if (srcPts == dstPts && srcOff < dstOff) {
    srcOff+=(numPts - 1) * 2;
    dstOff+=(numPts - 1) * 2;
    postIncrement=-4;
  }
 else {
    postIncrement=0;
  }
  final Point2D.Float ptSrc=new PointFloat();
  final float[] ptDst=new float[2];
  while (--numPts >= 0) {
    ptSrc.x=srcPts[srcOff++] - 0.5f;
    ptSrc.y=srcPts[srcOff++] - 0.5f;
    final Point2D result=warp.mapDestPoint(ptSrc);
    dstPts[dstOff++]=(float)(result.getX() + 0.5);
    dstPts[dstOff++]=(float)(result.getY() + 0.5);
    dstOff+=postIncrement;
  }
}
