{
  if (warp instanceof WarpPolynomial) {
    final WarpPolynomial poly=(WarpPolynomial)warp;
    final ParameterValue[] p=new ParameterValue[7];
    int c=0;
    p[c++]=new Parameter(Provider.DEGREE,Integer.valueOf(poly.getDegree()));
    p[c++]=new Parameter(Provider.X_COEFFS,poly.getXCoeffs());
    p[c++]=new Parameter(Provider.Y_COEFFS,poly.getYCoeffs());
    float s;
    if ((s=poly.getPreScaleX()) != 1)     p[c++]=new Parameter(Provider.PRE_SCALE_X,s);
    if ((s=poly.getPreScaleY()) != 1)     p[c++]=new Parameter(Provider.PRE_SCALE_Y,s);
    if ((s=poly.getPostScaleX()) != 1)     p[c++]=new Parameter(Provider.POST_SCALE_X,s);
    if ((s=poly.getPostScaleY()) != 1)     p[c++]=new Parameter(Provider.POST_SCALE_Y,s);
    return new ParameterGroup(getParameterDescriptors(),XArray.resize(p,c));
  }
 else {
    return super.getParameterValues();
  }
}
