{
  if (url == null)   return;
  try {
    System.out.println("FeatureReaderWithFilterTest + " + url);
    WFS_1_0_0_DataStore wfs=getDataStore(url);
    assertNotNull("No featureTypes",wfs.getTypeNames());
    assertNotNull("Null featureType in [0]",wfs.getTypeNames()[i]);
    SimpleFeatureType ft=wfs.getSchema(wfs.getTypeNames()[i]);
    String[] props;
    props=new String[]{ft.getGeometryDescriptor().getLocalName()};
    Query query=new Query(ft.getTypeName());
    query.setPropertyNames(props);
    String fid=null;
    if (get) {
      FeatureReader<SimpleFeatureType,SimpleFeature> fr=wfs.getFeatureReaderGet(query,Transaction.AUTO_COMMIT);
      try {
        assertNotNull("FeatureType was null",ft);
        SimpleFeatureType featureType=fr.getFeatureType();
        if (ft.getAttributeCount() > 1) {
          assertEquals("Query must restrict feature type to only having 1 AttributeType",1,featureType.getAttributeCount());
        }
        assertTrue("must have 1 feature -- fair assumption",fr.hasNext() && featureType != null);
        SimpleFeature feature=fr.next();
        featureType=feature.getFeatureType();
        if (ft.getAttributeCount() > 1) {
          assertEquals("Query must restrict feature type to only having 1 AttributeType",1,featureType.getAttributeCount());
        }
        assertNotNull("must have 1 feature ",feature);
        fid=feature.getID();
        int j=0;
        while (fr.hasNext()) {
          fr.next();
          j++;
        }
        System.out.println(j + " Features");
      }
  finally {
        fr.close();
      }
    }
    if (post) {
      FeatureReader<SimpleFeatureType,SimpleFeature> fr=wfs.getFeatureReaderPost(query,Transaction.AUTO_COMMIT);
      try {
        assertNotNull("FeatureType was null",ft);
        SimpleFeatureType featureType=fr.getFeatureType();
        if (ft.getAttributeCount() > 1) {
          assertEquals("Query must restrict feature type to only having 1 AttributeType",1,featureType.getAttributeCount());
        }
        assertTrue("must have 1 feature -- fair assumption",fr.hasNext() && featureType != null);
        SimpleFeature feature=fr.next();
        featureType=feature.getFeatureType();
        if (ft.getAttributeCount() > 1) {
          assertEquals("Query must restrict feature type to only having 1 AttributeType",1,featureType.getAttributeCount());
        }
        assertNotNull("must have 1 feature ",feature);
        fid=feature.getID();
        int j=0;
        while (fr.hasNext()) {
          fr.next();
          j++;
        }
        System.out.println(j + " Features");
      }
  finally {
        fr.close();
      }
    }
    FilterFactory2 ff=CommonFactoryFinder.getFilterFactory2();
    query.setFilter(ff.id(ff.featureId(fid)));
    if (get) {
      FeatureReader<SimpleFeatureType,SimpleFeature> fr=wfs.getFeatureReaderGet(query,Transaction.AUTO_COMMIT);
      try {
        assertNotNull("FeatureType was null",ft);
        int j=0;
        while (fr.hasNext()) {
          assertEquals(fid,fr.next().getID());
          j++;
        }
        assertEquals(1,j);
      }
  finally {
        fr.close();
      }
    }
    if (post) {
      FeatureReader<SimpleFeatureType,SimpleFeature> fr=wfs.getFeatureReaderPost(query,Transaction.AUTO_COMMIT);
      try {
        assertNotNull("FeatureType was null",ft);
        int j=0;
        while (fr.hasNext()) {
          assertEquals(fid,fr.next().getID());
          j++;
        }
        assertEquals(1,j);
      }
  finally {
        fr.close();
      }
    }
  }
 catch (  java.net.SocketException se) {
    se.printStackTrace();
  }
}
