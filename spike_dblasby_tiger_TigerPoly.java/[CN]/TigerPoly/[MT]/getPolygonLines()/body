{
  FilterFactory ff=FilterFactory.createFilterFactory();
  CompareFilter cf=ff.createCompareFilter(FilterType.COMPARE_EQUALS);
  cf.addLeftValue(ff.createAttributeExpression(null,"module"));
  cf.addRightValue(ff.createLiteralExpression(MODULE));
  String[] ps=new String[]{"polyidl","polyidr","tlid"};
  Query q=new DefaultQuery("polychainlink",cf,ps);
  FeatureReader fr=ds.getFeatureReader(q,new DefaultTransaction());
  while (fr.hasNext()) {
    Feature f=fr.next();
    f.getFeatureType();
    BigDecimal polyidlBD=(BigDecimal)f.getAttribute(0);
    BigDecimal polyidrBD=(BigDecimal)f.getAttribute(1);
    BigDecimal tlidBD=(BigDecimal)f.getAttribute(2);
    if (tlidBD == null)     throw new Exception("polylink has null tlid");
    if ((polyidlBD == null) && (polyidrBD == null))     throw new Exception("polylink has 2 null polyids");
    boolean one_null=((polyidlBD == null) || (polyidrBD == null));
    if (one_null || (polyidlBD.longValue() != polyidrBD.longValue())) {
      if (polyidlBD != null)       addToPolylineset(tlidBD,polyidlBD);
      if (polyidrBD != null)       addToPolylineset(tlidBD,polyidrBD);
    }
  }
  fr.close();
}
