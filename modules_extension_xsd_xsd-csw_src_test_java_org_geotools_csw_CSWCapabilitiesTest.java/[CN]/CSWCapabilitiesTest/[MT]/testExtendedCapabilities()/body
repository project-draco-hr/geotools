{
  Csw20Factory cswf=Csw20Factory.eINSTANCE;
  Ows10Factory owsf=Ows10Factory.eINSTANCE;
  CapabilitiesType caps=cswf.createCapabilitiesType();
  OperationsMetadataType om=owsf.createOperationsMetadataType();
  caps.setOperationsMetadata(om);
  final String rimNamespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0";
  om.setExtendedCapabilities(new EncoderDelegate(){
    @Override public void encode(    ContentHandler output) throws Exception {
      AttributesImpl atts=new AttributesImpl();
      output.startPrefixMapping("rim",rimNamespace);
      atts.addAttribute(rimNamespace,"test","rim:test","xs:string","test");
      output.startElement(rimNamespace,"Slot","rim:Slot",atts);
      String content="test content";
      output.characters(content.toCharArray(),0,content.length());
      output.endElement(rimNamespace,"test","rim:test");
      output.endPrefixMapping("rim");
    }
  }
);
  Encoder encoder=new Encoder(new CSWConfiguration());
  encoder.setIndenting(true);
  encoder.setNamespaceAware(true);
  encoder.getNamespaces().declarePrefix("ows",OWS.NAMESPACE);
  encoder.getNamespaces().declarePrefix("ogc",OGC.NAMESPACE);
  encoder.getNamespaces().declarePrefix("gml",GML.NAMESPACE);
  String encoded=encoder.encodeAsString(caps,CSW.Capabilities);
  Map<String,String> namespaces=new HashMap<String,String>();
  namespaces.put("csw",CSW.NAMESPACE);
  namespaces.put("ows",OWS.NAMESPACE);
  namespaces.put("rim",rimNamespace);
  XMLUnit.setXpathNamespaceContext(new SimpleNamespaceContext(namespaces));
  Document doc=XMLUnit.buildControlDocument(encoded);
  XMLAssert.assertXpathEvaluatesTo("test","/csw:Capabilities/ows:OperationsMetadata/rim:Slot/@rim:test",doc);
  XMLAssert.assertXpathEvaluatesTo("test content","/csw:Capabilities/ows:OperationsMetadata/rim:Slot",doc);
}
