{
  Object result=null;
switch (type) {
case DATA_TEXT:
case DATA_LEVEL1_TEXT:
case DATA_LEVEL2_TEXT:
case DATA_LEVEL3_TEXT:
    StringBuffer sb=new StringBuffer(bytes.length);
  for (int i=0; i < bytes.length; i++) {
    sb.append((char)bytes[i]);
  }
boolean isNull=false;
for (int i=0; i < STRING_NULL_VALUES.length; i++) {
isNull|=sb.toString().trim().equalsIgnoreCase(STRING_NULL_VALUES[i]);
}
if (isNull) {
result=null;
}
 else {
result=sb.toString().trim();
}
break;
case DATA_SHORT_FLOAT:
result=new Float(decodeFloat(bytes));
break;
case DATA_LONG_FLOAT:
result=new Double(decodeDouble(bytes));
break;
case DATA_SHORT_INTEGER:
result=new Short(decodeShort(bytes));
break;
case DATA_LONG_INTEGER:
result=new Integer(decodeInt(bytes));
break;
case DATA_2_COORD_F:
case DATA_2_COORD_R:
case DATA_3_COORD_F:
case DATA_3_COORD_R:
{
throw new RuntimeException("If this code is actually being used, replace it with equivalent code from VPFFile.");
}
case DATA_DATE_TIME:
result=new VPFDate(bytes);
break;
case DATA_NULL_FIELD:
break;
case DATA_TRIPLET_ID:
default :
break;
}
return result;
}
