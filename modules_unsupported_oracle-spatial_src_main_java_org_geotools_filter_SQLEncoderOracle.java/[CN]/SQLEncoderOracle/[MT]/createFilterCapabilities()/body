{
  FilterCapabilities capabilities=new FilterCapabilities();
  capabilities.addType(FilterCapabilities.LOGICAL);
  capabilities.addAll(FilterCapabilities.LOGICAL_OPENGIS);
  capabilities.addType(FilterCapabilities.SIMPLE_COMPARISONS);
  capabilities.addAll(FilterCapabilities.SIMPLE_COMPARISONS_OPENGIS);
  capabilities.addType(FilterCapabilities.NULL_CHECK);
  capabilities.addType(PropertyIsNull.class);
  capabilities.addType(FilterCapabilities.BETWEEN);
  capabilities.addType(PropertyIsBetween.class);
  capabilities.addType(FilterCapabilities.FID);
  capabilities.addType(Id.class);
  capabilities.addType(FilterCapabilities.NONE);
  capabilities.addType(IncludeFilter.class);
  capabilities.addType(FilterCapabilities.ALL);
  capabilities.addType(ExcludeFilter.class);
  capabilities.addType(FilterCapabilities.LIKE);
  capabilities.addType(PropertyIsLike.class);
  capabilities.addType(FilterCapabilities.SPATIAL_BBOX);
  capabilities.addType(BBOX.class);
  capabilities.addType(FilterCapabilities.SPATIAL_CONTAINS);
  capabilities.addType(Contains.class);
  capabilities.addType(FilterCapabilities.SPATIAL_CROSSES);
  capabilities.addType(Crosses.class);
  capabilities.addType(FilterCapabilities.SPATIAL_DISJOINT);
  capabilities.addType(Disjoint.class);
  capabilities.addType(FilterCapabilities.SPATIAL_EQUALS);
  capabilities.addType(Equals.class);
  capabilities.addType(FilterCapabilities.SPATIAL_INTERSECT);
  capabilities.addType(Intersects.class);
  capabilities.addType(FilterCapabilities.SPATIAL_OVERLAPS);
  capabilities.addType(Overlaps.class);
  capabilities.addType(FilterCapabilities.SPATIAL_TOUCHES);
  capabilities.addType(Touches.class);
  capabilities.addType(FilterCapabilities.SPATIAL_WITHIN);
  capabilities.addType(Within.class);
  capabilities.addType(FilterCapabilities.SPATIAL_DWITHIN);
  capabilities.addType(DWithin.class);
  capabilities.addType(FilterCapabilities.SPATIAL_BEYOND);
  capabilities.addType(Beyond.class);
  return capabilities;
}
