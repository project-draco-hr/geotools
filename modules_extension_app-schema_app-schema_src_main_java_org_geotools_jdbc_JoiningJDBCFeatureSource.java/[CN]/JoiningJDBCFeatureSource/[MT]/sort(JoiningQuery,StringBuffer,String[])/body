{
  boolean orderby=false;
  for (int j=query.getQueryJoins() == null ? -1 : query.getQueryJoins().size() - 1; j >= -1; j--) {
    JoiningQuery.QueryJoin join=j < 0 ? null : query.getQueryJoins().get(j);
    SortBy[] sort=j < 0 ? query.getSortBy() : join.getSortBy();
    if ((sort != null) && (sort.length > 0)) {
      if (!orderby) {
        orderby=true;
        sql.append(" ORDER BY ");
      }
      if (j < 0) {
        sort(query.getTypeName(),sort,sql,false);
        if (query.getQueryJoins() != null && query.getQueryJoins().size() > 0) {
          addMultiValuedSort(query.getTypeName(),sort,sql,query.getQueryJoins().get(0));
        }
      }
 else {
        if (aliases != null && aliases[j] != null) {
          sort(aliases[j],sort,sql,true);
        }
 else {
          sort(join.getJoiningTypeName(),sort,sql,false);
        }
        if (query.getQueryJoins().size() > j + 1) {
          addMultiValuedSort(join.getJoiningTypeName(),sort,sql,query.getQueryJoins().get(j + 1));
        }
      }
    }
  }
  if (orderby) {
    sql.setLength(sql.length() - 1);
  }
}
