{
  fireEvent(Level.INFO,"Creating final properties file ",99.9);
  final Properties properties=new Properties();
  properties.setProperty(Utils.Prop.ABSOLUTE_PATH,Boolean.toString(mosaicConfiguration.isAbsolutePath()));
  properties.setProperty(Utils.Prop.LOCATION_ATTRIBUTE,mosaicConfiguration.getLocationAttribute());
  final String timeAttribute=mosaicConfiguration.getTimeAttribute();
  if (timeAttribute != null) {
    properties.setProperty(Utils.Prop.TIME_ATTRIBUTE,mosaicConfiguration.getTimeAttribute());
  }
  final String elevationAttribute=mosaicConfiguration.getElevationAttribute();
  if (elevationAttribute != null) {
    properties.setProperty(Utils.Prop.ELEVATION_ATTRIBUTE,mosaicConfiguration.getElevationAttribute());
  }
  final int numberOfLevels=mosaicConfiguration.getLevelsNum();
  final double[][] resolutionLevels=mosaicConfiguration.getLevels();
  properties.setProperty(Utils.Prop.LEVELS_NUM,Integer.toString(numberOfLevels));
  final StringBuilder levels=new StringBuilder();
  for (int k=0; k < numberOfLevels; k++) {
    levels.append(Double.toString(resolutionLevels[0][k])).append(",").append(Double.toString(resolutionLevels[1][k]));
    if (k < numberOfLevels - 1)     levels.append(" ");
  }
  properties.setProperty(Utils.Prop.LEVELS,levels.toString());
  properties.setProperty(Utils.Prop.NAME,mosaicConfiguration.getName());
  properties.setProperty(Utils.Prop.TYPENAME,mosaicConfiguration.getName());
  properties.setProperty(Utils.Prop.EXP_RGB,Boolean.toString(mustConvertToRGB));
  properties.setProperty(Utils.Prop.HETEROGENEOUS,Boolean.toString(mosaicConfiguration.isHeterogeneous()));
  if (cachedReaderSPI != null) {
    properties.setProperty(Utils.Prop.SUGGESTED_SPI,cachedReaderSPI.getClass().getName());
  }
  if (imposedBBox != null) {
    properties.setProperty(Utils.Prop.ENVELOPE2D,imposedBBox.getMinX() + "," + imposedBBox.getMinY()+ " "+ imposedBBox.getMaxX()+ ","+ imposedBBox.getMaxY());
  }
  properties.setProperty(Utils.Prop.CACHING,Boolean.toString(mosaicConfiguration.isCaching()));
  OutputStream outStream=null;
  try {
    outStream=new BufferedOutputStream(new FileOutputStream(runConfiguration.getRootMosaicDirectory() + "/" + runConfiguration.getIndexName()+ ".properties"));
    properties.store(outStream,"-Automagically created from GeoTools-");
  }
 catch (  FileNotFoundException e) {
    fireEvent(Level.SEVERE,e.getLocalizedMessage(),0);
  }
catch (  IOException e) {
    fireEvent(Level.SEVERE,e.getLocalizedMessage(),0);
  }
 finally {
    if (outStream != null) {
      IOUtils.closeQuietly(outStream);
    }
  }
}
