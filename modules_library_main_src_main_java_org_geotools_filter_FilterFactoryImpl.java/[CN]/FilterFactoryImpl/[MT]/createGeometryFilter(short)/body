{
switch (filterType) {
case FilterType.GEOMETRY_EQUALS:
    return new EqualsImpl(this,null,null);
case FilterType.GEOMETRY_DISJOINT:
  return new DisjointImpl(this,null,null);
case FilterType.GEOMETRY_DWITHIN:
return new DWithinImpl(this,null,null);
case FilterType.GEOMETRY_INTERSECTS:
return new IntersectsImpl(this,null,null);
case FilterType.GEOMETRY_CROSSES:
return new CrossesImpl(this,null,null);
case FilterType.GEOMETRY_WITHIN:
return new WithinImpl(this,null,null);
case FilterType.GEOMETRY_CONTAINS:
return new ContainsImpl(this,null,null);
case FilterType.GEOMETRY_OVERLAPS:
return new OverlapsImpl(this,null,null);
case FilterType.GEOMETRY_BEYOND:
return new BeyondImpl(this,null,null);
case FilterType.GEOMETRY_BBOX:
return new BBOXImpl(this,null,null);
case FilterType.GEOMETRY_TOUCHES:
return new TouchesImpl(this,null,null);
}
throw new IllegalFilterException("Not one of the accepted spatial filter types.");
}
