{
  Geometry arg0;
  Geometry arg1;
  String arg2;
  try {
    arg0=getExpression(0).evaluate(feature,Geometry.class);
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Filter Function problem for function relatePattern argument #0 - expected type Geometry");
  }
  try {
    arg1=getExpression(1).evaluate(feature,Geometry.class);
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Filter Function problem for function relatePattern argument #1 - expected type Geometry");
  }
  try {
    arg2=getExpression(2).evaluate(feature,String.class);
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Filter Function problem for function relatePattern argument #2 - expected type String");
  }
  return new Boolean(StaticGeometry.relatePattern(arg0,arg1,arg2));
}
