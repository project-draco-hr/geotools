{
  if (collection instanceof RandomFeatureAccess) {
    RandomFeatureAccess random=(RandomFeatureAccess)collection;
    return random.getFeatureMember(id);
  }
 else   if (cacheFeatures) {
    SimpleFeature result=featureCache.get(id);
    if (result != null) {
      return result;
    }
    SimpleFeatureIterator it=collection.features();
    try {
      while (it.hasNext()) {
        SimpleFeature feature=it.next();
        featureCache.put(id,feature);
        if (id.equals(feature.getID())) {
          return feature;
        }
      }
    }
  finally {
      it.close();
    }
    throw new RuntimeException("Could not find feature with id " + id);
  }
 else {
    SimpleFeatureIterator it=collection.features();
    try {
      while (it.hasNext()) {
        SimpleFeature feature=it.next();
        if (id.equals(feature.getID())) {
          return feature;
        }
      }
    }
  finally {
      it.close();
    }
    throw new RuntimeException("Could not find feature with id " + id);
  }
}
