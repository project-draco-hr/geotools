{
  ParameterValueGroup param=MOSAIC.getParameters();
  List<GridCoverage2D> sources=new ArrayList<GridCoverage2D>(2);
  sources.add(coverage3);
  sources.add(coverage4);
  param.parameter("Sources").setValue(sources);
  GridCoverage2D mosaic=(GridCoverage2D)processor.doOperation(param);
  Assert.assertEquals(2,mosaic.getNumSampleDimensions());
  Envelope2D expected=coverage3.getEnvelope2D();
  expected.include(coverage4.getEnvelope2D());
  Envelope2D actual=mosaic.getEnvelope2D();
  assertEqualBBOX(expected,actual);
  double initialRes=calculateResolution(coverage3);
  double finalRes=calculateResolution(mosaic);
  double percentual=Math.abs(initialRes - finalRes) / initialRes;
  Assert.assertTrue(percentual < TOLERANCE);
  DirectPosition point=new DirectPosition2D(mosaic.getCoordinateReferenceSystem(),actual.getCenterX(),actual.getCenterY());
  double nodata=CoverageUtilities.getBackgroundValues(coverage1)[0];
  double result=((int[])mosaic.evaluate(point))[0];
  Assert.assertEquals(nodata,result,TOLERANCE);
  point=new DirectPosition2D(mosaic.getCoordinateReferenceSystem(),actual.getMinX() + finalRes,actual.getMinY() + finalRes);
  result=((int[])mosaic.evaluate(point))[0];
  Assert.assertNotEquals(nodata,result,TOLERANCE);
  mosaic.dispose(true);
  disposeCoveragePlanarImage(mosaic);
}
