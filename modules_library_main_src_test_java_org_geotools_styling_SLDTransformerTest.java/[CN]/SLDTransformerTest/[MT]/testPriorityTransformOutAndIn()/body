{
  StyleBuilder sb=new StyleBuilder();
  TextSymbolizer ts=sb.createTextSymbolizer();
  PropertyName literalPrio=CommonFactoryFinder.getFilterFactory2(null).property("quantVariable");
  ts.setPriority(literalPrio);
  Style style=sb.createStyle(ts);
  SLDTransformer st=new SLDTransformer();
  String firstExport=st.transform(style);
  SLDParser sldp=new SLDParser(CommonFactoryFinder.getStyleFactory(null));
  sldp.setInput(new StringReader(firstExport));
  Style[] firstImport=sldp.readXML();
  assertNotNull(firstImport[0]);
{
    Style reimportedStyle=firstImport[0];
    TextSymbolizer reimportedTs=(TextSymbolizer)reimportedStyle.featureTypeStyles().get(0).rules().get(0).symbolizers().get(0);
    assertNotNull(reimportedTs.getPriority());
    assertEquals("quantVariable",reimportedTs.getPriority().toString());
  }
{
    String secondExport=st.transform(firstImport);
    SLDParser sldp2=new SLDParser(CommonFactoryFinder.getStyleFactory(null));
    sldp2.setInput(new StringReader(secondExport));
    Style[] readXML=sldp2.readXML();
    Style reimportedStyle=readXML[0];
    TextSymbolizer reimportedTs=(TextSymbolizer)reimportedStyle.featureTypeStyles().get(0).rules().get(0).symbolizers().get(0);
    assertNotNull(reimportedTs.getPriority());
    assertEquals("quantVariable",reimportedTs.getPriority().toString());
  }
}
