{
  Composite composite=new Composite(parent,SWT.NONE);
  GridLayout layout=new GridLayout(2,false);
  composite.setLayout(layout);
  GridData gridData=new GridData();
  Label keywordsLabel=new Label(composite,SWT.NONE);
  keywordsLabel.setText(Messages.getString("CRSChooser_keywordsLabel"));
  keywordsLabel.setLayoutData(gridData);
  keywordsLabel.setToolTipText(Messages.getString("CRSChooser_tooltip"));
  gridData=new GridData(SWT.FILL,SWT.NONE,true,false);
  keywordsText=new Text(composite,SWT.SINGLE | SWT.BORDER);
  keywordsText.setLayoutData(gridData);
  keywordsText.setToolTipText(Messages.getString("CRSChooser_tooltip"));
  gridData=new GridData(SWT.FILL,SWT.NONE,true,false);
  gridData.horizontalSpan=2;
  Label editorLabel=new Label(composite,SWT.NONE);
  editorLabel.setText(Messages.getString("CRSChooser_label_crsWKT"));
  editorLabel.setLayoutData(gridData);
  gridData=new GridData(SWT.FILL,SWT.FILL,true,true);
  gridData.horizontalSpan=2;
  wktText=new Text(composite,SWT.MULTI | SWT.BORDER | SWT.V_SCROLL| SWT.H_SCROLL);
  if (selectedCRS != null)   wktText.setText(selectedCRS.toWKT());
  wktText.setLayoutData(gridData);
  wktText.addModifyListener(new ModifyListener(){
    public void modifyText(    ModifyEvent e){
      if (!keywordsText.isEnabled())       keywordsText.setEnabled(true);
    }
  }
);
  searchText.setFocus();
  return composite;
}
