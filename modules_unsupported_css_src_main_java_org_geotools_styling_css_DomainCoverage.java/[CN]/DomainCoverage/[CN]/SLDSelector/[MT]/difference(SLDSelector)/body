{
  List<SLDSelector> result=new ArrayList<>();
  if (!this.scaleRange.intersects(other.scaleRange)) {
    return Collections.singletonList(this);
  }
  NumberRange<?>[] scaleRangeDifferences=this.scaleRange.subtract(other.scaleRange);
  for (  NumberRange<?> scaleRangeDifference : scaleRangeDifferences) {
    result.add(new SLDSelector(scaleRangeDifference,this.filter));
  }
  NumberRange<?> scaleRangeIntersection=this.scaleRange.intersect(other.scaleRange);
  if (scaleRangeIntersection != null && !scaleRangeIntersection.isEmpty()) {
    And difference=FF.and(this.filter,FF.not(other.filter));
    Filter simplifiedDifference=simplify(difference);
    if (simplifiedDifference != Filter.EXCLUDE) {
      result.add(new SLDSelector(scaleRangeIntersection,simplifiedDifference));
    }
  }
  return result;
}
