{
  if (!testingEnabled()) {
    return;
  }
  File file=null;
  try {
    file=TestData.file(this,"sample.jp2");
  }
 catch (  FileNotFoundException fnfe) {
    LOGGER.warning("test-data not found: sample.jp2 \nTests are skipped");
    return;
  }
  final JP2KReader reader=new JP2KReader(file);
  checkReader(reader);
  final GeneralEnvelope envelope=reader.getOriginalEnvelope();
  final RasterManager manager=new RasterManager(reader);
  final ParameterValue<GridGeometry2D> gg=JP2KFormat.READ_GRIDGEOMETRY2D.createValue();
  final ParameterValue<Boolean> useJAI=JP2KFormat.USE_JAI_IMAGEREAD.createValue();
  useJAI.setValue(false);
  gg.setValue(new GridGeometry2D(reader.getOriginalGridRange(),envelope));
  final GeneralParameterValue[] params=new GeneralParameterValue[]{gg,useJAI};
  final RasterLayerRequest request=new RasterLayerRequest(params,manager);
  final Rectangle area=request.getDestinationRasterArea();
  assertEquals(area.width,400);
  assertEquals(area.height,200);
  final AffineTransform g2w=request.getRequestedGridToWorld();
  assertEquals(g2w.getScaleX(),0.9,DELTA);
  assertEquals(g2w.getScaleY(),-0.9,DELTA);
  assertEquals(g2w.getTranslateX(),-179.55,DELTA);
  assertEquals(g2w.getTranslateY(),89.55,DELTA);
  final String requestS=request.toString();
  if (TestData.isInteractiveTest()) {
    if (LOGGER.isLoggable(Level.INFO))     LOGGER.info(requestS);
  }
}
