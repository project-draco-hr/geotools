{
  final MathTransform1DAdapter defaultAdapter=new MathTransform1DAdapter();
  Assert.assertEquals(defaultAdapter.getSourceDimensions(),1);
  Assert.assertEquals(defaultAdapter.getTargetDimensions(),1);
  try {
    defaultAdapter.inverse();
    Assert.assertFalse(true);
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    defaultAdapter.transform(0.0);
    Assert.assertFalse(true);
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    defaultAdapter.transform(new double[]{0},0,(double[])null,0,1);
    Assert.assertFalse(true);
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    defaultAdapter.transform(new float[]{0},0,(float[])null,0,1);
    Assert.assertFalse(true);
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    defaultAdapter.derivative(0.0);
    Assert.assertFalse(true);
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    defaultAdapter.derivative(new DirectPosition1D(0));
    Assert.assertFalse(true);
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    defaultAdapter.toWKT();
    Assert.assertFalse(true);
  }
 catch (  UnsupportedOperationException e) {
  }
  try {
    defaultAdapter.isIdentity();
    Assert.assertFalse(true);
  }
 catch (  UnsupportedOperationException e) {
  }
}
