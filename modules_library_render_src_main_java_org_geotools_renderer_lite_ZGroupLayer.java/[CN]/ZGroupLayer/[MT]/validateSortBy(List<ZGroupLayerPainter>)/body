{
  Class[] referenceClasses=null;
  SortOrder[] referenceOrders=null;
  LiteFeatureTypeStyle reference=null;
  for (  ZGroupLayerPainter painter : painters) {
    for (    LiteFeatureTypeStyle style : painter.lfts) {
      Class[] styleClasses=getSortByAttributeClasses(style);
      SortOrder[] styleOrders=getSortOrders(style);
      if (referenceClasses == null) {
        referenceClasses=styleClasses;
        referenceOrders=styleOrders;
        reference=style;
        for (int i=0; i < referenceClasses.length; i++) {
          if (!Comparable.class.isAssignableFrom(referenceClasses[i])) {
            throw new IllegalArgumentException("Found non comparable attribute in z group " + groupId + ": "+ sortByToString(style,getSortByAttributeClasses(style))+ " at position "+ (i + 1));
          }
        }
      }
 else {
        if (styleClasses.length != referenceClasses.length) {
          throw new IllegalArgumentException("Found two sortBy clauses with different number " + "of attributes in group " + groupId + ": "+ sortByToString(reference,referenceClasses)+ " vs "+ sortByToString(style,styleClasses));
        }
 else {
          for (int i=0; i < styleClasses.length; i++) {
            Class currClass=styleClasses[i];
            Class referenceClass=referenceClasses[i];
            if (!currClass.equals(referenceClass) && !currClass.isAssignableFrom(referenceClass) && !referenceClass.isAssignableFrom(currClass)) {
              throw new IllegalArgumentException("Found two incompatible classes at position " + (i + 1) + " of the sortBy clauses in group "+ groupId+ ": "+ sortByToString(reference,referenceClasses)+ " vs "+ sortByToString(style,styleClasses));
            }
            SortOrder currOrder=styleOrders[i];
            SortOrder referenceOrder=referenceOrders[i];
            if (!currOrder.equals(referenceOrder)) {
              throw new IllegalArgumentException("Found two different sort orders at position " + (i + 1) + " of the sortBy clauses in group "+ groupId+ ": "+ sortByToString(reference,referenceClasses)+ " vs "+ sortByToString(style,styleClasses));
            }
          }
        }
      }
    }
  }
}
