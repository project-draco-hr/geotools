{
  Hints hints=new Hints(Hints.ASSOCIATION_TRAVERSAL_DEPTH,new Integer(1));
  DefaultQuery query=new DefaultQuery();
  query.setTypeName("ga");
  query.setHints(hints);
  FeatureReader<SimpleFeatureType,SimpleFeature> reader=dataStore.getFeatureReader(query,Transaction.AUTO_COMMIT);
  assertTrue(reader.hasNext());
  reader.next();
  assertTrue(reader.hasNext());
  SimpleFeature feature=(SimpleFeature)reader.next();
  assertNotNull(feature);
  assertEquals("ga.1",feature.getID());
  Geometry g=(Geometry)feature.getDefaultGeometry();
  assertNotNull(g);
  assertEquals(new Coordinate(1,1),g.getCoordinate());
  assertTrue(g.getUserData() instanceof Map);
  assertEquals("1",((Map)g.getUserData()).get("gml:id"));
  reader.close();
  query.setHints(new Hints(Hints.ASSOCIATION_TRAVERSAL_DEPTH,new Integer(0)));
  reader=dataStore.getFeatureReader(query,Transaction.AUTO_COMMIT);
  assertTrue(reader.hasNext());
  reader.next();
  assertTrue(reader.hasNext());
  feature=(SimpleFeature)reader.next();
  assertNotNull(feature);
  assertEquals("ga.1",feature.getID());
  g=(Geometry)feature.getDefaultGeometry();
  assertNotNull(g);
  assertTrue(g.isEmpty());
  assertTrue(g.getUserData() instanceof Map);
  assertEquals("1",((Map)g.getUserData()).get("gml:id"));
  reader.close();
}
