{
  FeatureCollection<SimpleFeatureType,SimpleFeature> collection;
  collection=DataUtilities.collection(Arrays.asList((SimpleFeature)points1,(SimpleFeature)points2,(SimpleFeature)points3));
  try {
    points.addFeatures(collection);
    fail("Expected UnsupportedOperationException on AUTO_COMMIT");
  }
 catch (  UnsupportedOperationException e) {
    assertTrue(e.getMessage().contains("AUTO_COMMIT"));
  }
  final Set<String> insertedFids=new HashSet<String>(Arrays.asList(idP1,idP2,idP3));
  Transaction tx=new DefaultTransaction();
  points.setTransaction(tx);
  assertSame(tx,points.getTransaction());
  try {
    List<FeatureId> addedFeatures=points.addFeatures(collection);
    assertNotNull(addedFeatures);
    assertEquals(3,addedFeatures.size());
    for (    FeatureId id : addedFeatures) {
      assertFalse(id instanceof ResourceId);
      assertNotNull(id.getFeatureVersion());
    }
    assertEquals(3,points.getFeatures().size());
    assertEquals(0,dataStore.getFeatureSource(pointsTypeName).getFeatures().size());
    tx.commit();
    assertEquals(3,dataStore.getFeatureSource(pointsTypeName).getFeatures().size());
  }
 catch (  Exception e) {
    tx.rollback();
    throw e;
  }
 finally {
    tx.close();
  }
}
