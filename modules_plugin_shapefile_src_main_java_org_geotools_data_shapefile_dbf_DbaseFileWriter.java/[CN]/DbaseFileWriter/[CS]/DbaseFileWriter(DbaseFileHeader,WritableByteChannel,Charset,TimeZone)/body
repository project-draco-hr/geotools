{
  header.writeHeader(out);
  this.header=header;
  this.channel=out;
  this.charset=charset == null ? Charset.defaultCharset() : charset;
  this.timeZone=timeZone == null ? TimeZone.getDefault() : timeZone;
  this.formatter=new DbaseFileWriter.FieldFormatter(this.charset,this.timeZone,!reportFieldSizeErrors);
  streamLogger.open();
  nullValues=new byte[header.getNumFields()][];
  for (int i=0; i < nullValues.length; i++) {
    char nullChar;
switch (header.getFieldType(i)) {
case 'C':
case 'c':
case 'M':
case 'G':
      nullChar='\0';
    break;
case 'L':
case 'l':
  nullChar='?';
break;
case 'N':
case 'n':
case 'F':
case 'f':
nullChar='*';
break;
case 'D':
case 'd':
nullChar='0';
break;
case '@':
nullChar='\0';
break;
default :
nullChar='0';
break;
}
nullValues[i]=new byte[header.getFieldLength(i)];
Arrays.fill(nullValues[i],(byte)nullChar);
}
buffer=NIOUtilities.allocate(header.getRecordLength());
}
