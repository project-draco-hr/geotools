{
  FeatureReader<SimpleFeatureType,SimpleFeature> reader1=data.getFeatureSource("road").getReader();
  FeatureReader<SimpleFeatureType,SimpleFeature> reader2=data.getFeatureSource("road").getReader();
  FeatureReader<SimpleFeatureType,SimpleFeature> reader3=data.getFeatureSource("river").getReader();
  while (reader1.hasNext() || reader2.hasNext() || reader3.hasNext()) {
    assertTrue(contains(roadFeatures,reader1.next()));
    assertTrue(contains(roadFeatures,reader2.next()));
    if (reader3.hasNext()) {
      assertTrue(contains(riverFeatures,reader3.next()));
    }
  }
  try {
    reader1.next();
    fail("next should fail with an IOException");
  }
 catch (  IOException expected) {
  }
  try {
    reader2.next();
    fail("next should fail with an IOException");
  }
 catch (  IOException expected) {
  }
  try {
    reader3.next();
    fail("next should fail with an IOException");
  }
 catch (  IOException expected) {
  }
  reader1.close();
  reader2.close();
  reader3.close();
}
