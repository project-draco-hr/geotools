{
  DocumentBuilder builder=DocumentBuilderFactory.newInstance().newDocumentBuilder();
  org.w3c.dom.Document node=builder.parse(new ByteArrayInputStream(contrastEnhance.getBytes()));
  SLDParser parser=new SLDParser(styleFactory);
  ContrastEnhancement ce=parser.parseContrastEnhancement(node.getDocumentElement());
  ContrastMethod method=ce.getMethod();
  assertNotNull(ce);
  assertEquals("Wrong method type","normalize",method.name().toLowerCase());
  assertTrue("No Algotrithm set",ce.hasOption("Algorithm"));
  assertEquals("wrong Algorithm","ClipToMinimumMaximum",ce.getOption("Algorithm").evaluate(null));
  Map<String,Expression> params=ce.getOptions();
  assertEquals("Wrong number of parameters",3,params.size());
  assertEquals("wrong param returned","1",params.get("minValue").evaluate(null));
  assertEquals("wrong param returned","27.0",params.get("maxValue").evaluate(null));
  for (  String methodName : new String[]{"Normalize","Logarithmic","Exponential","Histogram"}) {
    String target=contrastEnhanceOther.replace("METHOD",methodName);
    node=builder.parse(new ByteArrayInputStream(target.getBytes()));
    ce=parser.parseContrastEnhancement(node.getDocumentElement());
    method=ce.getMethod();
    assertNotNull(method);
    assertEquals("Wrong method returned",methodName.toLowerCase(),method.name().toLowerCase());
  }
  for (  String methodName : new String[]{"Logarithmic","Exponential"}) {
    String target=contrastEnhancelogExp.replace("METHOD",methodName);
    System.out.println(target);
    node=builder.parse(new ByteArrayInputStream(target.getBytes()));
    ce=parser.parseContrastEnhancement(node.getDocumentElement());
    method=ce.getMethod();
    assertNotNull(method);
    assertEquals("Wrong method returned",methodName.toLowerCase(),method.name().toLowerCase());
    params=ce.getOptions();
    assertEquals("wrong number of parameters",2,params.size());
    assertEquals("wrong param returned","10.0",params.get("normalizationFactor").evaluate(null));
    assertEquals("wrong param returned","0.1",params.get("correctionFactor").evaluate(null));
  }
  node=builder.parse(new ByteArrayInputStream(contrastEnhanceBroken.getBytes()));
  ce=parser.parseContrastEnhancement(node.getDocumentElement());
  method=ce.getMethod();
  assertNotNull(method);
  assertNull("Algorithm set when it's not defined in SLD",ce.getOption("Algorithm"));
  params=ce.getOptions();
  assertNotNull(params);
  assertTrue("Params should be empty",params.isEmpty());
}
