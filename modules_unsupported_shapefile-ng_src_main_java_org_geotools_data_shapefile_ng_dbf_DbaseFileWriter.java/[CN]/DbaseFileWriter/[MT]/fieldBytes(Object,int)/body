{
  String o;
  final int fieldLen=header.getFieldLength(col);
switch (header.getFieldType(col)) {
case 'C':
case 'c':
    o=formatter.getFieldString(fieldLen,obj.toString());
  break;
case 'L':
case 'l':
if (obj instanceof Boolean) {
  o=((Boolean)obj).booleanValue() ? "T" : "F";
}
 else {
  o="?";
}
break;
case 'M':
case 'G':
o=formatter.getFieldString(fieldLen,obj.toString());
break;
case 'N':
case 'n':
if (header.getFieldDecimalCount(col) == 0) {
o=formatter.getFieldString(fieldLen,0,(Number)obj);
break;
}
case 'F':
case 'f':
o=formatter.getFieldString(fieldLen,header.getFieldDecimalCount(col),(Number)obj);
break;
case 'D':
case 'd':
if (obj instanceof java.util.Calendar) {
o=formatter.getFieldString(((Calendar)obj).getTime());
}
 else {
o=formatter.getFieldString((Date)obj);
}
break;
case '@':
o=formatter.getFieldStringDateTime((Date)obj);
if (Boolean.getBoolean("org.geotools.shapefile.datetime")) {
char[] carr=o.toCharArray();
byte[] barr=new byte[carr.length];
for (int i=0; i < carr.length; i++) {
barr[i]=(byte)carr[i];
}
return barr;
}
break;
default :
throw new RuntimeException("Unknown type " + header.getFieldType(col));
}
return o.getBytes(charset.name());
}
