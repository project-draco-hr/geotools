{
  ReferencedEnvelope bounds;
  Filter filter;
  filter=ff.id(Collections.singleton(ff.featureId(GeoGITRepositoryTestCase.idP2)));
  bounds=pointsSource.getBounds(new Query(pointsName,filter));
  assertEquals(boundsOf(points2),bounds);
  ReferencedEnvelope queryBounds=boundsOf(points1,points2);
  Polygon geometry=JTS.toGeometry(queryBounds);
  filter=ff.intersects(ff.property(pointsType.getGeometryDescriptor().getLocalName()),ff.literal(geometry));
  bounds=pointsSource.getBounds(new Query(pointsName,filter));
  assertEquals(boundsOf(points1,points2),bounds);
  ReferencedEnvelope transformedQueryBounds;
  CoordinateReferenceSystem queryCrs=CRS.decode("EPSG:3857");
  transformedQueryBounds=queryBounds.transform(queryCrs,true);
  geometry=JTS.toGeometry(transformedQueryBounds);
  geometry.setUserData(queryCrs);
  filter=ff.intersects(ff.property(pointsType.getGeometryDescriptor().getLocalName()),ff.literal(geometry));
  bounds=pointsSource.getBounds(new Query(pointsName,filter));
  assertEquals(boundsOf(points1,points2),bounds);
  filter=ECQL.toFilter("sp = 'StringProp2_3' OR ip = 2000");
  bounds=linesSource.getBounds(new Query(linesName,filter));
  assertEquals(boundsOf(lines3,lines2),bounds);
}
