{
  SimpleFeatureCollection collection;
  Set<Collection<Property>> actual;
  Set<Collection<Property>> expected;
  collection=pointsSource.getFeatures();
  assertEquals(pointsType,collection.getSchema());
  assertEquals(boundsOf(points1,points2,points3),collection.getBounds());
  actual=new HashSet<Collection<Property>>();
  for (  Feature f : toList(collection.iterator())) {
    actual.add(f.getProperties());
  }
  expected=new HashSet<Collection<Property>>(Arrays.asList(points1.getProperties(),points2.getProperties(),points3.getProperties()));
  assertEquals(expected,actual);
  collection=linesSource.getFeatures();
  assertEquals(linesType,collection.getSchema());
  assertEquals(boundsOf(lines1,lines2,lines3),collection.getBounds());
  actual=new HashSet<Collection<Property>>();
  for (  Feature f : toList(collection.iterator())) {
    actual.add(f.getProperties());
  }
  expected=new HashSet<Collection<Property>>(Arrays.asList(lines1.getProperties(),lines2.getProperties(),lines3.getProperties()));
  assertEquals(expected,actual);
}
