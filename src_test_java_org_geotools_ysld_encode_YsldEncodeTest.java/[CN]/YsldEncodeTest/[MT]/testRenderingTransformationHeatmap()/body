{
  StyleFactory styleFactory=CommonFactoryFinder.getStyleFactory();
  FilterFactory filterFactory=CommonFactoryFinder.getFilterFactory();
  StyledLayerDescriptor sld=styleFactory.createStyledLayerDescriptor();
  UserLayer layer=styleFactory.createUserLayer();
  sld.layers().add(layer);
  Style style=styleFactory.createStyle();
  layer.userStyles().add(style);
  FeatureTypeStyle featureStyle=styleFactory.createFeatureTypeStyle();
  style.featureTypeStyles().add(featureStyle);
  Function p1=filterFactory.function("parameter",filterFactory.literal("data"));
  Function p2=filterFactory.function("parameter",filterFactory.literal("weightAttr"),filterFactory.literal("pop2000"));
  Function p3=filterFactory.function("parameter",filterFactory.literal("radius"),filterFactory.literal("100"));
  Function p4=filterFactory.function("parameter",filterFactory.literal("pixelsPerCell"),filterFactory.literal(10));
  Function rt=filterFactory.function("vec:Heatmap",p1,p2,p3,p4);
  featureStyle.setTransformation(rt);
  StringWriter out=new StringWriter();
  Ysld.encode(sld,out);
  YamlMap obj=new YamlMap(new Yaml().load(out.toString()));
  YamlMap tx=obj.seq("feature-styles").map(0).map("transform");
  assertEquals("vec:Heatmap",tx.get("name"));
  YamlMap params=tx.map("params");
  assertEquals("'pop2000'",params.get("weightAttr"));
  assertEquals("100",params.str("radius"));
  assertEquals("10",params.str("pixelsPerCell"));
}
