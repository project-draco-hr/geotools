{
  StyleFactory sf=CommonFactoryFinder.getStyleFactory();
  FilterFactory ff=CommonFactoryFinder.getFilterFactory();
  StyledLayerDescriptor sld=sf.createStyledLayerDescriptor();
  UserLayer layer=sf.createUserLayer();
  sld.layers().add(layer);
  Style style=sf.createStyle();
  layer.userStyles().add(style);
  FeatureTypeStyle featureStyle=sf.createFeatureTypeStyle();
  style.featureTypeStyles().add(featureStyle);
  Rule rule=sf.createRule();
  featureStyle.rules().add(rule);
  Stroke stroke=sf.stroke(ff.literal("#555555"),null,null,null,null,null,null);
  rule.symbolizers().add(sf.lineSymbolizer("line",null,null,null,stroke,null));
  Mark mark=sf.mark(ff.literal("circle"),sf.fill(null,ff.literal("#995555"),null),null);
  List<GraphicalSymbol> symbols=new ArrayList<GraphicalSymbol>();
  symbols.add(mark);
  TextSymbolizer2 text=(TextSymbolizer2)sf.textSymbolizer(null,ff.property("geom"),null,null,ff.property("name"),null,null,null,null);
  text.setGraphic(sf.graphic(symbols,null,null,null,null,null));
  rule.symbolizers().add(text);
  StringWriter out=new StringWriter();
  Ysld.encode(sld,out);
  System.out.println(out.toString());
  YamlMap obj=new YamlMap(new Yaml().load(out.toString()));
  YamlMap tsx=obj.seq("feature-styles").map(0).seq("rules").map(0).seq("symbolizers").map(1).map("text");
  assertEquals("name",tsx.str("label"));
  assertEquals("circle",tsx.seq("symbols").map(0).map("mark").str("shape"));
}
