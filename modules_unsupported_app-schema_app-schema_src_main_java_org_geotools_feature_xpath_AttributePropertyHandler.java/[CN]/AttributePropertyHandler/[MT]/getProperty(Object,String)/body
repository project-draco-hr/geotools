{
  Object value=null;
  Attribute att=(Attribute)o;
  AttributeDescriptor descriptor=att.getDescriptor();
  String attName;
  if (descriptor == null) {
    attName=att.getType().getName().getLocalPart();
  }
 else {
    attName=descriptor.getName().getLocalPart();
  }
  if (propName.equals(attName) || propName.startsWith(attName + "/")) {
    return o;
  }
  if (o instanceof ComplexAttribute) {
    ComplexAttribute attribute=(ComplexAttribute)o;
    Name name=Types.typeName(propName);
    Collection<Property> found;
    try {
      found=attribute.getProperties(name);
    }
 catch (    NullPointerException e) {
      e.printStackTrace();
      throw e;
    }
    value=found.size() == 0 ? null : (found.size() == 1 ? found.iterator().next() : found);
  }
  if (value == null && descriptor != null) {
    if ("id".equals(propName)) {
      value=att.getIdentifier();
    }
 else {
      String[] scopedAttName=propName.split(":");
      attName=scopedAttName[scopedAttName.length - 1];
      Map attributes=(Map)att.getUserData().get(Attributes.class);
      if (attributes != null) {
        for (Iterator it=attributes.entrySet().iterator(); it.hasNext(); ) {
          Map.Entry entry=(Entry)it.next();
          Name key=(Name)entry.getKey();
          if (attName.equals(key.getLocalPart())) {
            value=entry.getValue();
            break;
          }
        }
      }
    }
  }
  return value;
}
