{
  Map<String,String> map=getAttributesMap(reader);
  BoundedBy bb=getBoundedBy();
  if (bb == null)   throw new IllegalArgumentException("Provided BoundedBy element is null");
  final String typeS=map.get(GRIB1ImageMetadata.GRID_TYPE);
  if (typeS != null) {
    final int type=Integer.parseInt(typeS);
    final String lat1s=map.get(GRIB1ImageMetadata.GRID_LAT_1);
    final String lat2s=map.get(GRIB1ImageMetadata.GRID_LAT_2);
    final String lon1s=map.get(GRIB1ImageMetadata.GRID_LON_1);
    final String lon2s=map.get(GRIB1ImageMetadata.GRID_LON_2);
    if (lat1s != null && lat2s != null && lon1s != null && lon2s != null) {
      double[] lc=new double[]{Double.parseDouble(lon1s),Double.parseDouble(lat1s)};
      double[] uc=new double[]{Double.parseDouble(lon2s),Double.parseDouble(lat2s)};
switch (type) {
case 10:
        final String deltaX=map.get(GRIB1ImageMetadata.GRID_DELTA_X);
      final String deltaY=map.get(GRIB1ImageMetadata.GRID_DELTA_Y);
    final String latSP=map.get(GRIB1ImageMetadata.GRID_LAT_SP);
  final String lonSP=map.get(GRIB1ImageMetadata.GRID_LON_SP);
final String nX=map.get(GRIB1ImageMetadata.GRID_N_X);
final String nY=map.get(GRIB1ImageMetadata.GRID_N_Y);
if (deltaX != null && deltaY != null && lonSP != null && latSP != null && nY != null && nX != null) {
final double lonSp=Double.parseDouble(lonSP);
final double latSp=Double.parseDouble(latSP);
final double dX=Double.parseDouble(deltaX);
final double dY=Double.parseDouble(deltaY);
final double x=Double.parseDouble(nX);
final double y=Double.parseDouble(nY);
uc=getGridCoords(x * dX,y * dY,lc[0],lc[1],lonSp,latSp);
lc=getGridCoords(0,0,lc[0],lc[1],lonSp,latSp);
}
case 0:
if (lc[0] > uc[0]) {
final double temp=lc[0];
lc[0]=uc[0];
uc[0]=temp;
}
if (lc[1] > uc[1]) {
final double temp=lc[1];
lc[1]=uc[1];
uc[1]=temp;
}
}
bb.setLowerCorner(lc);
bb.setUpperCorner(uc);
}
}
if (isHasVerticalCRS()) {
final String pdsValues=map.get(GRIB1ImageMetadata.PDSL_VALUES);
final String isNumeric=map.get(GRIB1ImageMetadata.PDSL_ISNUMERIC);
if (isNumeric != null && Boolean.parseBoolean(isNumeric)) {
final String[] values=pdsValues.split(GRIB1Utilities.VALUES_SEPARATOR);
if (values != null) {
if (values.length == 1) bb.setVerticalExtent(Double.parseDouble(values[0]));
 else if (values.length == 2) {
final double d1=Double.parseDouble(values[0]);
final double d2=Double.parseDouble(values[1]);
if (d1 != d2) bb.setVerticalExtent(NumberRange.create(d1,d2));
 else bb.setVerticalExtent(d1);
}
 else {
throw new IllegalArgumentException("Unable to set a proper Vertical Extent");
}
}
}
 else {
bb.setVerticalExtent(0);
}
}
if (isHasTemporalCRS()) {
final String time=map.get(GRIB1ImageMetadata.PROD_TIME);
if (Utilities.ensureValidString(time)) {
}
}
}
