{
  if (inFieldLength <= 0) {
    throw new DbaseFileException("field length <= 0");
  }
  if (fields == null) {
    fields=new DbaseField[0];
  }
  int tempLength=1;
  DbaseField[] tempFieldDescriptors=new DbaseField[fields.length + 1];
  for (int i=0; i < fields.length; i++) {
    fields[i].fieldDataAddress=tempLength;
    tempLength=tempLength + fields[i].fieldLength;
    tempFieldDescriptors[i]=fields[i];
  }
  tempFieldDescriptors[fields.length]=new DbaseField();
  tempFieldDescriptors[fields.length].fieldLength=inFieldLength;
  tempFieldDescriptors[fields.length].decimalCount=inDecimalCount;
  tempFieldDescriptors[fields.length].fieldDataAddress=tempLength;
  String tempFieldName=inFieldName;
  if (tempFieldName == null) {
    tempFieldName="NoName";
  }
  if (tempFieldName.length() > 10) {
    tempFieldName=tempFieldName.substring(0,10);
    if (logger.isLoggable(Level.WARNING)) {
      logger.warning("FieldName " + inFieldName + " is longer than 10 characters, truncating to "+ tempFieldName);
    }
  }
  tempFieldDescriptors[fields.length].fieldName=tempFieldName;
  if ((inFieldType == 'C') || (inFieldType == 'c')) {
    tempFieldDescriptors[fields.length].fieldType='C';
    if (inFieldLength > 254) {
      if (logger.isLoggable(Level.FINE)) {
        logger.fine("Field Length for " + inFieldName + " set to "+ inFieldLength+ " Which is longer than 254, not consistent with dbase III");
      }
    }
  }
 else   if ((inFieldType == 'S') || (inFieldType == 's')) {
    tempFieldDescriptors[fields.length].fieldType='C';
    if (logger.isLoggable(Level.WARNING)) {
      logger.warning("Field type for " + inFieldName + " set to S which is flat out wrong people!, I am setting this to C, in the hopes you meant character.");
    }
    if (inFieldLength > 254) {
      if (logger.isLoggable(Level.FINE)) {
        logger.fine("Field Length for " + inFieldName + " set to "+ inFieldLength+ " Which is longer than 254, not consistent with dbase III");
      }
    }
    tempFieldDescriptors[fields.length].fieldLength=8;
  }
 else   if ((inFieldType == 'D') || (inFieldType == 'd')) {
    tempFieldDescriptors[fields.length].fieldType='D';
    if (inFieldLength != 8) {
      if (logger.isLoggable(Level.FINE)) {
        logger.fine("Field Length for " + inFieldName + " set to "+ inFieldLength+ " Setting to 8 digits YYYYMMDD");
      }
    }
    tempFieldDescriptors[fields.length].fieldLength=8;
  }
 else   if (inFieldType == '@') {
    tempFieldDescriptors[fields.length].fieldType='@';
    if (inFieldLength != 8) {
      if (logger.isLoggable(Level.FINE)) {
        logger.fine("Field Length for " + inFieldName + " set to "+ inFieldLength+ " Setting to 8 digits - two longs,"+ "one long for date and one long for time");
      }
    }
    tempFieldDescriptors[fields.length].fieldLength=8;
  }
 else   if ((inFieldType == 'F') || (inFieldType == 'f')) {
    tempFieldDescriptors[fields.length].fieldType='F';
    if (inFieldLength > 20) {
      if (logger.isLoggable(Level.FINE)) {
        logger.fine("Field Length for " + inFieldName + " set to "+ inFieldLength+ " Preserving length, but should be set to Max of 20 not valid for dbase IV, and UP specification, not present in dbaseIII.");
      }
    }
  }
 else   if ((inFieldType == 'N') || (inFieldType == 'n')) {
    tempFieldDescriptors[fields.length].fieldType='N';
    if (inFieldLength > 18) {
      if (logger.isLoggable(Level.FINE)) {
        logger.fine("Field Length for " + inFieldName + " set to "+ inFieldLength+ " Preserving length, but should be set to Max of 18 for dbase III specification.");
      }
    }
    if (inDecimalCount < 0) {
      if (logger.isLoggable(Level.FINE)) {
        logger.fine("Field Decimal Position for " + inFieldName + " set to "+ inDecimalCount+ " Setting to 0 no decimal data will be saved.");
      }
      tempFieldDescriptors[fields.length].decimalCount=0;
    }
    if (inDecimalCount > inFieldLength - 1) {
      if (logger.isLoggable(Level.WARNING)) {
        logger.warning("Field Decimal Position for " + inFieldName + " set to "+ inDecimalCount+ " Setting to "+ (inFieldLength - 1)+ " no non decimal data will be saved.");
      }
      tempFieldDescriptors[fields.length].decimalCount=inFieldLength - 1;
    }
  }
 else   if ((inFieldType == 'L') || (inFieldType == 'l')) {
    tempFieldDescriptors[fields.length].fieldType='L';
    if (inFieldLength != 1) {
      if (logger.isLoggable(Level.FINE)) {
        logger.fine("Field Length for " + inFieldName + " set to "+ inFieldLength+ " Setting to length of 1 for logical fields.");
      }
    }
    tempFieldDescriptors[fields.length].fieldLength=1;
  }
 else {
    throw new DbaseFileException("Undefined field type " + inFieldType + " For column "+ inFieldName);
  }
  tempLength=tempLength + tempFieldDescriptors[fields.length].fieldLength;
  fields=tempFieldDescriptors;
  fieldCnt=fields.length;
  headerLength=MINIMUM_HEADER + 32 * fields.length;
  recordLength=tempLength;
}
