{
  GeneralMatrix gm=new GeneralMatrix(id4);
  gm.invert();
  GeneralMatrix gm2=new GeneralMatrix(id4);
  GeneralMatrix.epsilonEquals(gm,gm2,EPSILON_TOLERANCE);
  GeneralMatrix gma=new GeneralMatrix(arrayA);
  gma.invert();
  GeneralMatrix gmaInverse=new GeneralMatrix(arrayAInverse);
  GeneralMatrix.epsilonEquals(gma,gmaInverse,EPSILON_TOLERANCE);
  gma.invert();
  GeneralMatrix gma2=new GeneralMatrix(arrayA);
  GeneralMatrix.epsilonEquals(gma,gma2,EPSILON_TOLERANCE);
  GeneralMatrix matrix=new GeneralMatrix(new double[][]{{1.0000000000000002,0.0,-1.1641532182693481E-10},{0.0,1.0000000000000002,0.0},{0.0,0.0,1.0}});
  GeneralMatrix inverse=matrix.clone();
  inverse.invert();
  matrix.mul(inverse);
  GeneralMatrix sourceScale=new GeneralMatrix(new double[][]{{0.9996,0.0,500000.0},{0.0,0.9996,0.0},{0.0,0.0,1.0}});
  GeneralMatrix targetScale=new GeneralMatrix(new double[][]{{0.9996,0.0,500000.0},{0.0,0.9996,0.0},{0.0,0.0,1.0}});
  sourceScale.invert();
  targetScale.multiply(sourceScale);
  assertFalse("inverse exact",targetScale.isIdentity());
  assertFalse("inverse 1E-10",targetScale.isIdentity(1E-10));
  assertTrue("inverse 1E-9",targetScale.isIdentity(1E-9));
}
