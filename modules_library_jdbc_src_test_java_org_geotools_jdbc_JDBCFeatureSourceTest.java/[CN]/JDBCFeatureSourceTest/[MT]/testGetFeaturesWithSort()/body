{
  FilterFactory ff=dataStore.getFilterFactory();
  SortBy sort=ff.sort(aname("stringProperty"),SortOrder.ASCENDING);
  DefaultQuery query=new DefaultQuery();
  query.setSortBy(new SortBy[]{sort});
  SimpleFeatureCollection features=featureSource.getFeatures(query);
  assertEquals(3,features.size());
  Iterator<SimpleFeature> iterator=features.iterator();
  assertTrue(iterator.hasNext());
  SimpleFeature f=(SimpleFeature)iterator.next();
  assertEquals("one",f.getAttribute(aname("stringProperty")));
  assertTrue(iterator.hasNext());
  f=(SimpleFeature)iterator.next();
  assertEquals("two",f.getAttribute(aname("stringProperty")));
  assertTrue(iterator.hasNext());
  f=(SimpleFeature)iterator.next();
  assertEquals("zero",f.getAttribute(aname("stringProperty")));
  features.close(iterator);
  sort=ff.sort(aname("stringProperty"),SortOrder.DESCENDING);
  query.setSortBy(new SortBy[]{sort});
  features=featureSource.getFeatures(query);
  iterator=features.iterator();
  assertTrue(iterator.hasNext());
  f=(SimpleFeature)iterator.next();
  assertEquals("zero",f.getAttribute(aname("stringProperty")));
  assertTrue(iterator.hasNext());
  f=(SimpleFeature)iterator.next();
  assertEquals("two",f.getAttribute(aname("stringProperty")));
  assertTrue(iterator.hasNext());
  f=(SimpleFeature)iterator.next();
  assertEquals("one",f.getAttribute(aname("stringProperty")));
  features.close(iterator);
}
