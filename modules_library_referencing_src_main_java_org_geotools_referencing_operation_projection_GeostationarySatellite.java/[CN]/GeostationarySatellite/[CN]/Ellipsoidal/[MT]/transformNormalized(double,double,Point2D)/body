{
  phi=Math.atan(radius_p2 * Math.tan(phi));
  double r=radius_p / Math.hypot(radius_p * Math.cos(phi),Math.sin(phi));
  double Vx=r * Math.cos(lambda) * Math.cos(phi);
  double Vy=r * Math.sin(lambda) * Math.cos(phi);
  double Vz=r * Math.sin(phi);
  if (((radius_g - Vx) * Vx - Vy * Vy - Vz * Vz * radius_p_inv2) < 0.) {
    throw new ProjectionException();
  }
  double tmp=radius_g - Vx;
  double x=radius_g_1 * Math.atan(Vy / tmp);
  double y=radius_g_1 * Math.atan(Vz / Math.hypot(Vy,tmp));
  p2d.setLocation(x,y);
  return p2d;
}
