{
  if (typeName == null) {
    final String[] typeNames=slicesIndexStore.getTypeNames();
    if (typeNames == null || typeNames.length <= 0) {
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.fine("BBOXFilterExtractor::extractBasicProperties(): Problems when opening the index," + " no typenames for the schema are defined");
      }
      return;
    }
    if (typeName == null) {
      typeName=typeNames[0];
      addTypeName(typeName,false);
      if (LOGGER.isLoggable(Level.WARNING))       LOGGER.warning("BBOXFilterExtractor::extractBasicProperties(): passed typename is null, using: " + typeName);
    }
    for (    String type : typeNames) {
      if (LOGGER.isLoggable(Level.FINE))       LOGGER.fine("BBOXFilterExtractor::extractBasicProperties(): Looking for type \'" + typeName + "\' in DataStore:getTypeNames(). Testing: \'"+ type+ "\'.");
      if (type.equalsIgnoreCase(typeName)) {
        if (LOGGER.isLoggable(Level.FINE))         LOGGER.fine("BBOXFilterExtractor::extractBasicProperties(): SUCCESS -> type \'" + typeName + "\' is equalsIgnoreCase() to \'"+ type+ "\'.");
        typeName=type;
        addTypeName(typeName,false);
        break;
      }
    }
  }
  final SimpleFeatureSource featureSource=slicesIndexStore.getFeatureSource(typeName);
  if (featureSource == null) {
    throw new IOException("BBOXFilterExtractor::extractBasicProperties(): unable to get a featureSource for the qualified name" + typeName);
  }
  final FeatureType schema=featureSource.getSchema();
  if (schema != null) {
    geometryPropertyName=schema.getGeometryDescriptor().getLocalName();
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.fine("BBOXFilterExtractor::extractBasicProperties(): geometryPropertyName is set to \'" + geometryPropertyName + "\'.");
  }
 else {
    throw new IOException("BBOXFilterExtractor::extractBasicProperties(): unable to get a schema from the featureSource");
  }
}
