{
  double eps=Math.toRadians(obliquityCorrected(t));
  double l0=Math.toRadians(sunGeometricMeanLongitude(t));
  double m=Math.toRadians(sunGeometricMeanAnomaly(t));
  double e=eccentricityEarthOrbit(t);
  double y=Math.tan(eps / 2);
  y*=y;
  double sin2l0=Math.sin(2 * l0);
  double cos2l0=Math.cos(2 * l0);
  double sin4l0=Math.sin(4 * l0);
  double sin1m=Math.sin(m);
  double sin2m=Math.sin(2 * m);
  double etime=y * sin2l0 - 2 * e * sin1m + 4 * e * y* sin1m* cos2l0 - 0.5 * y * y* sin4l0 - 1.25 * e * e* sin2m;
  return Math.toDegrees(etime) * 4.0;
}
