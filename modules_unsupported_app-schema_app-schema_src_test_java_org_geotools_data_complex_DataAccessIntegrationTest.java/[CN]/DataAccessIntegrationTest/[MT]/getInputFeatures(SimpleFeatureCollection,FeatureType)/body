{
  ArrayList<Feature> features=new ArrayList<Feature>();
  AttributeDescriptor featureDesc=new AttributeDescriptorImpl(geologicUnitType,GEOLOGIC_UNIT,0,-1,false,null);
  AttributeDescriptor descriptionDescriptor=(AttributeDescriptor)geologicUnitType.getDescriptor(Types.typeName(GMLNS,"description"));
  AttributeDescriptor nameDescriptor=(AttributeDescriptor)GMLSchema.ABSTRACTGMLTYPE_TYPE.getDescriptor(Types.typeName(GMLNS,"name"));
  Name name=new NameImpl(null,"simpleContent");
  AttributeType simpleContentType=typeRegistry.getAttributeType(Types.typeName("http://www.w3.org/2001/XMLSchema","string"));
  AttributeDescriptor stringDescriptor=new AttributeDescriptorImpl(simpleContentType,name,1,1,true,(Object)null);
  SimpleFeatureIterator simpleFeatures=fCollection.features();
  Feature lastFeature=null;
  while (simpleFeatures.hasNext()) {
    SimpleFeature next=simpleFeatures.next();
    String propertyName;
    ArrayList<Property> value=new ArrayList<Property>();
    Collection<Property> properties=new ArrayList<Property>();
    if (lastFeature != null && lastFeature.getIdentifier().equals(next.getIdentifier())) {
      Collection<Property> values=lastFeature.getProperties(Types.typeName(GMLNS,"name"));
      Iterator<Property> iterator=values.iterator();
      Object existingValue=((Collection<Property>)iterator.next().getValue()).iterator().next().getValue();
      Object nameValue=next.getProperty("NAME").getValue();
      if (!existingValue.equals(nameValue)) {
        value.add(new AttributeImpl(nameValue,stringDescriptor,null));
        properties.addAll(lastFeature.getProperties());
        properties.add(new ComplexAttributeImpl(value,nameDescriptor,null));
        lastFeature=new FeatureImpl(properties,lastFeature.getDescriptor(),lastFeature.getIdentifier());
      }
      existingValue=((Collection<Property>)iterator.next().getValue()).iterator().next().getValue();
      nameValue=next.getProperty("ABBREVIATION").getValue();
      if (!existingValue.equals(nameValue)) {
        value.add(new AttributeImpl(nameValue,stringDescriptor,null));
        properties.addAll(lastFeature.getProperties());
        properties.add(new ComplexAttributeImpl(value,nameDescriptor,null));
        lastFeature=new FeatureImpl(properties,lastFeature.getDescriptor(),lastFeature.getIdentifier());
      }
    }
 else {
      propertyName="TEXTDESCRIPTION";
      value.add(new AttributeImpl(next.getProperty(propertyName).getValue(),stringDescriptor,null));
      properties.add(new ComplexAttributeImpl(value,descriptionDescriptor,null));
      propertyName="NAME";
      value=new ArrayList<Property>();
      value.add(new AttributeImpl(next.getProperty(propertyName).getValue(),stringDescriptor,null));
      ComplexAttributeImpl name1=new ComplexAttributeImpl(value,nameDescriptor,null);
      properties.add(name1);
      value=new ArrayList<Property>();
      propertyName="ABBREVIATION";
      value.add(new AttributeImpl(next.getProperty(propertyName).getValue(),stringDescriptor,null));
      properties.add(new ComplexAttributeImpl(value,nameDescriptor,null));
      ComplexType cpType=(ComplexType)typeRegistry.getAttributeType(COMPOSITION_PART_TYPE);
      ArrayList<Property> compositionParts=new ArrayList<Property>();
      compositionParts.add(name1);
      value=new ArrayList<Property>();
      value.add(new ComplexAttributeImpl(compositionParts,cpType,null));
      properties.add(new ComplexAttributeImpl(value,(AttributeDescriptor)geologicUnitType.getDescriptor(Types.typeName(GSMLNS,"composition")),null));
      properties.add(new AttributeImpl(next.getID(),(AttributeDescriptor)ComplexFeatureConstants.FEATURE_CHAINING_LINK,null));
      lastFeature=new FeatureImpl(properties,featureDesc,next.getIdentifier());
      features.add(lastFeature);
    }
  }
  simpleFeatures.close();
  return features;
}
