{
  if (style == null) {
    LOGGER.severe("ShapePainter has been asked to paint a null style!!");
    return;
  }
  if (!style.isScaleInRange(scale)) {
    LOGGER.fine("Out of scale");
    return;
  }
  if (style instanceof IconStyle2D) {
    AffineTransform temp=graphics.getTransform();
    try {
      IconStyle2D icoStyle=(IconStyle2D)style;
      Icon icon=icoStyle.getIcon();
      graphics.setComposite(icoStyle.getComposite());
      float dx=-(icon.getIconWidth() * icoStyle.getAnchorPointX()) + icoStyle.getDisplacementX();
      float dy=-(icon.getIconHeight() * icoStyle.getAnchorPointY()) + icoStyle.getDisplacementY();
      float[] coords=new float[2];
      PathIterator citer=getPathIterator(shape);
      AffineTransform at=new AffineTransform(temp);
      while (!(citer.isDone())) {
        if (citer.currentSegment(coords) != PathIterator.SEG_MOVETO) {
          at.setTransform(temp);
          double x=coords[0] + dx;
          double y=coords[1] + dy;
          at.translate(x,y);
          at.rotate(icoStyle.getRotation());
          graphics.setTransform(at);
          icon.paintIcon(null,graphics,0,0);
          if (isLabelObstacle) {
            labelCache.put(new Rectangle2D.Double(x,y,icon.getIconWidth(),icon.getIconHeight()));
          }
        }
        citer.next();
      }
    }
  finally {
      graphics.setTransform(temp);
    }
  }
 else   if (style instanceof MarkStyle2D) {
    PathIterator citer=getPathIterator(shape);
    float[] coords=new float[2];
    MarkStyle2D ms2d=(MarkStyle2D)style;
    Shape transformedShape;
    while (!(citer.isDone())) {
      if (citer.currentSegment(coords) != PathIterator.SEG_MOVETO) {
        transformedShape=ms2d.getTransformedShape(coords[0],coords[1]);
        if (transformedShape != null) {
          if (ms2d.getFill() != null) {
            graphics.setPaint(ms2d.getFill());
            graphics.setComposite(ms2d.getFillComposite());
            graphics.fill(transformedShape);
          }
          if (ms2d.getContour() != null) {
            graphics.setPaint(ms2d.getContour());
            graphics.setStroke(ms2d.getStroke());
            graphics.setComposite(ms2d.getContourComposite());
            graphics.draw(transformedShape);
          }
          if (isLabelObstacle) {
            labelCache.put(transformedShape.getBounds2D());
          }
        }
      }
      citer.next();
    }
  }
 else   if (style instanceof GraphicStyle2D) {
    float[] coords=new float[2];
    PathIterator iter=getPathIterator(shape);
    iter.currentSegment(coords);
    GraphicStyle2D gs2d=(GraphicStyle2D)style;
    BufferedImage image=gs2d.getImage();
    double dx=gs2d.getDisplacementX() - gs2d.getAnchorPointX() * image.getWidth();
    double dy=gs2d.getDisplacementY() - gs2d.getAnchorPointY() * image.getHeight();
    while (!(iter.isDone())) {
      if (iter.currentSegment(coords) != PathIterator.SEG_MOVETO) {
        renderImage(graphics,coords[0],coords[1],dx,dy,image,gs2d.getRotation(),gs2d.getComposite(),isLabelObstacle);
      }
      iter.next();
    }
  }
 else {
    if (isLabelObstacle) {
      labelCache.put(shape.getBounds2D());
    }
    if (style instanceof PolygonStyle2D) {
      PolygonStyle2D ps2d=(PolygonStyle2D)style;
      if (ps2d.getFill() != null) {
        Paint paint=ps2d.getFill();
        if (paint instanceof TexturePaint) {
          TexturePaint tp=(TexturePaint)paint;
          BufferedImage image=tp.getImage();
          Rectangle2D cornerRect=tp.getAnchorRect();
          Point2D anchorPoint=(Point2D)graphics.getRenderingHint(TEXTURE_ANCHOR_HINT_KEY);
          Rectangle2D alignedRect=null;
          if (anchorPoint != null) {
            alignedRect=new Rectangle2D.Double(Math.round(anchorPoint.getX()),Math.round(anchorPoint.getY()),cornerRect.getWidth(),cornerRect.getHeight());
          }
 else {
            alignedRect=new Rectangle2D.Double(0.0,0.0,cornerRect.getWidth(),cornerRect.getHeight());
          }
          paint=new TexturePaint(image,alignedRect);
        }
        graphics.setPaint(paint);
        graphics.setComposite(ps2d.getFillComposite());
        fillLiteShape(graphics,shape);
      }
      if (ps2d.getGraphicFill() != null) {
        Shape oldClip=graphics.getClip();
        try {
          paintGraphicFill(graphics,shape,ps2d.getGraphicFill(),scale);
        }
  finally {
          graphics.setClip(oldClip);
        }
      }
    }
    if (style instanceof LineStyle2D) {
      LineStyle2D ls2d=(LineStyle2D)style;
      if (ls2d.getStroke() != null) {
        if (ls2d.getGraphicStroke() != null) {
          drawWithGraphicsStroke(graphics,dashShape(shape,ls2d.getStroke()),ls2d.getGraphicStroke(),isLabelObstacle);
        }
 else {
          Paint paint=ls2d.getContour();
          if (paint instanceof TexturePaint) {
            TexturePaint tp=(TexturePaint)paint;
            BufferedImage image=tp.getImage();
            Rectangle2D rect=tp.getAnchorRect();
            AffineTransform at=graphics.getTransform();
            double width=rect.getWidth() * at.getScaleX();
            double height=rect.getHeight() * at.getScaleY();
            Rectangle2D scaledRect=new Rectangle2D.Double(0,0,width,height);
            paint=new TexturePaint(image,scaledRect);
          }
          Stroke stroke=ls2d.getStroke();
          if (graphics.getRenderingHint(RenderingHints.KEY_ANTIALIASING) == RenderingHints.VALUE_ANTIALIAS_ON) {
            if (stroke instanceof BasicStroke) {
              BasicStroke bs=(BasicStroke)stroke;
              stroke=new BasicStroke(bs.getLineWidth() + 0.5f,bs.getEndCap(),bs.getLineJoin(),bs.getMiterLimit(),bs.getDashArray(),bs.getDashPhase());
            }
          }
          graphics.setPaint(paint);
          graphics.setStroke(stroke);
          graphics.setComposite(ls2d.getContourComposite());
          graphics.draw(shape);
        }
      }
    }
  }
}
