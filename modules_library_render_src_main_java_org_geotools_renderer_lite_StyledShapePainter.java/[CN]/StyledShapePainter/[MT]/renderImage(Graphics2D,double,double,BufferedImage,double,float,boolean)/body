{
  if (LOGGER.isLoggable(Level.FINEST)) {
    LOGGER.finest("drawing Image @" + x + ","+ y);
  }
  AffineTransform markAT=new AffineTransform();
  if (ROUND_ICON_COORDS && rotation == 0) {
    markAT.translate(Math.round(x - image.getWidth() / 2),Math.round(y - image.getHeight() / 2));
  }
 else {
    markAT.translate(x,y);
    markAT.rotate(rotation);
    markAT.translate(-image.getWidth() / 2.0,-image.getHeight() / 2.0);
  }
  if (isLabelObstacle) {
    int w=Math.max((int)(image.getWidth() * 1),1);
    int h=Math.max((int)(image.getHeight() * 1),1);
    labelCache.put(new Rectangle2D.Double(x - w / 2.0,y - h / 2.0,w,h));
  }
  graphics.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,opacity));
  Object interpolation=graphics.getRenderingHint(RenderingHints.KEY_INTERPOLATION);
  if (interpolation == null) {
    interpolation=RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR;
  }
  try {
    graphics.setRenderingHint(RenderingHints.KEY_INTERPOLATION,RenderingHints.VALUE_INTERPOLATION_BILINEAR);
    graphics.drawRenderedImage(image,markAT);
  }
  finally {
    graphics.setRenderingHint(RenderingHints.KEY_INTERPOLATION,interpolation);
  }
}
