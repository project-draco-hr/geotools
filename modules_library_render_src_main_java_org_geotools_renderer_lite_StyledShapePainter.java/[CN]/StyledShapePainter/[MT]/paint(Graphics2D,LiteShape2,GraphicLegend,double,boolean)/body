{
  if (legend == null) {
    throw new NullPointerException("ShapePainter has been asked to paint a null legend!!");
  }
  Iterator<GraphicalSymbol> symbolIter=legend.graphicalSymbols().iterator();
  while (symbolIter.hasNext()) {
    GraphicalSymbol symbol=symbolIter.next();
    if (symbol instanceof ExternalGraphic) {
      float[] coords=new float[2];
      PathIterator iter=getPathIterator(shape);
      iter.currentSegment(coords);
      double rotation=Double.parseDouble(((Literal)legend.getRotation()).getValue().toString());
      float opacity=Float.parseFloat(((Literal)legend.getOpacity()).getValue().toString());
      ExternalGraphic graphic=(ExternalGraphic)symbol;
      while (!(iter.isDone())) {
        iter.currentSegment(coords);
        try {
          BufferedImage image=ImageIO.read(graphic.getOnlineResource().getLinkage().toURL());
          if (symbolScale != 1.0) {
            int w=(int)(image.getWidth() / symbolScale);
            int h=(int)(image.getHeight() / symbolScale);
            int imageType=image.getType() == 0 ? BufferedImage.TYPE_4BYTE_ABGR : image.getType();
            BufferedImage rescaled=new BufferedImage(w,h,imageType);
            Graphics2D g=rescaled.createGraphics();
            g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            g.drawImage(image,0,0,w,h,0,0,image.getWidth(),image.getHeight(),null);
            g.dispose();
            image=rescaled;
          }
          renderImage(graphics,coords[0],coords[1],image,rotation,opacity,isLabelObstacle);
        }
 catch (        IOException ex) {
          Logger.getLogger(StyledShapePainter.class.getName()).log(Level.SEVERE,null,ex);
        }
        iter.next();
      }
    }
  }
}
