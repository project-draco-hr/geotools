{
  if (solrAttributes.isEmpty()) {
    solrAttributes=new ArrayList<SolrAttribute>();
    try {
      LukeRequest lq=new LukeRequest();
      lq.setShowSchema(true);
      LukeResponse processSchema=lq.process(solrServer);
      lq=new LukeRequest();
      lq.setShowSchema(false);
      LukeResponse processField=lq.process(solrServer);
      Map<String,FieldInfo> fis=processField.getFieldInfo();
      SortedSet<String> keys=new TreeSet<String>(fis.keySet());
      for (      String k : keys) {
        FieldInfo fieldInfo=fis.get(k);
        String name=fieldInfo.getName();
        String type=fieldInfo.getType();
        FieldTypeInfo fty=processSchema.getFieldTypeInfo(type);
        if (fty != null) {
          String solrTypeName=fty.getClassName();
          Class<?> objType=SolrUtils.decodeSolrFieldType(solrTypeName);
          if (objType != null) {
            ExtendedFieldSchemaInfo extendedFieldSchemaInfo=new SolrUtils.ExtendedFieldSchemaInfo(processSchema,processField,name);
            SolrAttribute at=new SolrAttribute(name,objType);
            at.setSolrType(solrTypeName);
            if (extendedFieldSchemaInfo.getUniqueKey()) {
              at.setPk(true);
              at.setUse(true);
            }
            if (extendedFieldSchemaInfo.getMultivalued() && !Geometry.class.isAssignableFrom(at.getType())) {
              at.setType(String.class);
            }
            at.setEmpty(fieldInfo.getDocs() == 0);
            solrAttributes.add(at);
          }
 else {
            if (LOGGER.isLoggable(Level.FINE)) {
              LOGGER.log(Level.FINE,"Skipping attribute " + fty.getName() + " as we don't know how to map its type to a java object "+ fty.getClassName());
            }
          }
        }
      }
      List<BeanComparator> sortFields=Arrays.asList(new BeanComparator("empty"),new BeanComparator("name"));
      ComparatorChain multiSort=new ComparatorChain(sortFields);
      Collections.sort(solrAttributes,multiSort);
    }
 catch (    Exception ex) {
      LOGGER.log(Level.SEVERE,ex.getMessage(),ex);
    }
  }
  return solrAttributes;
}
