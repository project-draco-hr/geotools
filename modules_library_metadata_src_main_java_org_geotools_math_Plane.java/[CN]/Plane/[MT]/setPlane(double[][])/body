{
  if (points == null) {
    throw new NullPointerException("Points array required");
  }
  if (points.length != 3) {
    throw new IllegalArgumentException("Three points are required to determine plane");
  }
  double[] P1=points[0];
  double[] P2=points[1];
  double[] P3=points[2];
  if (P1.length != 3 || P2.length != 3 || P3.length != 3) {
    throw new IllegalArgumentException("3D points required");
  }
  final int X=0, Y=1, Z=2;
  final double m00=P2[X] * P3[Y] - P3[X] * P2[Y];
  final double m01=P3[X] * P1[Y] - P1[X] * P3[Y];
  final double m02=P1[X] * P2[Y] - P2[X] * P1[Y];
  final double det=m00 + m01 + m02;
  if (det == 0) {
    throw new ArithmeticException("Points are colinear");
  }
  c=((m00) * P1[Z] + (m01) * P2[Z] + (m02) * P3[Z]) / det;
  cx=((P2[Y] - P3[Y]) * P1[Z] + (P3[Y] - P1[Y]) * P2[Z] + (P1[Y] - P2[Y]) * P3[Z]) / det;
  cy=((P3[X] - P2[X]) * P1[Z] + (P1[X] - P3[X]) * P2[Z] + (P2[X] - P1[X]) * P3[Z]) / det;
}
