{
  if (writer == null) {
    throw new IOException("Writer has been closed");
  }
  String fid=null;
  try {
    if (hasNext()) {
      delegate.next();
      fid=delegate.fid;
      Object values[]=new Object[type.getAttributeCount()];
      for (int i=0; i < type.getAttributeCount(); i++) {
        values[i]=delegate.read(i);
      }
      origional=SimpleFeatureBuilder.build(type,values,fid);
      live=SimpleFeatureBuilder.copy(origional);
      return live;
    }
 else {
      fid=type.getTypeName() + "." + System.currentTimeMillis();
      Object values[]=DataUtilities.defaultValues(type);
      origional=null;
      live=SimpleFeatureBuilder.build(type,values,fid);
      return live;
    }
  }
 catch (  IllegalAttributeException e) {
    String message="Problem creating feature " + (fid != null ? fid : "");
    throw new DataSourceException(message,e);
  }
}
