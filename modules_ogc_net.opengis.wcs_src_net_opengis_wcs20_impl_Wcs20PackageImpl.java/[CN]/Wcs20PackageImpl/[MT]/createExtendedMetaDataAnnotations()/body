{
  String source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData";
  addAnnotation(capabilitiesTypeEClass,source,new String[]{"name","CapabilitiesType","kind","elementOnly"});
  addAnnotation(getCapabilitiesType_ServiceMetadata(),source,new String[]{"kind","element","name","ServiceMetadata","namespace","##targetNamespace"});
  addAnnotation(getCapabilitiesType_Contents(),source,new String[]{"kind","element","name","Contents","namespace","##targetNamespace"});
  addAnnotation(contentsTypeEClass,source,new String[]{"name","ContentsType","kind","elementOnly"});
  addAnnotation(getContentsType_CoverageSummary(),source,new String[]{"kind","element","name","CoverageSummary","namespace","##targetNamespace"});
  addAnnotation(getContentsType_Extension(),source,new String[]{"kind","element","name","Extension","namespace","##targetNamespace"});
  addAnnotation(coverageDescriptionsTypeEClass,source,new String[]{"name","CoverageDescriptionsType","kind","elementOnly"});
  addAnnotation(getCoverageDescriptionsType_CoverageDescription(),source,new String[]{"kind","element","name","CoverageDescription","namespace","##targetNamespace"});
  addAnnotation(coverageDescriptionTypeEClass,source,new String[]{"name","CoverageDescriptionType","kind","elementOnly"});
  addAnnotation(getCoverageDescriptionType_CoverageId(),source,new String[]{"kind","element","name","CoverageId","namespace","##targetNamespace"});
  addAnnotation(getCoverageDescriptionType_CoverageFunction(),source,new String[]{"kind","element","name","coverageFunction","namespace","http://www.opengis.net/gml/3.2"});
  addAnnotation(getCoverageDescriptionType_Metadata(),source,new String[]{"kind","element","name","metadata","namespace","http://www.opengis.net/gmlcov/1.0"});
  addAnnotation(getCoverageDescriptionType_DomainSet(),source,new String[]{"kind","element","name","domainSet","namespace","http://www.opengis.net/gml/3.2","group","http://www.opengis.net/gml/3.2#domainSet:group"});
  addAnnotation(getCoverageDescriptionType_RangeType(),source,new String[]{"kind","element","name","rangeType","namespace","http://www.opengis.net/gmlcov/1.0"});
  addAnnotation(getCoverageDescriptionType_ServiceParameters(),source,new String[]{"kind","element","name","ServiceParameters","namespace","##targetNamespace"});
  addAnnotation(coverageOfferingsTypeEClass,source,new String[]{"name","CoverageOfferingsType","kind","elementOnly"});
  addAnnotation(getCoverageOfferingsType_ServiceMetadata(),source,new String[]{"kind","element","name","ServiceMetadata","namespace","##targetNamespace"});
  addAnnotation(getCoverageOfferingsType_OfferedCoverage(),source,new String[]{"kind","element","name","OfferedCoverage","namespace","##targetNamespace"});
  addAnnotation(coverageSubtypeParentTypeEClass,source,new String[]{"name","CoverageSubtypeParentType","kind","elementOnly"});
  addAnnotation(getCoverageSubtypeParentType_CoverageSubtype(),source,new String[]{"kind","element","name","CoverageSubtype","namespace","##targetNamespace"});
  addAnnotation(getCoverageSubtypeParentType_CoverageSubtypeParent(),source,new String[]{"kind","element","name","CoverageSubtypeParent","namespace","##targetNamespace"});
  addAnnotation(coverageSummaryTypeEClass,source,new String[]{"name","CoverageSummaryType","kind","elementOnly"});
  addAnnotation(getCoverageSummaryType_WGS84BoundingBox(),source,new String[]{"kind","element","name","WGS84BoundingBox","namespace","http://www.opengis.net/ows/2.0"});
  addAnnotation(getCoverageSummaryType_CoverageId(),source,new String[]{"kind","element","name","CoverageId","namespace","##targetNamespace"});
  addAnnotation(getCoverageSummaryType_CoverageSubtype(),source,new String[]{"kind","element","name","CoverageSubtype","namespace","##targetNamespace"});
  addAnnotation(getCoverageSummaryType_CoverageSubtypeParent(),source,new String[]{"kind","element","name","CoverageSubtypeParent","namespace","##targetNamespace"});
  addAnnotation(getCoverageSummaryType_BoundingBoxGroup(),source,new String[]{"kind","group","name","BoundingBox:group","namespace","http://www.opengis.net/ows/2.0"});
  addAnnotation(getCoverageSummaryType_BoundingBox(),source,new String[]{"kind","element","name","BoundingBox","namespace","http://www.opengis.net/ows/2.0","group","http://www.opengis.net/ows/2.0#BoundingBox:group"});
  addAnnotation(getCoverageSummaryType_MetadataGroup(),source,new String[]{"kind","group","name","Metadata:group","namespace","http://www.opengis.net/ows/2.0"});
  addAnnotation(getCoverageSummaryType_Metadata(),source,new String[]{"kind","element","name","Metadata","namespace","http://www.opengis.net/ows/2.0","group","http://www.opengis.net/ows/2.0#Metadata:group"});
  addAnnotation(describeCoverageTypeEClass,source,new String[]{"name","DescribeCoverageType","kind","elementOnly"});
  addAnnotation(getDescribeCoverageType_CoverageId(),source,new String[]{"kind","element","name","CoverageId","namespace","##targetNamespace"});
  addAnnotation(dimensionSliceTypeEClass,source,new String[]{"name","DimensionSliceType","kind","elementOnly"});
  addAnnotation(getDimensionSliceType_SlicePoint(),source,new String[]{"kind","element","name","SlicePoint","namespace","##targetNamespace"});
  addAnnotation(dimensionSubsetTypeEClass,source,new String[]{"name","DimensionSubsetType","kind","elementOnly"});
  addAnnotation(getDimensionSubsetType_Dimension(),source,new String[]{"kind","element","name","Dimension","namespace","##targetNamespace"});
  addAnnotation(dimensionTrimTypeEClass,source,new String[]{"name","DimensionTrimType","kind","elementOnly"});
  addAnnotation(getDimensionTrimType_TrimLow(),source,new String[]{"kind","element","name","TrimLow","namespace","##targetNamespace"});
  addAnnotation(getDimensionTrimType_TrimHigh(),source,new String[]{"kind","element","name","TrimHigh","namespace","##targetNamespace"});
  addAnnotation(documentRootEClass,source,new String[]{"name","","kind","mixed"});
  addAnnotation(getDocumentRoot_XMLNSPrefixMap(),source,new String[]{"kind","attribute","name","xmlns:prefix"});
  addAnnotation(getDocumentRoot_XSISchemaLocation(),source,new String[]{"kind","attribute","name","xsi:schemaLocation"});
  addAnnotation(getDocumentRoot_Capabilities(),source,new String[]{"kind","element","name","Capabilities","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Contents(),source,new String[]{"kind","element","name","Contents","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_CoverageDescription(),source,new String[]{"kind","element","name","CoverageDescription","namespace","##targetNamespace","affiliation","http://www.opengis.net/gml/3.2#AbstractFeature"});
  addAnnotation(getDocumentRoot_CoverageDescriptions(),source,new String[]{"kind","element","name","CoverageDescriptions","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_CoverageId(),source,new String[]{"kind","element","name","CoverageId","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_CoverageOfferings(),source,new String[]{"kind","element","name","CoverageOfferings","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_CoverageSubtype(),source,new String[]{"kind","element","name","CoverageSubtype","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_CoverageSubtypeParent(),source,new String[]{"kind","element","name","CoverageSubtypeParent","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_CoverageSummary(),source,new String[]{"kind","element","name","CoverageSummary","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_DescribeCoverage(),source,new String[]{"kind","element","name","DescribeCoverage","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_DimensionSlice(),source,new String[]{"kind","element","name","DimensionSlice","namespace","##targetNamespace","affiliation","DimensionSubset"});
  addAnnotation(getDocumentRoot_DimensionSubset(),source,new String[]{"kind","element","name","DimensionSubset","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_DimensionTrim(),source,new String[]{"kind","element","name","DimensionTrim","namespace","##targetNamespace","affiliation","DimensionSubset"});
  addAnnotation(getDocumentRoot_Extension(),source,new String[]{"kind","element","name","Extension","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_GetCapabilities(),source,new String[]{"kind","element","name","GetCapabilities","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_GetCoverage(),source,new String[]{"kind","element","name","GetCoverage","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_OfferedCoverage(),source,new String[]{"kind","element","name","OfferedCoverage","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_ServiceMetadata(),source,new String[]{"kind","element","name","ServiceMetadata","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_ServiceParameters(),source,new String[]{"kind","element","name","ServiceParameters","namespace","##targetNamespace"});
  addAnnotation(extensionTypeEClass,source,new String[]{"name","ExtensionType","kind","elementOnly"});
  addAnnotation(getExtensionType_Any(),source,new String[]{"kind","elementWildcard","wildcards","##other","name",":0","processing","lax"});
  addAnnotation(getCapabilitiesTypeEClass,source,new String[]{"name","GetCapabilitiesType","kind","elementOnly"});
  addAnnotation(getGetCapabilitiesType_Service(),source,new String[]{"kind","attribute","name","service"});
  addAnnotation(getCoverageTypeEClass,source,new String[]{"name","GetCoverageType","kind","elementOnly"});
  addAnnotation(getGetCoverageType_CoverageId(),source,new String[]{"kind","element","name","CoverageId","namespace","##targetNamespace"});
  addAnnotation(getGetCoverageType_DimensionSubsetGroup(),source,new String[]{"kind","group","name","DimensionSubset:group","namespace","##targetNamespace"});
  addAnnotation(getGetCoverageType_DimensionSubset(),source,new String[]{"kind","element","name","DimensionSubset","namespace","##targetNamespace","group","DimensionSubset:group"});
  addAnnotation(getGetCoverageType_Format(),source,new String[]{"kind","element","name","format","namespace","##targetNamespace"});
  addAnnotation(getGetCoverageType_MediaType(),source,new String[]{"kind","element","name","mediaType","namespace","##targetNamespace"});
  addAnnotation(offeredCoverageTypeEClass,source,new String[]{"name","OfferedCoverageType","kind","elementOnly"});
  addAnnotation(getOfferedCoverageType_AbstractCoverage(),source,new String[]{"kind","element","name","AbstractCoverage","namespace","http://www.opengis.net/gmlcov/1.0","group","http://www.opengis.net/gmlcov/1.0#AbstractCoverage:group"});
  addAnnotation(getOfferedCoverageType_ServiceParameters(),source,new String[]{"kind","element","name","ServiceParameters","namespace","##targetNamespace"});
  addAnnotation(requestBaseTypeEClass,source,new String[]{"name","RequestBaseType","kind","elementOnly"});
  addAnnotation(getRequestBaseType_Extension(),source,new String[]{"kind","element","name","Extension","namespace","##targetNamespace"});
  addAnnotation(getRequestBaseType_Service(),source,new String[]{"kind","attribute","name","service"});
  addAnnotation(getRequestBaseType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(serviceMetadataTypeEClass,source,new String[]{"name","ServiceMetadataType","kind","elementOnly"});
  addAnnotation(getServiceMetadataType_FormatSupported(),source,new String[]{"kind","element","name","formatSupported","namespace","##targetNamespace"});
  addAnnotation(getServiceMetadataType_Extension(),source,new String[]{"kind","element","name","Extension","namespace","##targetNamespace"});
  addAnnotation(serviceParametersTypeEClass,source,new String[]{"name","ServiceParametersType","kind","elementOnly"});
  addAnnotation(getServiceParametersType_CoverageSubtype(),source,new String[]{"kind","element","name","CoverageSubtype","namespace","##targetNamespace"});
  addAnnotation(getServiceParametersType_CoverageSubtypeParent(),source,new String[]{"kind","element","name","CoverageSubtypeParent","namespace","##targetNamespace"});
  addAnnotation(getServiceParametersType_NativeFormat(),source,new String[]{"kind","element","name","nativeFormat","namespace","##targetNamespace"});
  addAnnotation(getServiceParametersType_Extension(),source,new String[]{"kind","element","name","Extension","namespace","##targetNamespace"});
  addAnnotation(versionStringTypeEDataType,source,new String[]{"name","VersionStringType","baseType","http://www.eclipse.org/emf/2003/XMLType#string","pattern","2\\.0\\.\\d+"});
}
