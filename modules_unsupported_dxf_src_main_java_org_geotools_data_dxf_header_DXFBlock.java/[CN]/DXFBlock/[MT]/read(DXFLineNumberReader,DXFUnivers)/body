{
  Vector<DXFEntity> sEnt=new Vector<DXFEntity>();
  String name="";
  double x=0, y=0;
  int flag=0;
  DXFLayer l=null;
  int sln=br.getLineNumber();
  log.debug(">Enter at line: " + sln);
  DXFCodeValuePair cvp=null;
  DXFGroupCode gc=null;
  boolean doLoop=true;
  while (doLoop) {
    cvp=new DXFCodeValuePair();
    try {
      gc=cvp.read(br);
    }
 catch (    DXFParseException ex) {
      throw new IOException("DXF parse error" + ex.getLocalizedMessage());
    }
catch (    EOFException e) {
      doLoop=false;
      break;
    }
switch (gc) {
case TYPE:
      String type=cvp.getStringValue();
    if (type.equals(ENDBLK)) {
      doLoop=false;
    }
 else     if (type.equals(ENDSEC)) {
      doLoop=false;
      br.reset();
    }
 else     if (type.equals(BLOCK)) {
      doLoop=false;
      br.reset();
    }
 else     if (type.equals(INSERT)) {
      DXFInsert.read(br,univers);
    }
 else {
      br.reset();
      sEnt.addAll(DXFEntities.readEntities(br,univers).theEntities);
    }
  break;
case LAYER_NAME:
l=univers.findLayer(cvp.getStringValue());
break;
case NAME:
name=cvp.getStringValue();
break;
case INT_1:
flag=cvp.getShortValue();
break;
case X_1:
x=cvp.getDoubleValue();
break;
case Y_1:
y=cvp.getDoubleValue();
break;
default :
break;
}
}
DXFBlock e=new DXFBlock(x,y,flag,name,sEnt,DXFColor.getDefaultColorIndex(),l);
log.debug(e.toString(x,y,flag,name,sEnt.size(),DXFColor.getDefaultColorIndex()));
log.debug("Exit at line: " + br.getLineNumber());
return e;
}
