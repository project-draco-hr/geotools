{
  SimpleFeatureType schema=getSchema(typeName);
  AttributeDescriptor[] types=new AttributeDescriptor[propertyNames.length];
  for (int i=0; i < propertyNames.length; i++) {
    types[i]=schema.getDescriptor(propertyNames[i]);
    if (types[i] == null) {
      throw new SchemaException(typeName + " does not contain requested " + propertyNames[i]+ " attribute");
    }
    if (hints != null && hints.containsKey(Hints.FEATURE_2D) && Boolean.TRUE.equals(hints.get(Hints.FEATURE_2D)) && types[i] instanceof GeometryDescriptor && !Integer.valueOf(2).equals(types[i].getUserData().get(Hints.COORDINATE_DIMENSION))) {
      AttributeTypeBuilder builder=new AttributeTypeBuilder();
      builder.init(types[i]);
      builder.userData(Hints.COORDINATE_DIMENSION,2);
      GeometryType type=builder.buildGeometryType();
      types[i]=builder.buildDescriptor(types[i].getName(),type);
    }
  }
  return types;
}
