{
  Style style=parse("poly","zoom.sld");
  Rule rule=style.featureTypeStyles().get(0).rules().get(0);
  assertEquals("Large",rule.getName());
  assertEquals(100000000d,rule.getMaxScaleDenominator(),0.1);
  PolygonSymbolizer poly=(PolygonSymbolizer)rule.symbolizers().get(0);
  assertEquals(color("0000CC"),SLD.color(poly.getFill()));
  assertEquals(color("000000"),SLD.color(poly.getStroke()));
  assertEquals(7,SLD.width(poly.getStroke()));
  rule=style.featureTypeStyles().get(0).rules().get(1);
  assertEquals("Medium",rule.getName());
  assertEquals(200000000d,rule.getMaxScaleDenominator(),0.1);
  assertEquals(100000000d,rule.getMinScaleDenominator(),0.1);
  poly=(PolygonSymbolizer)rule.symbolizers().get(0);
  assertEquals(color("0000CC"),SLD.color(poly.getFill()));
  assertEquals(color("000000"),SLD.color(poly.getStroke()));
  assertEquals(4,SLD.width(poly.getStroke()));
  rule=style.featureTypeStyles().get(0).rules().get(2);
  assertEquals("Small",rule.getName());
  assertEquals(200000000d,rule.getMinScaleDenominator(),0.1);
  poly=(PolygonSymbolizer)rule.symbolizers().get(0);
  assertEquals(color("0000CC"),SLD.color(poly.getFill()));
  assertEquals(color("000000"),SLD.color(poly.getStroke()));
  assertEquals(1,SLD.width(poly.getStroke()));
}
