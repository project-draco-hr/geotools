{
  Style style=parse("raster","many-color-gradient.sld");
  RasterSymbolizer raster=SLD.rasterSymbolizer(style);
  ColorMapEntry e=raster.getColorMap().getColorMapEntry(0);
  assertEquals("#000000",Filters.asString(e.getColor()));
  assertEquals(95,Filters.asInt(e.getQuantity()));
  e=raster.getColorMap().getColorMapEntry(1);
  assertEquals("#0000FF",Filters.asString(e.getColor()));
  assertEquals(110,Filters.asInt(e.getQuantity()));
  e=raster.getColorMap().getColorMapEntry(2);
  assertEquals("#00FF00",Filters.asString(e.getColor()));
  assertEquals(135,Filters.asInt(e.getQuantity()));
  e=raster.getColorMap().getColorMapEntry(3);
  assertEquals("#FF0000",Filters.asString(e.getColor()));
  assertEquals(160,Filters.asInt(e.getQuantity()));
  e=raster.getColorMap().getColorMapEntry(4);
  assertEquals("#FF00FF",Filters.asString(e.getColor()));
  assertEquals(185,Filters.asInt(e.getQuantity()));
  e=raster.getColorMap().getColorMapEntry(5);
  assertEquals("#FFFF00",Filters.asString(e.getColor()));
  assertEquals(210,Filters.asInt(e.getQuantity()));
  e=raster.getColorMap().getColorMapEntry(6);
  assertEquals("#00FFFF",Filters.asString(e.getColor()));
  assertEquals(235,Filters.asInt(e.getQuantity()));
  e=raster.getColorMap().getColorMapEntry(7);
  assertEquals("#FFFFFF",Filters.asString(e.getColor()));
  assertEquals(256,Filters.asInt(e.getQuantity()));
}
