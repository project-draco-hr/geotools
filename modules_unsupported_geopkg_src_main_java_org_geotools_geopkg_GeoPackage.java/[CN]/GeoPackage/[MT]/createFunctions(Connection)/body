{
  while (cx instanceof DelegatingConnection) {
    cx=((DelegatingConnection)cx).getDelegate();
  }
  Function.create(cx,"ST_MinX",new GeometryFunction(){
    @Override public Object execute(    GeoPkgGeomReader reader) throws IOException {
      return reader.getEnvelope().getMinX();
    }
  }
);
  Function.create(cx,"ST_MaxX",new GeometryFunction(){
    @Override public Object execute(    GeoPkgGeomReader reader) throws IOException {
      return reader.getEnvelope().getMaxX();
    }
  }
);
  Function.create(cx,"ST_MinY",new GeometryFunction(){
    @Override public Object execute(    GeoPkgGeomReader reader) throws IOException {
      return reader.getEnvelope().getMinY();
    }
  }
);
  Function.create(cx,"ST_MaxY",new GeometryFunction(){
    @Override public Object execute(    GeoPkgGeomReader reader) throws IOException {
      return reader.getEnvelope().getMaxY();
    }
  }
);
  Function.create(cx,"ST_IsEmpty",new GeometryFunction(){
    @Override public Object execute(    GeoPkgGeomReader reader) throws IOException {
      return reader.getHeader().getFlags().isEmpty();
    }
  }
);
}
