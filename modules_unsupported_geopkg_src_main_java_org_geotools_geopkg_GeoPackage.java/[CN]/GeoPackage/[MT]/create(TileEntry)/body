{
  if (entry.getBounds() == null) {
    throw new IllegalArgumentException("Tile entry must specify bounds");
  }
  TileEntry e=new TileEntry();
  e.init(entry);
  if (e.getTableName() == null) {
    e.setTableName("tiles");
  }
  if (e.getIdentifier() == null) {
    e.setIdentifier(e.getTableName());
  }
  if (e.getDescription() == null) {
    e.setDescription(e.getIdentifier());
  }
  if (e.getSrid() == null) {
    try {
      e.setSrid(findSRID(entry.getBounds()));
    }
 catch (    Exception ex) {
      throw new IOException(ex);
    }
  }
  e.setLastChange(new Date());
  try {
    Connection cx=connPool.getConnection();
    try {
      PreparedStatement st;
      st=prepare(cx,format("INSERT INTO %s VALUES (?,?,?,?,?,?)",TILE_MATRIX_SET)).set(e.getTableName()).set(e.getSrid()).set(e.getBounds().getMinX()).set(e.getBounds().getMinY()).set(e.getBounds().getMaxX()).set(e.getBounds().getMaxY()).statement();
      st.execute();
      st.close();
      st=prepare(cx,format("INSERT INTO %s VALUES (?,?,?,?,?,?,?,?)",TILE_MATRIX_METADATA)).statement();
      for (      TileMatrix m : e.getTileMatricies()) {
        prepare(st).set(e.getTableName()).set(m.getZoomLevel()).set(m.getMatrixWidth()).set(m.getMatrixHeight()).set(m.getTileWidth()).set(m.getTileHeight()).set(m.getXPixelSize()).set(m.getYPixelSize()).statement().execute();
      }
      st.close();
      st=cx.prepareStatement(format("CREATE TABLE %s (" + "id INTEGER PRIMARY KEY AUTOINCREMENT," + "zoom_level INTEGER NOT NULL DEFAULT 0,"+ "tile_column INTEGER NOT NULL DEFAULT 0,"+ "tile_row INTEGER NOT NULL DEFAULT 0,"+ "tile_data BLOB NOT NULL DEFAULT (zeroblob(4)))",e.getTableName()));
      st.execute();
      st.close();
    }
  finally {
      cx.close();
    }
  }
 catch (  SQLException ex) {
    throw new IOException(ex);
  }
  addGeoPackageContentsEntry(e);
  entry.init(e);
}
