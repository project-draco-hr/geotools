{
  FeatureLock lockA=FeatureLockFactory.generate("LockA",LOCK_DURATION);
  FeatureLock lockB=FeatureLockFactory.generate("LockB",LOCK_DURATION);
  Transaction t1=new DefaultTransaction();
  Transaction t2=new DefaultTransaction();
  FeatureLocking<SimpleFeatureType,SimpleFeature> road1=(FeatureLocking<SimpleFeatureType,SimpleFeature>)dataStore.getFeatureSource(tname("road"));
  FeatureLocking<SimpleFeatureType,SimpleFeature> road2=(FeatureLocking<SimpleFeatureType,SimpleFeature>)dataStore.getFeatureSource(tname("road"));
  road1.setTransaction(t1);
  road2.setTransaction(t2);
  road1.setFeatureLock(lockA);
  road2.setFeatureLock(lockB);
  assertFalse(isLocked(tname("road"),tname("road") + ".0"));
  assertFalse(isLocked(tname("road"),tname("road") + ".1"));
  assertFalse(isLocked(tname("road"),tname("road") + ".2"));
  assertEquals(1,road1.lockFeatures(td.rd1Filter));
  assertTrue(isLocked(tname("road"),tname("road") + "." + td.initialFidValue));
  assertFalse(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue + 1)));
  assertFalse(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue + 2)));
  road2.lockFeatures(td.rd2Filter);
  assertTrue(isLocked(tname("road"),tname("road") + "." + td.initialFidValue));
  assertTrue(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue + 1)));
  assertFalse(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue + 2)));
  try {
    road1.unLockFeatures(td.rd1Filter);
    fail("need authorization");
  }
 catch (  IOException expected) {
  }
  t1.addAuthorization(lockA.getAuthorization());
  try {
    road1.unLockFeatures(td.rd2Filter);
    fail("need correct authorization");
  }
 catch (  IOException expected) {
  }
  road1.unLockFeatures(td.rd1Filter);
  assertFalse(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue)));
  assertTrue(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue + 1)));
  assertFalse(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue + 2)));
  t2.addAuthorization(lockB.getAuthorization());
  road2.unLockFeatures(td.rd2Filter);
  assertFalse(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue)));
  assertFalse(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue + 1)));
  assertFalse(isLocked(tname("road"),tname("road") + "." + (td.initialFidValue + 2)));
  t1.close();
  t2.close();
}
