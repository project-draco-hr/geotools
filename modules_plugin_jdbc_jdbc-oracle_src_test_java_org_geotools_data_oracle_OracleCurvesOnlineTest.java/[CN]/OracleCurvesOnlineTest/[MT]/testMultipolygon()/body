{
  ContentFeatureSource fs=dataStore.getFeatureSource(tname("curves"));
  FilterFactory ff=dataStore.getFilterFactory();
  PropertyIsEqualTo filter=ff.equal(ff.property(aname("name")),ff.literal("Multipolygon with curves"),true);
  ContentFeatureCollection fc=fs.getFeatures(filter);
  assertEquals(1,fc.size());
  SimpleFeature feature=DataUtilities.first(fc);
  Geometry g=(Geometry)feature.getDefaultGeometry();
  assertNotNull(g);
  assertTrue(g instanceof MultiPolygon);
  MultiPolygon mp=(MultiPolygon)g;
  assertEquals(2,mp.getNumGeometries());
  Polygon p1=(Polygon)mp.getGeometryN(0);
  assertTrue(p1.getExteriorRing() instanceof CompoundCurvedGeometry<?>);
  assertEquals(2,((CompoundCurvedGeometry<?>)p1.getExteriorRing()).getComponents().size());
  assertEquals(1,p1.getNumInteriorRing());
  assertEquals(2,((CompoundCurvedGeometry<?>)p1.getInteriorRingN(0)).getComponents().size());
  Polygon p2=(Polygon)mp.getGeometryN(1);
  assertTrue(p2.getExteriorRing() instanceof CompoundCurvedGeometry<?>);
  assertEquals(2,((CompoundCurvedGeometry<?>)p2.getExteriorRing()).getComponents().size());
  assertEquals(0,p2.getNumInteriorRing());
}
