{
  ContentFeatureSource fs=dataStore.getFeatureSource(tname("curves"));
  FilterFactory ff=dataStore.getFilterFactory();
  PropertyIsEqualTo filter=ff.equal(ff.property(aname("name")),ff.literal("Compound line string"),true);
  ContentFeatureCollection fc=fs.getFeatures(filter);
  assertEquals(1,fc.size());
  SimpleFeature feature=DataUtilities.first(fc);
  Geometry g=(Geometry)feature.getDefaultGeometry();
  assertNotNull(g);
  assertTrue(g instanceof CompoundCurvedGeometry<?>);
  CompoundCurvedGeometry<?> compound=(CompoundCurvedGeometry<?>)g;
  List<LineString> components=compound.getComponents();
  assertEquals(3,components.size());
  LineString ls1=components.get(0);
  assertEquals(2,ls1.getNumPoints());
  assertEquals(new Coordinate(10,45),ls1.getCoordinateN(0));
  assertEquals(new Coordinate(20,45),ls1.getCoordinateN(1));
  CircularString cs=(CircularString)components.get(1);
  assertArrayEquals(new double[]{20.0,45.0,23.0,48.0,20.0,51.0},cs.getControlPoints(),0d);
  LineString ls2=components.get(2);
  assertEquals(2,ls2.getNumPoints());
  assertEquals(new Coordinate(20,51),ls2.getCoordinateN(0));
  assertEquals(new Coordinate(10,51),ls2.getCoordinateN(1));
}
