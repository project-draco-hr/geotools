{
  Envelope envelope=null;
  GeneralEnvelope merged=null;
  if (crs != null) {
    final Extent domainOfValidity=crs.getDomainOfValidity();
    if (domainOfValidity != null) {
      for (      final GeographicExtent extent : domainOfValidity.getGeographicElements()) {
        if (Boolean.FALSE.equals(extent.getInclusion())) {
          continue;
        }
        if (extent instanceof BoundingPolygon) {
          for (          final Geometry geometry : ((BoundingPolygon)extent).getPolygons()) {
            final Envelope candidate=geometry.getEnvelope();
            if (candidate != null) {
              final CoordinateReferenceSystem sourceCRS=candidate.getCoordinateReferenceSystem();
              if (sourceCRS == null || equalsIgnoreMetadata(sourceCRS,crs)) {
                if (envelope == null) {
                  envelope=candidate;
                }
 else {
                  if (merged == null) {
                    envelope=merged=new GeneralEnvelope(envelope);
                  }
                  merged.add(envelope);
                }
              }
            }
          }
        }
      }
    }
  }
  if (envelope == null) {
    final GeographicBoundingBox bounds=getGeographicBoundingBox(crs);
    if (bounds != null && !Boolean.FALSE.equals(bounds.getInclusion())) {
      envelope=merged=new GeneralEnvelope(new double[]{bounds.getWestBoundLongitude(),bounds.getSouthBoundLatitude()},new double[]{bounds.getEastBoundLongitude(),bounds.getNorthBoundLatitude()});
      final SingleCRS targetCRS=getHorizontalCRS(crs);
      final GeographicCRS sourceCRS=CRSUtilities.getStandardGeographicCRS2D(targetCRS);
      merged.setCoordinateReferenceSystem(sourceCRS);
      try {
        envelope=transform(envelope,targetCRS);
      }
 catch (      TransformException exception) {
        envelope=null;
        unexpectedException("getEnvelope",exception);
      }
      merged.setCoordinateReferenceSystem(targetCRS);
    }
  }
  return envelope;
}
