{
  if ((value.length == 1) && (value[0].getValue() != null)) {
    java.lang.String svalue=(java.lang.String)value[0].getValue();
    java.lang.String[] values=svalue.split("T");
    if (values.length != 2) {
      throw new SAXException("Could not parse the DateTime " + value);
    }
    java.lang.String date=values[0];
    java.lang.String time=values[1];
    values=date.split("\\-");
    if (values.length != 3) {
      throw new SAXException("Could not parse the DateTime " + value);
    }
    int year;
    int month;
    int day;
    year=java.lang.Integer.parseInt(values[0]);
    month=java.lang.Integer.parseInt(values[1]);
    day=java.lang.Integer.parseInt(values[2]);
    values=time.split("\\:",3);
    if (values.length != 3) {
      throw new SAXException("Could not parse the DateTime " + value);
    }
    int hour;
    int minute;
    int second;
    hour=java.lang.Integer.parseInt(values[0]);
    minute=java.lang.Integer.parseInt(values[1]);
    int i=values[2].indexOf("-");
    Calendar c=null;
    if (i == -1) {
      i=values[2].indexOf("+");
    }
    if (i == -1) {
      if (values[2].endsWith("Z")) {
        second=(int)java.lang.Float.parseFloat(values[2].substring(0,values[2].length() - 1));
      }
 else {
        second=(int)java.lang.Float.parseFloat(values[2]);
      }
      TimeZone tz=TimeZone.getTimeZone("GMT");
      c=Calendar.getInstance(tz);
      c.clear();
    }
 else {
      second=(int)java.lang.Float.parseFloat(values[2].substring(0,i));
      TimeZone tz=TimeZone.getTimeZone("GMT" + values[2].substring(i));
      c=Calendar.getInstance(tz);
      c.clear();
    }
    c.set(year,month,day,hour,minute,second);
    java.util.Date r=c.getTime();
    return r;
  }
  return null;
}
