{
  if (bins == 0 || count == 0) {
    return CalcResult.NULL_RESULT;
  }
  Collections.sort(items);
  if (bins > count) {
    bins=count;
    this.bin=new ArrayList[bins];
  }
  int binPop=new Double(Math.ceil((double)count / bins)).intValue();
  int lastBigBin=count % bins;
  if (lastBigBin == 0)   lastBigBin=bins;
 else   lastBigBin--;
  int item=0;
  for (int binIndex=0; binIndex < bins; binIndex++) {
    bin[binIndex]=new ArrayList();
    for (int binMember=0; binMember < binPop; binMember++) {
      bin[binIndex].add(items.get(item++));
    }
    if (lastBigBin == binIndex)     binPop--;
  }
  return new AbstractCalcResult(){
    public Object getValue(){
      return bin;
    }
  }
;
}
