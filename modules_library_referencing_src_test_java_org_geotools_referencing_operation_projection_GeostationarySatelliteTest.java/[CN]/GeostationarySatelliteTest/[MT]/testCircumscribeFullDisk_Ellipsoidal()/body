{
  final Envelope2D circumscribed=GeostationarySatellite.circumscribeFullDisk(ellipsoidalGeosCRS);
  assertThat(circumscribed,is(notNullValue()));
  final DirectPosition2D p=new DirectPosition2D();
  p.setLocation(circumscribed.getCenterX(),circumscribed.getMaxY());
  ellipsoidalGeosToGeog.transform(p,p);
  assertThat(p,is(notNullValue()));
  geogToEllipsoidalGeos.transform(p,p);
  assertThat(p,is(notNullValue()));
  p.setLocation(circumscribed.getCenterX(),circumscribed.getMinY());
  ellipsoidalGeosToGeog.transform(p,p);
  assertThat(p,is(notNullValue()));
  geogToEllipsoidalGeos.transform(p,p);
  assertThat(p,is(notNullValue()));
  p.setLocation(circumscribed.getMaxX(),circumscribed.getCenterY());
  ellipsoidalGeosToGeog.transform(p,p);
  assertThat(p,is(notNullValue()));
  geogToEllipsoidalGeos.transform(p,p);
  assertThat(p,is(notNullValue()));
  p.setLocation(circumscribed.getMinX(),circumscribed.getCenterY());
  ellipsoidalGeosToGeog.transform(p,p);
  assertThat(p,is(notNullValue()));
  geogToEllipsoidalGeos.transform(p,p);
  assertThat(p,is(notNullValue()));
  final double tickle=1;
  expectProjectionException(new Testable(){
    public void test() throws Exception {
      p.setLocation(circumscribed.getCenterX(),circumscribed.getMaxY() + tickle);
      ellipsoidalGeosToGeog.transform(p,p);
    }
  }
);
  expectProjectionException(new Testable(){
    public void test() throws Exception {
      p.setLocation(circumscribed.getCenterX(),circumscribed.getMinY() - tickle);
      ellipsoidalGeosToGeog.transform(p,p);
    }
  }
);
  expectProjectionException(new Testable(){
    public void test() throws Exception {
      p.setLocation(circumscribed.getMinX() - tickle,circumscribed.getCenterY());
      ellipsoidalGeosToGeog.transform(p,p);
    }
  }
);
  expectProjectionException(new Testable(){
    public void test() throws Exception {
      p.setLocation(circumscribed.getMaxX() + tickle,circumscribed.getCenterY());
      ellipsoidalGeosToGeog.transform(p,p);
    }
  }
);
  expectProjectionException(new Testable(){
    public void test() throws Exception {
      p.setLocation(circumscribed.getMaxX(),circumscribed.getMaxY());
      ellipsoidalGeosToGeog.transform(p,p);
    }
  }
);
  expectProjectionException(new Testable(){
    public void test() throws Exception {
      p.setLocation(circumscribed.getMaxX(),circumscribed.getMinY());
      ellipsoidalGeosToGeog.transform(p,p);
    }
  }
);
  expectProjectionException(new Testable(){
    public void test() throws Exception {
      p.setLocation(circumscribed.getMinX(),circumscribed.getMaxY());
      ellipsoidalGeosToGeog.transform(p,p);
    }
  }
);
  expectProjectionException(new Testable(){
    public void test() throws Exception {
      p.setLocation(circumscribed.getMinX(),circumscribed.getMinY());
      ellipsoidalGeosToGeog.transform(p,p);
    }
  }
);
}
