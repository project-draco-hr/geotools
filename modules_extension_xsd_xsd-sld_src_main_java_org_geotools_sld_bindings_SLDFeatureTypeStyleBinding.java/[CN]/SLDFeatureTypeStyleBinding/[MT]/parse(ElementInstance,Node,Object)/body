{
  FeatureTypeStyle featureTypeStyle=styleFactory.createFeatureTypeStyle();
  if (node.hasChild("Name")) {
    featureTypeStyle.setName((String)node.getChildValue("Name"));
  }
  if (node.hasChild("Title")) {
    featureTypeStyle.getDescription().setTitle((InternationalString)node.getChildValue("Title"));
  }
  if (node.hasChild("Abstract")) {
    featureTypeStyle.getDescription().setAbstract((InternationalString)node.getChildValue("Abstract"));
  }
  if (node.hasChild("FeatureTypeName")) {
    Object ftn=node.getChildValue("FeatureTypeName");
    if (ftn instanceof QName) {
      QName qn=(QName)ftn;
      ftn=qn.getPrefix() != null && !"".equals(qn.getPrefix().trim()) ? qn.getPrefix() + ":" + qn.getLocalPart() : qn.getLocalPart();
    }
    featureTypeStyle.setFeatureTypeName(ftn.toString());
  }
  if (node.hasChild("SemanticTypeIdentifier")) {
    List ids=node.getChildValues("SemanticTypeIdentifier");
    featureTypeStyle.setSemanticTypeIdentifiers((String[])ids.toArray(new String[ids.size()]));
  }
  if (node.hasChild("Rule")) {
    List rules=node.getChildValues("Rule");
    featureTypeStyle.setRules((Rule[])rules.toArray(new Rule[rules.size()]));
  }
  return featureTypeStyle;
}
