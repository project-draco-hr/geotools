{
  GeneralEnvelope envelope=new GeneralEnvelope(new double[]{-180,-90},new double[]{180,90});
  envelope.setCoordinateReferenceSystem(DefaultGeographicCRS.WGS84);
  GridCoverage2D gc=CoverageFactoryFinder.getGridCoverageFactory(null).create("name",JAI.create("ImageRead",new File(TestData.url(this,"hs.tif").toURI())),envelope,new GridSampleDimension[]{new GridSampleDimension("test1BandByte_SLD")},null,null);
  java.net.URL surl=TestData.url(this,"histogram.sld");
  SLDParser stylereader=new SLDParser(sf,surl);
  StyledLayerDescriptor sld=stylereader.parseSLD();
  SubchainStyleVisitorCoverageProcessingAdapter rsh_SLD=new RasterSymbolizerHelper(gc,null);
  final RasterSymbolizer rs_1=extractRasterSymbolizer(sld);
  rsh_SLD.visit(rs_1);
  testRasterSymbolizerHelper(rsh_SLD);
  gc=CoverageFactoryFinder.getGridCoverageFactory(null).create("name",JAI.create("ImageRead",new File(TestData.url(this,"hs.tif").toURI())),new GeneralEnvelope(new double[]{-90,-180},new double[]{90,180}),new GridSampleDimension[]{new GridSampleDimension("test1BandByte_SLD")},null,null);
  SubchainStyleVisitorCoverageProcessingAdapter rsh_StyleBuilder=new RasterSymbolizerHelper(gc,null);
  StyleBuilder sldBuilder=new StyleBuilder();
  rsh_StyleBuilder=new RasterSymbolizerHelper(gc,null);
  final RasterSymbolizer rsb_1=sldBuilder.createRasterSymbolizer();
  final ChannelSelection chSel=new ChannelSelectionImpl();
  final SelectedChannelType chTypeGray=new SelectedChannelTypeImpl();
  final ContrastEnhancement cntEnh=new ContrastEnhancementImpl();
  cntEnh.setMethod(ContrastMethod.HISTOGRAM);
  ;
  chTypeGray.setChannelName("1");
  chTypeGray.setContrastEnhancement(cntEnh);
  chSel.setGrayChannel(chTypeGray);
  rsb_1.setChannelSelection(chSel);
  rsb_1.setOpacity(sldBuilder.literalExpression(1.0));
  rsb_1.setOverlap(sldBuilder.literalExpression("AVERAGE"));
  rsh_StyleBuilder.visit(rsb_1);
  testRasterSymbolizerHelper(rsh_StyleBuilder);
  gc=CoverageFactoryFinder.getGridCoverageFactory(null).create("name",JAI.create("ImageRead",new File(TestData.url(this,"hs.tif").toURI())),new GeneralEnvelope(new double[]{-90,-180},new double[]{90,180}),new GridSampleDimension[]{new GridSampleDimension("test1BandByte_SLD")},null,null);
  surl=TestData.url(this,"logarithmic.sld");
  stylereader=new SLDParser(sf,surl);
  sld=stylereader.parseSLD();
  rsh_SLD=new RasterSymbolizerHelper(gc,null);
  final RasterSymbolizer rs_2=extractRasterSymbolizer(sld);
  rsh_SLD.visit(rs_2);
  testRasterSymbolizerHelper(rsh_SLD);
  gc=CoverageFactoryFinder.getGridCoverageFactory(null).create("name",JAI.create("ImageRead",new File(TestData.url(this,"hs.tif").toURI())),new GeneralEnvelope(new double[]{-90,-180},new double[]{90,180}));
  rsh_StyleBuilder=new RasterSymbolizerHelper(gc,null);
  sldBuilder=new StyleBuilder();
  rsh_StyleBuilder=new RasterSymbolizerHelper(gc,null);
  final RasterSymbolizer rsb_2=sldBuilder.createRasterSymbolizer();
  final ChannelSelection chSel_2=new ChannelSelectionImpl();
  final SelectedChannelType chTypeGray_2=new SelectedChannelTypeImpl();
  final ContrastEnhancement cntEnh_2=new ContrastEnhancementImpl();
  cntEnh_2.setMethod(ContrastMethod.LOGARITHMIC);
  chTypeGray_2.setChannelName("1");
  chTypeGray_2.setContrastEnhancement(cntEnh_2);
  chSel_2.setGrayChannel(chTypeGray_2);
  rsb_2.setChannelSelection(chSel_2);
  rsb_2.setOpacity(sldBuilder.literalExpression(1.0));
  rsh_StyleBuilder.visit(rsb_2);
  testRasterSymbolizerHelper(rsh_StyleBuilder);
  gc=CoverageFactoryFinder.getGridCoverageFactory(null).create("name",JAI.create("ImageRead",new File(TestData.url(this,"hs.tif").toURI())),new GeneralEnvelope(new double[]{-90,-180},new double[]{90,180}),new GridSampleDimension[]{new GridSampleDimension("test1BandByte_SLD")},null,null);
  surl=TestData.url(this,"exponential.sld");
  stylereader=new SLDParser(sf,surl);
  sld=stylereader.parseSLD();
  rsh_SLD=new RasterSymbolizerHelper(gc,null);
  final RasterSymbolizer rs_3=extractRasterSymbolizer(sld);
  rsh_SLD.visit(rs_3);
  testRasterSymbolizerHelper(rsh_SLD);
  gc=CoverageFactoryFinder.getGridCoverageFactory(null).create("name",JAI.create("ImageRead",new File(TestData.url(this,"hs.tif").toURI())),new GeneralEnvelope(new double[]{-90,-180},new double[]{90,180}),new GridSampleDimension[]{new GridSampleDimension("test1BandByte_SLD")},null,null);
  rsh_StyleBuilder=new RasterSymbolizerHelper(gc,null);
  sldBuilder=new StyleBuilder();
  rsh_StyleBuilder=new RasterSymbolizerHelper(gc,null);
  final RasterSymbolizer rsb_3=sldBuilder.createRasterSymbolizer();
  final ChannelSelection chSel_3=new ChannelSelectionImpl();
  final SelectedChannelType chTypeGray_3=new SelectedChannelTypeImpl();
  final ContrastEnhancement cntEnh_3=new ContrastEnhancementImpl();
  cntEnh_3.setMethod(ContrastMethod.EXPONENTIAL);
  chTypeGray_3.setChannelName("1");
  chTypeGray_3.setContrastEnhancement(cntEnh_3);
  chSel_3.setGrayChannel(chTypeGray_3);
  rsb_3.setChannelSelection(chSel_3);
  rsb_3.setOpacity(sldBuilder.literalExpression(1.0));
  rsb_3.setOverlap(sldBuilder.literalExpression("AVERAGE"));
  rsh_StyleBuilder.visit(rsb_3);
  testRasterSymbolizerHelper(rsh_StyleBuilder);
}
