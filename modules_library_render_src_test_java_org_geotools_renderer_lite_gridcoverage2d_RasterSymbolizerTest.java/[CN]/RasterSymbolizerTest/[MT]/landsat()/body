{
  java.net.URL surl=TestData.url(this,"landsat.sld");
  SLDParser stylereader=new SLDParser(sf,surl);
  StyledLayerDescriptor sld=stylereader.parseSLD();
  final GridSampleDimension[] gsd={new GridSampleDimension("test1BandByte_SLD1"),new GridSampleDimension("test1BandByte_SLD2"),new GridSampleDimension("test1BandByte_SLD3"),new GridSampleDimension("test1BandByte_SLD4"),new GridSampleDimension("test1BandByte_SLD5"),new GridSampleDimension("test1BandByte_SLD6"),new GridSampleDimension("test1BandByte_SLD")};
  GeneralEnvelope envelope=new GeneralEnvelope(new double[]{-180,-90},new double[]{180,90});
  envelope.setCoordinateReferenceSystem(DefaultGeographicCRS.WGS84);
  final GridCoverage2D gc=CoverageFactoryFinder.getGridCoverageFactory(null).create("name",JAI.create("ImageRead",TestData.file(this,"landsat.tiff")),envelope,gsd,null,null);
  final SubchainStyleVisitorCoverageProcessingAdapter rsh=new RasterSymbolizerHelper(gc,null);
  final RasterSymbolizer rs=extractRasterSymbolizer(sld);
  rsh.visit(rs);
  final RenderedImage ri=((GridCoverage2D)rsh.getOutput()).getRenderedImage();
  Assert.assertTrue(ri.getColorModel() instanceof ComponentColorModel);
  Assert.assertTrue(ri.getColorModel().getNumComponents() == 3);
  testRasterSymbolizerHelper(rsh);
}
