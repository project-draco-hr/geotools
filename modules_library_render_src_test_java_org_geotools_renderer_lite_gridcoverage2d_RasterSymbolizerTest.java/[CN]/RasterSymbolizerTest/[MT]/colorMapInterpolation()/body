{
  final URL sldURL=TestData.url(this,"colormap.sld");
  final SLDParser stylereader=new SLDParser(sf,sldURL);
  final StyledLayerDescriptor sld=stylereader.parseSLD();
  GeneralEnvelope envelope=new GeneralEnvelope(new double[]{-180,-90},new double[]{180,90});
  envelope.setCoordinateReferenceSystem(DefaultGeographicCRS.WGS84);
  GridCoverage2D gc=CoverageFactoryFinder.getGridCoverageFactory(null).create("name",PlanarImage.wrapRenderedImage(getSynthetic(Double.NaN)),envelope,new GridSampleDimension[]{new GridSampleDimension("sd",new Category[]{new Category("",Color.BLACK,0)},null)},null,null);
  RasterSymbolizer rs=extractRasterSymbolizer(sld);
  GridToEnvelopeMapper gtoem=new GridToEnvelopeMapper();
  gtoem.setEnvelope(envelope);
  gtoem.setGridRange(new GridEnvelope2D(0,0,50,50));
  gtoem.setPixelAnchor(PixelInCell.CELL_CORNER);
  final GridCoverageRenderer renderer=new GridCoverageRenderer(DefaultGeographicCRS.WGS84,ReferencedEnvelope.reference(envelope),new Rectangle(0,0,50,50),gtoem.createAffineTransform().createInverse());
  RenderedImage image=renderer.renderImage(gc,rs,new InterpolationBilinear(),null,256,256);
  assertNotNull(image);
  assertNotNull(PlanarImage.wrapRenderedImage(image));
  assertTrue(image.getColorModel() instanceof IndexColorModel);
  image=renderer.renderImage(gc,rs,new InterpolationNearest(),null,256,256);
  assertNotNull(image);
  assertNotNull(PlanarImage.wrapRenderedImage(image));
  assertTrue(image.getColorModel() instanceof IndexColorModel);
}
