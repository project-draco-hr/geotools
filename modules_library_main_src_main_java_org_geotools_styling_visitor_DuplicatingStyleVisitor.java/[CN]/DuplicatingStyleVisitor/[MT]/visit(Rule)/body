{
  Rule copy=null;
  Filter filterCopy=null;
  if (rule.getFilter() != null) {
    Filter filter=rule.getFilter();
    filterCopy=copy(filter);
  }
  Symbolizer[] symsCopy=rule.getSymbolizers();
  for (int i=0; i < symsCopy.length; i++) {
    symsCopy[i]=copy(symsCopy[i]);
  }
  Graphic[] legendCopy=rule.getLegendGraphic();
  for (int i=0; i < legendCopy.length; i++) {
    legendCopy[i]=copy(legendCopy[i]);
  }
  Description descCopy=rule.getDescription();
  descCopy=copy(descCopy);
  copy=sf.createRule();
  copy.setSymbolizers(symsCopy);
  copy.setDescription(descCopy);
  copy.setLegendGraphic(legendCopy);
  copy.setName(rule.getName());
  copy.setFilter(filterCopy);
  copy.setElseFilter(rule.isElseFilter());
  copy.setMaxScaleDenominator(rule.getMaxScaleDenominator());
  copy.setMinScaleDenominator(rule.getMinScaleDenominator());
  if (STRICT && !copy.equals(rule)) {
    throw new IllegalStateException("Was unable to duplicate provided Rule:" + rule);
  }
  pages.push(copy);
}
