{
  Geometry geom;
  parser.nextTag();
  final QName memberTag=new QName(parser.getNamespace(),parser.getName());
  List<Polygon> polygons=new ArrayList<Polygon>(2);
  if (GML.surfaceMembers.equals(memberTag)) {
    while (true) {
      parser.nextTag();
      if (XmlPullParser.END_TAG == parser.getEventType() && GML.surfaceMembers.getLocalPart().equals(parser.getName())) {
        break;
      }
      Polygon p=parsePolygon(dimension,crs);
      polygons.add(p);
    }
    parser.nextTag();
  }
 else   if (GML.surfaceMember.equals(memberTag)) {
    while (true) {
      parser.nextTag();
      Polygon p=parsePolygon(dimension,crs);
      polygons.add(p);
      parser.nextTag();
      parser.require(XmlPullParser.END_TAG,GML.NAMESPACE,GML.surfaceMember.getLocalPart());
      parser.nextTag();
      if (XmlPullParser.END_TAG == parser.getEventType() && GML.MultiSurface.getLocalPart().equals(parser.getName())) {
        break;
      }
    }
  }
  parser.require(XmlPullParser.END_TAG,GML.NAMESPACE,GML.MultiSurface.getLocalPart());
  geom=geomFac.createMultiPolygon(polygons.toArray(new Polygon[polygons.size()]));
  return geom;
}
