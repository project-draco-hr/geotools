{
  final QName startingGeometryTagName=new QName(parser.getNamespace(),parser.getName());
  int dimension=crsDimension(2);
  CoordinateReferenceSystem crs=crs(DefaultGeographicCRS.WGS84);
  Geometry geom;
  if (GML.Point.equals(startingGeometryTagName)) {
    geom=parsePoint(dimension,crs);
  }
 else   if (GML.LineString.equals(startingGeometryTagName)) {
    geom=parseLineString(dimension,crs);
  }
 else   if (GML.Polygon.equals(startingGeometryTagName)) {
    geom=parsePolygon(dimension,crs);
  }
 else   if (GML.MultiPoint.equals(startingGeometryTagName)) {
    geom=parseMultiPoint(dimension,crs);
  }
 else   if (GML.MultiLineString.equals(startingGeometryTagName)) {
    geom=parseMultiLineString(dimension,crs);
  }
 else   if (GML.MultiSurface.equals(startingGeometryTagName)) {
    geom=parseMultiSurface(dimension,crs);
  }
 else   if (GML.MultiPolygon.equals(startingGeometryTagName)) {
    geom=parseMultiPolygon(dimension,crs);
  }
 else {
    throw new IllegalStateException("Unrecognized geometry element " + startingGeometryTagName);
  }
  parser.require(XmlPullParser.END_TAG,startingGeometryTagName.getNamespaceURI(),startingGeometryTagName.getLocalPart());
  return geom;
}
