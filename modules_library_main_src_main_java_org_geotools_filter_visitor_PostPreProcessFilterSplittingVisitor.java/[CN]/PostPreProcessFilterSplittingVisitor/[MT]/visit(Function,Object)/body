{
  if (!fcs.supports(expression.getClass())) {
    postStack.push(expression);
    return null;
  }
  if (expression.getName() == null) {
    postStack.push(expression);
    return null;
  }
  int i=postStack.size();
  int j=preStack.size();
  for (int k=0; k < expression.getParameters().size(); k++) {
    ((Expression)expression.getParameters().get(i)).accept(this,null);
    if (i < postStack.size()) {
      while (j < preStack.size())       preStack.pop();
      postStack.pop();
      postStack.push(expression);
      return null;
    }
  }
  while (j < preStack.size())   preStack.pop();
  preStack.push(expression);
  return null;
}
