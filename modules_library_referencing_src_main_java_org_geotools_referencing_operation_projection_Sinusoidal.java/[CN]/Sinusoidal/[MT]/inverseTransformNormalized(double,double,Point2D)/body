{
  double phi;
  double lam;
  if (isSpherical) {
    phi=y;
    lam=x / cos(y);
  }
 else {
    phi=inv_mlfn(y);
    double s=Math.abs(phi);
    double diff=Math.abs(s - HALFPI);
    if (diff < EPS10) {
      lam=0.;
    }
 else     if (s < HALFPI) {
      s=sin(phi);
      lam=(x * sqrt(1. - excentricitySquared * s * s) / cos(phi)) % Math.PI;
    }
 else {
      throw new ProjectionException(ErrorKeys.TOLERANCE_ERROR);
    }
  }
  if (ptDst != null) {
    ptDst.setLocation(lam,phi);
    return ptDst;
  }
 else {
    return new Point2D.Double(lam,phi);
  }
}
