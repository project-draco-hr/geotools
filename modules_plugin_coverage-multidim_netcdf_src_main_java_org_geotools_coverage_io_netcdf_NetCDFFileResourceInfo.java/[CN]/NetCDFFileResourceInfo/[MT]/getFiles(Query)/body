{
  List<CoverageSlice> fc=null;
  try {
    boolean sharedCatalog=slicesCatalog instanceof WrappedCoverageSlicesCatalog;
    Query updatedQuery=(query != null && sharedCatalog) ? query : new Query();
    if (sharedCatalog) {
      final List<SortBy> clauses=new ArrayList<SortBy>(1);
      clauses.add(new SortByImpl(FeatureUtilities.DEFAULT_FILTER_FACTORY.property(CoverageSlice.Attributes.LOCATION),SortOrder.ASCENDING));
      final SortBy[] sb=clauses.toArray(new SortBy[]{});
      final boolean isSortBySupported=slicesCatalog.getQueryCapabilities(coverageName).supportsSorting(sb);
      if (isSortBySupported) {
        updatedQuery.setSortBy(sb);
      }
    }
    updatedQuery.setTypeName(coverageName);
    fc=slicesCatalog.getGranules(updatedQuery);
    return sharedCatalog ? new WrappedCoverageSlicesToFileGroupIterator(fc) : new SimpleCoverageSlicesToFileGroupIterator(fc);
  }
 catch (  IOException ioe) {
    throw new RuntimeException(ioe);
  }
}
