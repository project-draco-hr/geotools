{
  if (typeName == null || sqlQuery == null) {
    throw new NullPointerException(typeName + "=" + sqlQuery);
  }
  String[] existingTypeNames=getTypeNames();
  for (int i=0; i < existingTypeNames.length; i++) {
    if (typeName.equalsIgnoreCase(existingTypeNames[i])) {
      throw new IllegalArgumentException(typeName + " already exists: " + existingTypeNames[i]);
    }
  }
  LOGGER.fine("registering view " + typeName + " as "+ sqlQuery);
  Connection conn=getConnection(Transaction.AUTO_COMMIT);
  ResultSetMetaData rsmd;
  try {
    Statement st=conn.createStatement();
    st.setMaxRows(1);
    ResultSet rs=st.executeQuery(sqlQuery);
    rsmd=rs.getMetaData();
    FIDMapper fidMapper=new NullFIDMapper();
    SimpleFeatureType viewType=buildSchema(typeName,rsmd);
    BypassSqlFeatureTypeHandler th=(BypassSqlFeatureTypeHandler)typeHandler;
    th.registerView(viewType,sqlQuery,fidMapper);
  }
 catch (  SQLException e) {
    LOGGER.log(Level.WARNING,"executing query " + sqlQuery,e);
    throw new DataSourceException("executing " + sqlQuery,e);
  }
 finally {
    try {
      conn.close();
    }
 catch (    Exception e) {
      LOGGER.warning(e.getMessage());
    }
  }
}
