{
  try {
    if (progress == null)     progress=new NullProgressListener();
    if (visitor instanceof MinVisitor) {
      progress.started();
      MinVisitor minCalc=(MinVisitor)visitor;
      Object min=min(minCalc.getExpression());
      if (min != null) {
        minCalc.setValue(min);
        isOptimized=true;
        progress.complete();
        return;
      }
 else {
        progress.warningOccurred("JDBCFeatureCollection.accepts(min,)",null,"Optimization attempt returned null");
      }
    }
 else     if (visitor instanceof MaxVisitor) {
      progress.started();
      MaxVisitor maxCalc=(MaxVisitor)visitor;
      Object max=max(maxCalc.getExpression());
      if (max != null) {
        maxCalc.setValue(max);
        isOptimized=true;
        progress.complete();
        return;
      }
 else {
        progress.warningOccurred("JDBCFeatureCollection.accepts(max,)",null,"Optimization attempt returned null");
      }
    }
 else     if (visitor instanceof MedianVisitor) {
    }
 else     if (visitor instanceof SumVisitor) {
      progress.started();
      SumVisitor sumCalc=(SumVisitor)visitor;
      Object sum=sum(sumCalc.getExpression());
      if (sum != null) {
        sumCalc.setValue(sum);
        isOptimized=true;
        progress.complete();
        return;
      }
 else {
        progress.warningOccurred("JDBCFeatureCollection.accepts(sum,)",null,"Optimization attempt returned null");
      }
    }
 else     if (visitor instanceof CountVisitor) {
      progress.started();
      CountVisitor countCalc=(CountVisitor)visitor;
      Object count=count(null);
      if (count != null) {
        countCalc.setValue(((Number)count).intValue());
        isOptimized=true;
        progress.complete();
        return;
      }
 else {
        progress.warningOccurred("JDBCFeatureCollection.accepts(count,)",null,"Optimization attempt returned null");
      }
    }
 else     if (visitor instanceof AverageVisitor) {
      progress.started();
      AverageVisitor averageCalc=(AverageVisitor)visitor;
      Object sum=sum(averageCalc.getExpression());
      Object count=count(null);
      if (sum != null && count != null) {
        averageCalc.setValue(((Number)count).intValue(),sum);
        isOptimized=true;
        progress.complete();
        return;
      }
 else {
        progress.warningOccurred("JDBCFeatureCollection.accepts(average,)",null,"Optimization attempt returned null");
      }
    }
 else     if (visitor instanceof UniqueVisitor) {
      progress.started();
      UniqueVisitor uniqueCalc=(UniqueVisitor)visitor;
      Object unique=unique(uniqueCalc.getExpression());
      if (unique != null) {
        uniqueCalc.setValue(unique);
        isOptimized=true;
        progress.complete();
        return;
      }
 else {
        progress.warningOccurred("JDBCFeatureCollection.accepts(unique,)",null,"Optimization attempt returned null");
      }
    }
    isOptimized=false;
    super.accepts(visitor,progress);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
