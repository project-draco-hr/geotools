{
  int index=-1;
  if (!Double.isNaN(knots)) {
    if (knots < 3) {
      index=0;
    }
 else {
      index=(int)((knots - 3.0) / 5.0 + 1);
    }
  }
  if (windBarbName.equalsIgnoreCase(DEFAULT_NAME)) {
    WindBarbDefinition definition=parseWindBarbsDefinition(params);
    Map<Integer,Shape> windbarbs=null;
synchronized (CACHE) {
      windbarbs=CACHE.get(definition);
      if (windbarbs == null) {
        windbarbs=new HashMap<Integer,Shape>();
        CACHE.put(definition,windbarbs);
        for (int i=0; i <= 20; i++) {
          windbarbs.put(i,new WindBarb(definition,i * 5).build());
        }
        windbarbs.put(-1,new WindBarb(definition,-1).build());
      }
    }
    final Shape shp=windbarbs.get(index);
    if (params == null || params.isEmpty()) {
      return shp;
    }
    if (params.containsKey("emisphere") && params.get("emisphere").equalsIgnoreCase("s")) {
      return SOUTHERN_EMISPHERE_FLIP.createTransformedShape(shp);
    }
    if (params.containsKey("hemisphere") && params.get("hemisphere").equalsIgnoreCase("s")) {
      return SOUTHERN_EMISPHERE_FLIP.createTransformedShape(shp);
    }
    return shp;
  }
  throw new IllegalArgumentException("Wrong windbard name:" + windBarbName);
}
