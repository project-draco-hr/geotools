{
  final int SIGN=0x80000000;
  final int POSITIVEINFINITY=0x7F800000;
  if (Float.isNaN(f)) {
    return f;
  }
  if (f == 0f) {
    final float smallestPositiveFloat=Float.intBitsToFloat(1);
    return (positive) ? smallestPositiveFloat : -smallestPositiveFloat;
  }
  final int bits=Float.floatToIntBits(f);
  int magnitude=bits & ~SIGN;
  if ((bits > 0) == positive) {
    if (magnitude != POSITIVEINFINITY) {
      magnitude++;
    }
  }
 else {
    magnitude--;
  }
  final int signbit=bits & SIGN;
  return Float.intBitsToFloat(magnitude | signbit);
}
