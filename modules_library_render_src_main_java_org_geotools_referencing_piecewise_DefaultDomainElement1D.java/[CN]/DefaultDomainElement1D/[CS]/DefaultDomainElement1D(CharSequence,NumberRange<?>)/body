{
  PiecewiseUtilities.ensureNonNull("name",name);
  PiecewiseUtilities.ensureNonNull("range",inputRange);
  this.name=SimpleInternationalString.wrap(name);
  this.range=inputRange;
  Class<? extends Number> type=inputRange.getElementClass();
  boolean minInc=inputRange.isMinIncluded();
  boolean maxInc=inputRange.isMaxIncluded();
  final double tempMin=inputRange.getMinimum();
  final double tempMax=inputRange.getMaximum();
  if (Double.isInfinite(tempMin)) {
    this.inputMinimum=tempMin;
    inputMinimumInf=true;
  }
 else   this.inputMinimum=PiecewiseUtilities.doubleValue(type,inputRange.getMinValue(),minInc ? 0 : +1);
  if (Double.isInfinite(tempMax)) {
    this.inputMaximum=tempMax;
    inputMaximumInf=true;
  }
 else   this.inputMaximum=PiecewiseUtilities.doubleValue(type,inputRange.getMaxValue(),maxInc ? 0 : -1);
  inputMinimumNaN=Double.isNaN(inputMinimum);
  inputMaximumNaN=Double.isNaN(inputMaximum);
  if ((inputMinimumNaN && !inputMaximumNaN) || (!inputMinimumNaN && inputMaximumNaN))   throw new IllegalArgumentException(Errors.format(ErrorKeys.BAD_RANGE_$2,inputRange.getMinValue(),inputRange.getMaxValue()));
}
