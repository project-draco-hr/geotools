{
  Throwable exception=null;
  for (int i=0; i < tasks.size(); i++) {
    Future<?> task=tasks.get(i);
    try {
      task.get();
      continue;
    }
 catch (    ExecutionException e) {
      if (exception == null) {
        exception=e.getCause();
      }
    }
catch (    InterruptedException e) {
    }
    abort();
    for (int j=tasks.size(); --j > i; ) {
      task=tasks.get(j);
      if (task.cancel(false)) {
        tasks.remove(j);
      }
    }
  }
  tasks.clear();
  if (exception != null) {
    if (exception instanceof IOException) {
      throw (IOException)exception;
    }
    if (exception instanceof RuntimeException) {
      throw (RuntimeException)exception;
    }
    if (exception instanceof Error) {
      throw (Error)exception;
    }
    throw new UndeclaredThrowableException(exception);
  }
}
