{
  for (  final Class<?> type : MosaicImageReader.Spi.INPUT_TYPES) {
    if (type.isInstance(input)) {
      final ImageReader reader=new MosaicImageReader();
      reader.setInput(input);
      if (filter(reader)) {
        return reader;
      }
      break;
    }
  }
  ImageInputStream stream=null;
  boolean createStream=false;
  do {
    final Object candidate;
    if (createStream) {
      stream=ImageIO.createImageInputStream(input);
      if (stream == null) {
        continue;
      }
      candidate=stream;
    }
 else {
      candidate=input;
    }
    final Iterator<ImageReader> readers=ImageIO.getImageReaders(candidate);
    while (readers.hasNext()) {
      final ImageReader reader=readers.next();
      reader.setInput(candidate);
      if (filter(reader)) {
        return reader;
      }
      reader.dispose();
    }
  }
 while ((createStream=!createStream) == true);
  if (stream != null) {
    stream.close();
  }
  throw new IIOException(Errors.format(ErrorKeys.NO_IMAGE_READER));
}
