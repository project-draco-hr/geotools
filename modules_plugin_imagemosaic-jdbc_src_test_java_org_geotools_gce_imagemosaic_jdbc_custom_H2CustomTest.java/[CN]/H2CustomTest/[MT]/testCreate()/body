{
  String createStmt="CREATE TABLE OEK ( level INT NOT NULL," + " RESX DOUBLE  ,  RESY DOUBLE,  ULX DOUBLE ,  ULY DOUBLE," + " Data BLOB,CONSTRAINT OEK_PK PRIMARY KEY(level))";
  try {
    InputStream worldIn=new URL("file:target/resources/baseimage/map.tfw").openStream();
    BufferedReader reader=new BufferedReader(new InputStreamReader(worldIn));
    double xRes=new Double(reader.readLine());
    reader.readLine();
    reader.readLine();
    double yRes=new Double(reader.readLine());
    double ulx=new Double(reader.readLine());
    double uly=new Double(reader.readLine());
    reader.close();
    URL baseImageUrl=new URL("file:target/resources/baseimage/map.tif");
    java.sql.Connection con=dialect.getConnection();
    con.prepareStatement(createStmt).execute();
    InputStream imageIn=baseImageUrl.openStream();
    ByteArrayOutputStream imageOut=new ByteArrayOutputStream();
    int in;
    while ((in=imageIn.read()) != -1) {
      imageOut.write(in);
    }
    PreparedStatement ps=con.prepareStatement("INSERT INTO oek values(?,?,?,?,?,?)");
    ps.setInt(1,0);
    ps.setDouble(2,xRes);
    ps.setDouble(3,yRes);
    ps.setDouble(4,ulx);
    ps.setDouble(5,uly);
    ps.setBytes(6,imageOut.toByteArray());
    ps.execute();
    imageIn=new URL("file:target/resources/baseimage/map.tif").openStream();
    BufferedImage baseImage=ImageIO.read(baseImageUrl);
    BufferedImage pyramid1=getNextPyramid(baseImage);
    imageOut=new ByteArrayOutputStream();
    ImageIO.write(pyramid1,"TIF",imageOut);
    ps.setInt(1,1);
    ps.setDouble(2,xRes * 2);
    ps.setDouble(3,yRes * 2);
    ps.setDouble(4,ulx);
    ps.setDouble(5,uly);
    ps.setBytes(6,imageOut.toByteArray());
    ps.execute();
    BufferedImage pyramid2=getNextPyramid(pyramid1);
    imageOut=new ByteArrayOutputStream();
    ImageIO.write(pyramid2,"TIF",imageOut);
    ps.setInt(1,2);
    ps.setDouble(2,xRes * 4);
    ps.setDouble(3,yRes * 4);
    ps.setDouble(4,ulx);
    ps.setDouble(5,uly);
    ps.setBytes(6,imageOut.toByteArray());
    ps.execute();
    ps.close();
    con.commit();
    con.close();
  }
 catch (  Exception e) {
    e.printStackTrace();
    Assert.fail(e.getMessage());
  }
}
