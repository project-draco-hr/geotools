{
  Collection half=randomPiece(features);
  Collection otherHalf=DataUtilities.list(features);
  otherHalf.removeAll(half);
  features.removeAll(half);
  assertTrue(features.containsAll(otherHalf));
  assertTrue(!features.containsAll(half));
  features.removeAll(otherHalf);
  assertTrue(features.size() == 0);
  features.addAll(half);
  assertTrue(features.containsAll(half));
  features.addAll(otherHalf);
  assertTrue(features.containsAll(otherHalf));
  features.retainAll(otherHalf);
  assertTrue(features.containsAll(otherHalf));
  assertTrue(!features.containsAll(half));
  features.addAll(otherHalf);
  Iterator i=features.iterator();
  while (i.hasNext()) {
    i.next();
    i.remove();
  }
  assertEquals(features.size(),0);
  SimpleFeatureTypeBuilder tb=new SimpleFeatureTypeBuilder();
  tb.setName("XXX");
  SimpleFeatureBuilder b=new SimpleFeatureBuilder(tb.buildFeatureType());
  assertTrue(!features.remove(b.buildFeature(null)));
}
