{
  final CoordinateReferenceSystem sourceCRS=operation.getSourceCRS();
  final CoordinateReferenceSystem targetCRS=operation.getTargetCRS();
  final Map<String,Object> properties=AbstractIdentifiedObject.getProperties(operation,null);
  properties.putAll(getTemporaryName(targetCRS,sourceCRS));
  if (operation instanceof ConcatenatedOperation) {
    final LinkedList<CoordinateOperation> inverted=new LinkedList<CoordinateOperation>();
    for (    final CoordinateOperation op : ((ConcatenatedOperation)operation).getOperations()) {
      inverted.addFirst(inverse(op));
    }
    return createConcatenatedOperation(properties,inverted.toArray(new CoordinateOperation[inverted.size()]));
  }
  final MathTransform transform=operation.getMathTransform().inverse();
  final Class<? extends CoordinateOperation> type=AbstractCoordinateOperation.getType(operation);
  final OperationMethod method=(operation instanceof Operation) ? ((Operation)operation).getMethod() : null;
  return createFromMathTransform(properties,targetCRS,sourceCRS,transform,method,type);
}
