{
  EFeatureInfo eStructure=getStructure();
  EFeatureStatus s;
  if (!(s=eStructure.validate(newData)).isSuccess()) {
    throw new IllegalArgumentException(s.getMessage());
  }
  ETransform eTransform=new ETransform();
  eTransform.oldType=getData().getType();
  eTransform.newType=newData.getType();
  eTransform.oldCRS=eTransform.oldType.getCoordinateReferenceSystem();
  eTransform.newCRS=eTransform.newType.getCoordinateReferenceSystem();
  try {
    eTransform.transform=CRS.findMathTransform(eTransform.newCRS,eTransform.oldCRS,true);
  }
 catch (  FactoryException e) {
    throw new IllegalArgumentException("Tranform from " + "'" + eTransform.newCRS + "' to '"+ eTransform.oldCRS+ "' not possible");
  }
  eTransform.isIdentity=(eTransform.transform instanceof IdentityTransform);
  if (!eTransform.isIdentity) {
    eTransform.newSRID=CRS.toSRS(eTransform.newCRS,true);
  }
  eTransform.eValueMap=new HashMap<EAttribute,Object>();
  for (  Property it : newData.getProperties()) {
    String eName=it.getName().getLocalPart();
    EAttribute eAttribute=eStructure.getEAttribute(eName);
    if (eAttribute != null) {
      Object value=it.getValue();
      if (value instanceof Geometry) {
        try {
          value=JTS.transform((Geometry)value,eTransform.transform);
        }
 catch (        Exception e) {
          throw new IllegalArgumentException("Failed to " + "transform geometry: " + it);
        }
      }
      eTransform.eValueMap.put(eAttribute,value);
    }
  }
  return eTransform;
}
