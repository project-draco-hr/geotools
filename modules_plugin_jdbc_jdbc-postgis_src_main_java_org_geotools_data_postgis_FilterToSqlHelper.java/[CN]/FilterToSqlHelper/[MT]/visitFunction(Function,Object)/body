{
  if (function instanceof FilterFunction_strConcat) {
    Expression s1=getParameter(function,0,true);
    Expression s2=getParameter(function,1,true);
    out.write("(");
    s1.accept(delegate,String.class);
    out.write(" || ");
    s2.accept(delegate,String.class);
    out.write(")");
  }
 else   if (function instanceof FilterFunction_strEndsWith) {
    Expression str=getParameter(function,0,true);
    Expression end=getParameter(function,1,true);
    out.write("(");
    str.accept(delegate,String.class);
    out.write(" LIKE ");
    if (end instanceof Literal) {
      out.write("'%" + end.evaluate(null,String.class) + "'");
    }
 else {
      out.write("('%' || ");
      end.accept(delegate,String.class);
      out.write(")");
    }
    out.write(")");
  }
 else   if (function instanceof FilterFunction_strStartsWith) {
    Expression str=getParameter(function,0,true);
    Expression start=getParameter(function,1,true);
    out.write("(");
    str.accept(delegate,String.class);
    out.write(" LIKE ");
    if (start instanceof Literal) {
      out.write("'" + start.evaluate(null,String.class) + "%'");
    }
 else {
      out.write("(");
      start.accept(delegate,String.class);
      out.write(" || '%')");
    }
    out.write(")");
  }
 else   if (function instanceof FilterFunction_strEqualsIgnoreCase) {
    Expression first=getParameter(function,0,true);
    Expression second=getParameter(function,1,true);
    out.write("(lower(");
    first.accept(delegate,String.class);
    out.write(") = lower(");
    second.accept(delegate,String.class);
    out.write("::text))");
  }
 else   if (function instanceof FilterFunction_strIndexOf) {
    Expression first=getParameter(function,0,true);
    Expression second=getParameter(function,1,true);
    out.write("(strpos(");
    first.accept(delegate,String.class);
    out.write(", ");
    second.accept(delegate,String.class);
    out.write(") - 1)");
  }
 else   if (function instanceof FilterFunction_strSubstring) {
    Expression string=getParameter(function,0,true);
    Expression start=getParameter(function,1,true);
    Expression end=getParameter(function,2,true);
    out.write("substr(");
    string.accept(delegate,String.class);
    out.write(", ");
    start.accept(delegate,Integer.class);
    out.write(" + 1, (");
    end.accept(delegate,Integer.class);
    out.write(" - ");
    start.accept(delegate,Integer.class);
    out.write("))");
  }
 else   if (function instanceof FilterFunction_strSubstringStart) {
    Expression string=getParameter(function,0,true);
    Expression start=getParameter(function,1,true);
    out.write("substr(");
    string.accept(delegate,String.class);
    out.write(", ");
    start.accept(delegate,Integer.class);
    out.write(" + 1)");
  }
 else   if (function instanceof FilterFunction_strTrim) {
    Expression string=getParameter(function,0,true);
    out.write("trim(both ' ' from ");
    string.accept(delegate,String.class);
    out.write(")");
  }
 else {
    return false;
  }
  return true;
}
