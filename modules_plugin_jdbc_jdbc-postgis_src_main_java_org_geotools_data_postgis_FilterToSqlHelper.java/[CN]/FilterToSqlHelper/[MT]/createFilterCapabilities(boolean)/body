{
  FilterCapabilities caps=new FilterCapabilities();
  caps.addAll(SQLDialect.BASE_DBMS_CAPABILITIES);
  caps.addType(BBOX.class);
  caps.addType(Contains.class);
  caps.addType(Crosses.class);
  caps.addType(Disjoint.class);
  caps.addType(Equals.class);
  caps.addType(Intersects.class);
  caps.addType(Overlaps.class);
  caps.addType(Touches.class);
  caps.addType(Within.class);
  caps.addType(DWithin.class);
  caps.addType(Beyond.class);
  caps.addType(After.class);
  caps.addType(Before.class);
  caps.addType(Begins.class);
  caps.addType(BegunBy.class);
  caps.addType(During.class);
  caps.addType(TOverlaps.class);
  caps.addType(Ends.class);
  caps.addType(EndedBy.class);
  caps.addType(TEquals.class);
  if (encodeFunctions) {
    caps.addType(FilterFunction_strConcat.class);
    caps.addType(FilterFunction_strEndsWith.class);
    caps.addType(FilterFunction_strStartsWith.class);
    caps.addType(FilterFunction_strEqualsIgnoreCase.class);
    caps.addType(FilterFunction_strIndexOf.class);
    caps.addType(FilterFunction_strLength.class);
    caps.addType(FilterFunction_strToLowerCase.class);
    caps.addType(FilterFunction_strToUpperCase.class);
    caps.addType(FilterFunction_strReplace.class);
    caps.addType(FilterFunction_strSubstring.class);
    caps.addType(FilterFunction_strSubstringStart.class);
    caps.addType(FilterFunction_strTrim.class);
    caps.addType(FilterFunction_strTrim2.class);
    caps.addType(FilterFunction_abs.class);
    caps.addType(FilterFunction_abs_2.class);
    caps.addType(FilterFunction_abs_3.class);
    caps.addType(FilterFunction_abs_4.class);
    caps.addType(FilterFunction_ceil.class);
    caps.addType(FilterFunction_floor.class);
  }
  return caps;
}
