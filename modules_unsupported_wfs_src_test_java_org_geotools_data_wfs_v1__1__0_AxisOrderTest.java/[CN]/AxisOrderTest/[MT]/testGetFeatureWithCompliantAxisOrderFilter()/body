{
  final InputStream dataStream=TestData.openStream(this,"axisorder/GetFeaturesByBBox.xml");
  TestHttpResponse httpResponse=new TestHttpResponse("text/xml; subtype=gml/3.1.1","UTF-8",dataStream);
  TestHttpProtocol mockHttp=new TestHttpProtocol(httpResponse);
  createTestProtocol("axisorder/GetCapabilities.xml",mockHttp);
  URL describeUrl=TestData.getResource(this,"axisorder/DescribeFeatureType.xsd");
  wfs.setDescribeFeatureTypeURLOverride(describeUrl);
  WFS_1_1_0_DataStore ds=new WFS_1_1_0_DataStore(wfs);
  ds.setAxisOrder(WFSDataStore.AXIS_ORDER_COMPLIANT,WFSDataStore.AXIS_ORDER_COMPLIANT);
  FilterFactory2 ff=CommonFactoryFinder.getFilterFactory2();
  Set<FeatureId> fids=new HashSet<FeatureId>();
  fids.add(new FeatureIdImpl("comuni11.2671"));
  Query query=new Query(typeName,ff.bbox("the_geom",4623055.0,815134.0,4629904.0,820740.0,"EPSG:3857"));
  SimpleFeatureSource source=ds.getFeatureSource(typeName);
  source.getFeatures(query).features();
  BBOX filter=(BBOX)wfs.getRequest().getFilter();
  assertEquals(4623055.0,filter.getMinX(),0.0);
  assertEquals(815134.0,filter.getMinY(),0.0);
  assertEquals(4629904.0,filter.getMaxX(),0.0);
  assertEquals(820740.0,filter.getMaxY(),0.0);
}
