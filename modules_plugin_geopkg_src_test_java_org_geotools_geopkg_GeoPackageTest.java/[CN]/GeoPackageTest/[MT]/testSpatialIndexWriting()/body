{
  ShapefileDataStore shp=new ShapefileDataStore(setUpShapefile());
  SimpleFeatureCollection coll=shp.getFeatureSource().getFeatures();
  FeatureEntry entry=new FeatureEntry();
  entry.setBounds(coll.getBounds());
  geopkg.create(entry,shp.getSchema());
  try (SimpleFeatureIterator it=coll.features()){
    try (Transaction tx=new DefaultTransaction();SimpleFeatureWriter w=geopkg.writer(entry,true,null,tx)){
      for (int i=0; i < 3; i++) {
        SimpleFeature f=it.next();
        SimpleFeature g=w.next();
        for (        PropertyDescriptor pd : coll.getSchema().getDescriptors()) {
          String name=pd.getName().getLocalPart();
          g.setAttribute(name,f.getAttribute(name));
        }
        w.write();
      }
      tx.commit();
    }
     geopkg.createSpatialIndex(entry);
    try (Transaction tx=new DefaultTransaction();SimpleFeatureWriter w=geopkg.writer(entry,true,null,tx)){
      while (it.hasNext()) {
        SimpleFeature f=it.next();
        SimpleFeature g=w.next();
        for (        PropertyDescriptor pd : coll.getSchema().getDescriptors()) {
          String name=pd.getName().getLocalPart();
          g.setAttribute(name,f.getAttribute(name));
        }
        w.write();
      }
      tx.commit();
    }
   }
   try (Connection cx=geopkg.getDataSource().getConnection();Statement st=cx.createStatement()){
    ResultSet rs=st.executeQuery("SELECT COUNT(*) FROM rtree_bugsites_the_geom");
    rs.next();
    assertEquals(rs.getInt(1),coll.size());
  }
 }
