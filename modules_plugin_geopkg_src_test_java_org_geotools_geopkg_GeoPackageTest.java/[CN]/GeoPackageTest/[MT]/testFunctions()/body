{
  ShapefileDataStore shp=new ShapefileDataStore(setUpShapefile());
  SimpleFeatureReader re=Features.simple(shp.getFeatureReader());
  FeatureEntry entry=new FeatureEntry();
  geopkg.add(entry,shp.getFeatureSource(),null);
  Connection cx=geopkg.getDataSource().getConnection();
  Statement st=cx.createStatement();
  try {
    while (re.hasNext()) {
      SimpleFeature f=re.next();
      ResultSet rs=st.executeQuery((String.format("SELECT ST_MinX(the_geom), ST_MinY(the_geom), ST_MaxX(the_geom), ST_MaxY(the_geom), ST_IsEmpty(the_geom) FROM bugsites WHERE ID=" + f.getProperty("ID").getValue())));
      assertEquals(rs.getDouble(1),((Geometry)f.getDefaultGeometry()).getEnvelopeInternal().getMinX(),0.0001);
      assertEquals(rs.getDouble(2),((Geometry)f.getDefaultGeometry()).getEnvelopeInternal().getMinY(),0.0001);
      assertEquals(rs.getDouble(3),((Geometry)f.getDefaultGeometry()).getEnvelopeInternal().getMaxX(),0.0001);
      assertEquals(rs.getDouble(4),((Geometry)f.getDefaultGeometry()).getEnvelopeInternal().getMaxY(),0.0001);
      assertEquals(rs.getDouble(5) == 1,((Geometry)f.getDefaultGeometry()).isEmpty());
      rs.close();
    }
  }
 catch (  Exception e) {
    fail(e.getMessage());
  }
 finally {
    st.close();
    cx.close();
    re.close();
  }
}
