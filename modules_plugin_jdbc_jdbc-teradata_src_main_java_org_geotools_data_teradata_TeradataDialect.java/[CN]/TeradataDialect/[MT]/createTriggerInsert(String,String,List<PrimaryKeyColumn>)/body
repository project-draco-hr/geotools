{
  StringBuffer buf=new StringBuffer();
  for (int i=0; i < primaryKeys.size(); i++) {
    encodeColumnName(primaryKeys.get(i).getName(),buf);
    if (i + 1 < primaryKeys.size()) {
      buf.append(',');
    }
  }
  String tinsert="INSERT INTO {0} SELECT " + buf.toString() + ","+ "      sysspatial.tessellate_index("+ "      \"{1}\".ST_MBR().Xmin(), "+ "      \"{1}\".ST_MBR().Ymin(), "+ "      \"{1}\".ST_MBR().Xmax(), "+ "      \"{1}\".ST_MBR().Ymax(), "+ "      {2,number,0.0#}, {3,number,0.0#}, {4,number,0.0#}, {5,number,0.0#}, "+ "      {6,number,0}, {7,number,0}, {8,number,0}, {9,number,0.0#}, {10,number,0})"+ " from nt WHERE {1} IS NOT NULL;";
  int west=-180;
  int south=-90;
  int east=180;
  int north=90;
  int nx=1000;
  int ny=1000;
  int level=3;
  double scale=.01;
  int shift=0;
  return MessageFormat.format(tinsert,indexTable,geometryName,west,south,east,north,nx,ny,level,scale,shift);
}
