{
  if (type == String.class || type == Object.class) {
    return "";
  }
  if (type == Integer.class) {
    return new Integer(0);
  }
  if (type == Double.class) {
    return new Double(0);
  }
  if (type == Long.class) {
    return new Long(0);
  }
  if (type == Short.class) {
    return new Short((short)0);
  }
  if (type == Float.class) {
    return new Float(0.0f);
  }
  if (type == BigDecimal.class) {
    return BigDecimal.valueOf(0);
  }
  if (type == BigInteger.class) {
    return BigInteger.valueOf(0);
  }
  if (type == Character.class) {
    return new Character(' ');
  }
  if (type == Boolean.class) {
    return Boolean.FALSE;
  }
  if (type == UUID.class) {
    return UUID.fromString("00000000-0000-0000-0000-000000000000");
  }
  if (type == Timestamp.class)   return new Timestamp(System.currentTimeMillis());
  if (type == java.sql.Date.class)   return new java.sql.Date(System.currentTimeMillis());
  if (type == java.sql.Time.class)   return new java.sql.Time(System.currentTimeMillis());
  if (type == java.util.Date.class)   return new java.util.Date();
  GeometryFactory fac=new GeometryFactory();
  Coordinate coordinate=new Coordinate(0,0);
  Point point=fac.createPoint(coordinate);
  if (type == Point.class) {
    return point;
  }
  if (type == MultiPoint.class) {
    return fac.createMultiPoint(new Point[]{point});
  }
  if (type == LineString.class) {
    return fac.createLineString(new Coordinate[]{coordinate,coordinate,coordinate,coordinate});
  }
  LinearRing linearRing=fac.createLinearRing(new Coordinate[]{coordinate,coordinate,coordinate,coordinate});
  if (type == LinearRing.class) {
    return linearRing;
  }
  if (type == MultiLineString.class) {
    return fac.createMultiLineString(new LineString[]{linearRing});
  }
  Polygon polygon=fac.createPolygon(linearRing,new LinearRing[0]);
  if (type == Polygon.class) {
    return polygon;
  }
  if (type == MultiPolygon.class) {
    return fac.createMultiPolygon(new Polygon[]{polygon});
  }
  throw new IllegalArgumentException(type + " is not supported by this method");
}
