{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(1,geometry_);
  }
  if (idTypeCase_ == 11) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(11,getIdBytes());
  }
  if (idTypeCase_ == 12) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt64Size(12,(long)((Long)idType_));
  }
  for (int i=0; i < values_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(13,values_.get(i));
  }
{
    int dataSize=0;
    for (int i=0; i < properties_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(properties_.get(i));
    }
    size+=dataSize;
    if (!getPropertiesList().isEmpty()) {
      size+=1;
      size+=com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
    }
    propertiesMemoizedSerializedSize=dataSize;
  }
{
    int dataSize=0;
    for (int i=0; i < customProperties_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(customProperties_.get(i));
    }
    size+=dataSize;
    if (!getCustomPropertiesList().isEmpty()) {
      size+=1;
      size+=com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
    }
    customPropertiesMemoizedSerializedSize=dataSize;
  }
  size+=unknownFields.size();
  memoizedSerializedSize=size;
  return size;
}
