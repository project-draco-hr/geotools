{
  initFields();
  int mutable_bitField0_=0;
  com.google.protobuf.ByteString.Output unknownFieldsOutput=com.google.protobuf.ByteString.newOutput();
  com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput=com.google.protobuf.CodedOutputStream.newInstance(unknownFieldsOutput);
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFieldsCodedOutput,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 10:
{
    Geobuf.Data.Geometry.Builder subBuilder=null;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      subBuilder=geometry_.toBuilder();
    }
    geometry_=input.readMessage(Geobuf.Data.Geometry.PARSER,extensionRegistry);
    if (subBuilder != null) {
      subBuilder.mergeFrom(geometry_);
      geometry_=subBuilder.buildPartial();
    }
    bitField0_|=0x00000001;
    break;
  }
case 90:
{
  com.google.protobuf.ByteString bs=input.readBytes();
  idTypeCase_=11;
  idType_=bs;
  break;
}
case 96:
{
idTypeCase_=12;
idType_=input.readSInt64();
break;
}
case 106:
{
if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
values_=new java.util.ArrayList<Value>();
mutable_bitField0_|=0x00000008;
}
values_.add(input.readMessage(Geobuf.Data.Value.PARSER,extensionRegistry));
break;
}
case 112:
{
if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
properties_=new java.util.ArrayList<Integer>();
mutable_bitField0_|=0x00000010;
}
properties_.add(input.readUInt32());
break;
}
case 114:
{
int length=input.readRawVarint32();
int limit=input.pushLimit(length);
if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
properties_=new java.util.ArrayList<Integer>();
mutable_bitField0_|=0x00000010;
}
while (input.getBytesUntilLimit() > 0) {
properties_.add(input.readUInt32());
}
input.popLimit(limit);
break;
}
case 120:
{
if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
customProperties_=new java.util.ArrayList<Integer>();
mutable_bitField0_|=0x00000020;
}
customProperties_.add(input.readUInt32());
break;
}
case 122:
{
int length=input.readRawVarint32();
int limit=input.pushLimit(length);
if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
customProperties_=new java.util.ArrayList<Integer>();
mutable_bitField0_|=0x00000020;
}
while (input.getBytesUntilLimit() > 0) {
customProperties_.add(input.readUInt32());
}
input.popLimit(limit);
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
values_=java.util.Collections.unmodifiableList(values_);
}
if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
properties_=java.util.Collections.unmodifiableList(properties_);
}
if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
customProperties_=java.util.Collections.unmodifiableList(customProperties_);
}
try {
unknownFieldsCodedOutput.flush();
}
 catch (java.io.IOException e) {
}
 finally {
unknownFields=unknownFieldsOutput.toByteString();
}
makeExtensionsImmutable();
}
}
