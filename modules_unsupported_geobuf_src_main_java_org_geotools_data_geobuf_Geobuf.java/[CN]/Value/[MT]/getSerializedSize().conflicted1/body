{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
{
    int dataSize=0;
    for (int i=0; i < keys_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(keys_.getByteString(i));
    }
    size+=dataSize;
    size+=1 * getKeysList().size();
  }
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(2,dimensions_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(3,precision_);
  }
  if (dataTypeCase_ == 4) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(4,(Geobuf.Data.FeatureCollection)dataType_);
  }
  if (dataTypeCase_ == 5) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,(Geobuf.Data.Feature)dataType_);
  }
  if (dataTypeCase_ == 6) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,(Geobuf.Data.Geometry)dataType_);
  }
  size+=unknownFields.size();
  memoizedSerializedSize=size;
  return size;
}
