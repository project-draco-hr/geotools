{
switch (eDataType.getClassifierID()) {
case GmlPackage.TIME_INDETERMINATE_VALUE_TYPE:
    return convertTimeIndeterminateValueTypeToString(eDataType,instanceValue);
case GmlPackage.DOUBLE_LIST:
  return convertDoubleListToString(eDataType,instanceValue);
case GmlPackage.INTEGER_LIST:
return convertIntegerListToString(eDataType,instanceValue);
case GmlPackage.NAME_LIST:
return convertNameListToString(eDataType,instanceValue);
case GmlPackage.TEMPORAL_POSITION_TYPE:
return convertTemporalPositionTypeToString(eDataType,instanceValue);
case GmlPackage.TIME_DURATION_TYPE:
return convertTimeDurationTypeToString(eDataType,instanceValue);
case GmlPackage.TIME_INDETERMINATE_VALUE_TYPE_OBJECT:
return convertTimeIndeterminateValueTypeObjectToString(eDataType,instanceValue);
case GmlPackage.VECTOR_TYPE_BASE:
return convertVectorTypeBaseToString(eDataType,instanceValue);
case GmlPackage.GRID_ENVELOPE:
return convertGridEnvelopeToString(eDataType,instanceValue);
default :
throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
}
}
