{
switch (eDataType.getClassifierID()) {
case GmlPackage.TIME_INDETERMINATE_VALUE_TYPE:
    return createTimeIndeterminateValueTypeFromString(eDataType,initialValue);
case GmlPackage.DOUBLE_LIST:
  return createDoubleListFromString(eDataType,initialValue);
case GmlPackage.INTEGER_LIST:
return createIntegerListFromString(eDataType,initialValue);
case GmlPackage.NAME_LIST:
return createNameListFromString(eDataType,initialValue);
case GmlPackage.TEMPORAL_POSITION_TYPE:
return createTemporalPositionTypeFromString(eDataType,initialValue);
case GmlPackage.TIME_DURATION_TYPE:
return createTimeDurationTypeFromString(eDataType,initialValue);
case GmlPackage.TIME_INDETERMINATE_VALUE_TYPE_OBJECT:
return createTimeIndeterminateValueTypeObjectFromString(eDataType,initialValue);
case GmlPackage.VECTOR_TYPE_BASE:
return createVectorTypeBaseFromString(eDataType,initialValue);
case GmlPackage.GRID_ENVELOPE:
return createGridEnvelopeFromString(eDataType,initialValue);
default :
throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
}
}
