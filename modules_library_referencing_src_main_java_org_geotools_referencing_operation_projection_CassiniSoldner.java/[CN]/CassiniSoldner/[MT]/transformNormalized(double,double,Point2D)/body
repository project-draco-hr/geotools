{
  double sinphi=Math.sin(phi);
  double cosphi=Math.cos(phi);
  double n=1.0 / (Math.sqrt(1.0 - excentricitySquared * sinphi * sinphi));
  double tn=Math.tan(phi);
  double t=tn * tn;
  double a1=lam * cosphi;
  double c=cosphi * cosphi * excentricitySquared / (1 - excentricitySquared);
  double a2=a1 * a1;
  double x=n * a1 * (1.0 - a2 * t * (C1 - (8.0 - t + 8.0 * c) * a2 * C2));
  double y=(mlfn(phi,sinphi,cosphi)) - ml0 + n * tn * a2* (0.5 + (5.0 - t + 6.0 * c) * a2 * C3);
  if (ptDst != null) {
    ptDst.setLocation(x,y);
    return ptDst;
  }
  return new Point2D.Double(x,y);
}
