{
  int s1a=UBYTE_MAX_VALUE - sa;
  int d1a=UBYTE_MAX_VALUE - da;
  int drsa=dr * sa;
  int dgsa=dg * sa;
  int dbsa=db * sa;
  int srda=sr * da;
  int sgda=sg * da;
  int sbda=sb * da;
  int sada=sa * da;
  result[RED]=(((srda + drsa <= sada) ? sr * d1a + dr * s1a : (sr > 0 ? sa * (srda + drsa - sada) / sr + sr * d1a + dr * s1a + UBYTE_MAX_VALUE : 0)) >> SHIFT8);
  result[GREEN]=(((sgda + dgsa <= sada) ? sg * d1a + dg * s1a : (sg > 0 ? sa * (sgda + dgsa - sada) / sg + sg * d1a + dg * s1a + UBYTE_MAX_VALUE : 0)) >> SHIFT8);
  result[BLUE]=(((sbda + dbsa <= sada) ? sb * d1a + db * s1a : (sb > 0 ? sa * (sbda + dbsa - sada) / sb + sb * d1a + db * s1a + UBYTE_MAX_VALUE : 0)) >> SHIFT8);
  result[ALPHA]=(sa + da - ((sada + UBYTE_MAX_VALUE) >> SHIFT8));
}
