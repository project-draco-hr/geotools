{
  final PlanarImage image=readImage(spi,input,imageIndex,useJAI,imageReadParam,useMultithreading);
  if (newTransform) {
    final int ssWidth=image.getWidth();
    final int ssHeight=image.getHeight();
    final Rectangle sourceRegion=imageReadParam.getSourceRegion();
    final double scaleX=sourceRegion.width / (1.0 * ssWidth);
    final double scaleY=sourceRegion.height / (1.0 * ssHeight);
    final double translateX=sourceRegion.x;
    final double translateY=sourceRegion.y;
    return Utilities.createCoverageFromImage(coverageFactory,coverageName,imageIndex,image,ConcatenatedTransform.create(ProjectiveTransform.create(new AffineTransform(scaleX,0,0,scaleY,translateX,translateY)),raster2Model),coordinateReferenceSystem,(GeneralEnvelope)null,sampleDimensions,true);
  }
 else {
    return Utilities.createCoverageFromImage(coverageFactory,coverageName,imageIndex,image,(MathTransform)null,(CoordinateReferenceSystem)null,coverageEnvelope2D,sampleDimensions,true);
  }
}
