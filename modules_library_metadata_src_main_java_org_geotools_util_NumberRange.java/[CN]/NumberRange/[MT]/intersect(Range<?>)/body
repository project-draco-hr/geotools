{
  final Class<? extends Number> rangeType=getElementClass(range);
  Class<? extends Number> type=getWidestClass(elementClass,rangeType);
  range=castTo((Class)type).intersectNC(convertAndCast((Range)range,(Class)type));
  type=getFinestClass(elementClass,rangeType);
  if (range.minValue != null) {
    type=getWidestClass(type,getFinestClass(((Number)range.minValue).doubleValue()));
  }
  if (range.maxValue != null) {
    type=getWidestClass(type,getFinestClass(((Number)range.maxValue).doubleValue()));
  }
  return convertAndCast((Range)range,(Class)type);
}
