{
  boolean select;
  Object arg1;
  Object arg2;
  try {
    select=(getExpression(0).evaluate(feature,Boolean.class));
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Filter Function problem for function if_then_else argument #0 - expected type boolean");
  }
  if (select) {
    try {
      arg1=(Object)getExpression(1).evaluate(feature);
      return arg1;
    }
 catch (    Exception e) {
      throw new IllegalArgumentException("Filter Function problem for function if_then_else argument #1 - expected type Object");
    }
  }
 else {
    try {
      arg2=(Object)getExpression(2).evaluate(feature);
      return arg2;
    }
 catch (    Exception e) {
      throw new IllegalArgumentException("Filter Function problem for function if_then_else argument #2 - expected type Object");
    }
  }
}
