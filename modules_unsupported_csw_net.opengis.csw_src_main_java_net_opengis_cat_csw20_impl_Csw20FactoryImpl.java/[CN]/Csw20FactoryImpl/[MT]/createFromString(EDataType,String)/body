{
switch (eDataType.getClassifierID()) {
case Csw20Package.ELEMENT_SET_TYPE:
    return createElementSetTypeFromString(eDataType,initialValue);
case Csw20Package.RESULT_TYPE:
  return createResultTypeFromString(eDataType,initialValue);
case Csw20Package.TYPE_NAME_LIST_TYPE:
return createTypeNameListTypeFromString(eDataType,initialValue);
case Csw20Package.SERVICE_TYPE:
return createServiceTypeFromString(eDataType,initialValue);
case Csw20Package.TYPE_NAME_LIST_TYPE_1:
return createTypeNameListType_1FromString(eDataType,initialValue);
case Csw20Package.SERVICE_TYPE_1:
return createServiceType_1FromString(eDataType,initialValue);
case Csw20Package.VERSION_TYPE:
return createVersionTypeFromString(eDataType,initialValue);
case Csw20Package.CALENDAR:
return createCalendarFromString(eDataType,initialValue);
case Csw20Package.SET:
return createSetFromString(eDataType,initialValue);
case Csw20Package.URI:
return createURIFromString(eDataType,initialValue);
case Csw20Package.QNAME:
return createQNameFromString(eDataType,initialValue);
case Csw20Package.DURATION:
return createDurationFromString(eDataType,initialValue);
case Csw20Package.MAP:
return createMapFromString(eDataType,initialValue);
default :
throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
}
}
