{
  final Set identifiers=factory.getAuthorityCodes(CoordinateOperation.class);
  double min=Double.POSITIVE_INFINITY;
  double max=Double.NEGATIVE_INFINITY;
  double sum=0;
  int count=0;
  int created=0;
  int valid=0;
  for (final Iterator it=identifiers.iterator(); it.hasNext(); ) {
    final CoordinateOperation operation;
    final String code=(String)it.next();
    final int n=Integer.parseInt(code);
    if (n >= 10087 && n <= 10088) {
      continue;
    }
    ++count;
    if (!extensive && (count % 20) != 0) {
      continue;
    }
    try {
      operation=factory.createCoordinateOperation(code);
    }
 catch (    FactoryException exception) {
      if (exception.getCause() instanceof SQLException) {
        throw exception;
      }
      continue;
    }
    created++;
    assertNotNull(operation);
    final double accuracy=AbstractCoordinateOperation.getAccuracy(operation);
    assertFalse(accuracy < 0);
    if (!Double.isNaN(accuracy)) {
      if (accuracy < min)       min=accuracy;
      if (accuracy > max)       max=accuracy;
      sum+=accuracy;
      valid++;
    }
  }
  if (verbose) {
    System.out.print("Number of coordinate operations:    ");
    System.out.println(identifiers.size());
    System.out.print("Number of tested operations:        ");
    System.out.println(count);
    System.out.print("Number of recognized operations:    ");
    System.out.println(created);
    System.out.print("Number of operations with accuracy: ");
    System.out.println(valid);
    System.out.print("Minimal accuracy value (meters):    ");
    System.out.println(min);
    System.out.print("Maximal accuracy value (meters):    ");
    System.out.println(max);
    System.out.print("Average accuracy value (meters):    ");
    System.out.println(sum / valid);
  }
}
