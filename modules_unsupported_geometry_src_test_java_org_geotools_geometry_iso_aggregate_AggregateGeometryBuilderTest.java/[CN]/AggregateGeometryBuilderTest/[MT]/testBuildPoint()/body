{
  PositionFactory posFactory=builder.getPositionFactory();
  DirectPosition position=posFactory.createDirectPosition(new double[]{48.44,-123.37});
  PrimitiveFactory primitiveFactory=builder.getPrimitiveFactory();
  System.out.println(primitiveFactory.getCoordinateReferenceSystem());
  Point point=primitiveFactory.createPoint(new double[]{48.44,-123.37});
  assertTrue(position.equals(point.getCentroid()));
  builder.setCoordianteReferenceSystem(DefaultGeographicCRS.WGS84_3D);
  PrimitiveFactory primitiveFactory3D=builder.getPrimitiveFactory();
  Point point3D=primitiveFactory3D.createPoint(new double[]{48.44,-123.37,1.0});
  assertFalse(point.getCoordinateReferenceSystem().equals(point3D.getCoordinateReferenceSystem()));
  assertFalse(point.equals(point3D));
  builder.setCoordianteReferenceSystem(DefaultGeographicCRS.WGS84);
  PositionFactory pf=builder.getPositionFactory();
  PrimitiveFactoryImpl primf=(PrimitiveFactoryImpl)builder.getPrimitiveFactory();
  AggregateFactory agf=builder.getAggregateFactory();
  List<DirectPosition> directPositionList=new ArrayList<DirectPosition>();
  directPositionList.add(pf.createDirectPosition(new double[]{20,10}));
  directPositionList.add(pf.createDirectPosition(new double[]{40,10}));
  directPositionList.add(pf.createDirectPosition(new double[]{50,40}));
  directPositionList.add(pf.createDirectPosition(new double[]{30,50}));
  directPositionList.add(pf.createDirectPosition(new double[]{10,30}));
  directPositionList.add(pf.createDirectPosition(new double[]{20,10}));
  Ring exteriorRing=primf.createRingByDirectPositions(directPositionList);
  List<Ring> interiors=new ArrayList<Ring>();
  SurfaceBoundary surfaceBoundary1=primf.createSurfaceBoundary(exteriorRing,interiors);
  Surface surface=primf.createSurface(surfaceBoundary1);
  Set<OrientableSurface> surfaces=new HashSet<OrientableSurface>();
  surfaces.add(surface);
  MultiSurface ms=agf.createMultiSurface(surfaces);
  assertTrue(ms.equals(new MultiSurfaceImpl(ms.getCoordinateReferenceSystem(),surfaces)));
}
