{
  BufferedImage image=new BufferedImage(256,256,BufferedImage.TYPE_4BYTE_ABGR);
  Graphics g=image.getGraphics();
  g.setColor(Color.WHITE);
  g.fillRect(0,0,10,10);
  g.setColor(Color.RED);
  g.fillRect(10,0,10,10);
  g.setColor(Color.BLUE);
  g.fillRect(20,0,10,10);
  g.setColor(Color.GREEN);
  g.fillRect(30,0,10,10);
  g.dispose();
  CustomPaletteBuilder builder=new CustomPaletteBuilder(image,255,1,1,1);
  builder.buildPalette();
  RenderedImage indexed=builder.getIndexedImage();
  assertTrue(indexed.getColorModel() instanceof IndexColorModel);
  IndexColorModel icm=(IndexColorModel)indexed.getColorModel();
  assertEquals(5,icm.getMapSize());
  assertNotNull((OperationDescriptor)JAI.getDefaultInstance().getOperationRegistry().getDescriptor(OperationDescriptor.class,"org.geotools.ColorReduction"));
  ParameterBlockJAI pbj=new ParameterBlockJAI("org.geotools.ColorReduction");
  JAI.getDefaultInstance().getTileScheduler().setParallelism(4);
  pbj.addSource(new ImageWorker(image).setRenderingHint(JAI.KEY_IMAGE_LAYOUT,new ImageLayout(image).setTileGridXOffset(0).setTileGridYOffset(0).setTileHeight(64).setTileWidth(64)).tile().getRenderedImage());
  pbj.setParameter("numColors",255);
  pbj.setParameter("alphaThreshold",1);
  pbj.setParameter("subsampleX",1);
  pbj.setParameter("subsampleY",1);
  indexed=JAI.create("org.geotools.ColorReduction",pbj);
  PlanarImage.wrapRenderedImage(indexed).getTiles();
  assertTrue(indexed.getColorModel() instanceof IndexColorModel);
  assertEquals(indexed.getColorModel(),icm);
  icm=(IndexColorModel)indexed.getColorModel();
  assertEquals(5,icm.getMapSize());
  assertEquals(5,icm.getMapSize());
  assertNotNull((OperationDescriptor)JAI.getDefaultInstance().getOperationRegistry().getDescriptor(OperationDescriptor.class,"org.geotools.ColorInversion"));
  pbj=new ParameterBlockJAI("org.geotools.ColorInversion");
  pbj.addSource(new ImageWorker(image).setRenderingHint(JAI.KEY_IMAGE_LAYOUT,new ImageLayout(image).setTileGridXOffset(0).setTileGridYOffset(0).setTileHeight(64).setTileWidth(64)).tile().getRenderedImage());
  pbj.setParameter("quantizationColors",InverseColorMapRasterOp.DEFAULT_QUANTIZATION_COLORS);
  pbj.setParameter("alphaThreshold",1);
  pbj.setParameter("IndexColorModel",icm);
  indexed=JAI.create("org.geotools.ColorInversion",pbj);
  PlanarImage.wrapRenderedImage(indexed).getTiles();
  assertTrue(indexed.getColorModel() instanceof IndexColorModel);
  assertEquals(indexed.getColorModel(),icm);
  icm=(IndexColorModel)indexed.getColorModel();
  assertEquals(5,icm.getMapSize());
  assertEquals(5,icm.getMapSize());
}
