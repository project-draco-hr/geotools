{
switch (transferType) {
default :
{
      return super.createCompatibleSampleModel(w,h);
    }
case DataBuffer.TYPE_FLOAT:
case DataBuffer.TYPE_DOUBLE:
{
    final int numComponents=getNumComponents();
    final int[] bandOffsets=new int[numComponents];
    for (int i=0; i < numComponents; i++) {
      bandOffsets[i]=i;
    }
    return new ComponentSampleModelJAI(transferType,w,h,numComponents,w * numComponents,bandOffsets);
  }
}
}
