{
  setLayout(new BorderLayout());
  JButton zoomIn=new JButton("Zoom in");
  JButton zoomOut=new JButton("Zoom out");
  final JToggleButton tileGrid=new JToggleButton("Tile grid");
  JPanel buttonBar=new JPanel();
  buttonBar.setLayout(new FlowLayout(FlowLayout.LEFT));
  buttonBar.add(zoomIn);
  buttonBar.add(zoomOut);
  buttonBar.add(tileGrid);
  display=new ZoomableImageDisplay();
  tileGrid.setSelected(display.isTileGridVisible());
  status=new JLabel("Move on the image to display pixel values... ");
  add(buttonBar,BorderLayout.NORTH);
  add(new JScrollPane(display),BorderLayout.CENTER);
  add(status,BorderLayout.SOUTH);
  zoomIn.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      display.setScale(display.getScale() * 2.0);
      if (relatedViewer != null) {
        relatedViewer.display.setScale(relatedViewer.display.getScale() * 2.0);
      }
    }
  }
);
  zoomOut.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      display.setScale(display.getScale() / 2.0);
      if (relatedViewer != null) {
        relatedViewer.display.setScale(relatedViewer.display.getScale() / 2.0);
      }
    }
  }
);
  tileGrid.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      display.setTileGridVisible(tileGrid.isSelected());
      if (relatedViewer != null) {
        relatedViewer.display.setTileGridVisible(tileGrid.isSelected());
      }
    }
  }
);
  display.addMouseMotionListener(new MouseMotionAdapter(){
    @Override public void mouseMoved(    MouseEvent e){
      if (pixelIter != null) {
        int x=(int)Math.round(e.getX() / display.getScale());
        int y=(int)Math.round(e.getY() / display.getScale());
        sb.setLength(0);
        if (x < image.getMinX() || x >= image.getMinX() + image.getWidth() || y < image.getMinY() || y >= image.getMinY() + image.getHeight()) {
          sb.append("Outside of image bounds");
        }
 else {
          sb.append("Value at ");
          sb.append(x).append(", ").append(y).append(": [");
          if (dataType == DataBuffer.TYPE_DOUBLE || dataType == DataBuffer.TYPE_FLOAT) {
            pixelIter.getPixel(x,y,dpixel);
            for (int i=0; i < dpixel.length; i++) {
              sb.append(dpixel[i]);
              if (i < dpixel.length - 1)               sb.append(", ");
            }
          }
 else {
            pixelIter.getPixel(x,y,ipixel);
            for (int i=0; i < ipixel.length; i++) {
              sb.append(ipixel[i]);
              if (i < ipixel.length - 1)               sb.append(", ");
            }
          }
          sb.append("]");
        }
        status.setText(sb.toString());
      }
    }
  }
);
}
