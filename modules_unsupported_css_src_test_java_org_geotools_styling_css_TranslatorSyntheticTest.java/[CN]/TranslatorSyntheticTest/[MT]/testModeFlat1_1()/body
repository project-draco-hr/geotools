{
  String css="@mode \"Flat\"; " + "[value1=1] { stroke: green; stroke-width:2px;z-index:1;}" + "[value2=2] { stroke: green; stroke-width:2px;z-index:2;}"+ "[value1=1] { stroke: blue; stroke-width:10px;z-index:3;}";
  Style style=translate(css);
  assertEquals(1,style.featureTypeStyles().get(0).rules().size());
  assertEquals(ECQL.toFilter("value1=1"),style.featureTypeStyles().get(0).rules().get(0).getFilter());
  assertEquals(ECQL.toFilter("value2=2"),style.featureTypeStyles().get(1).rules().get(0).getFilter());
  assertEquals(ECQL.toFilter("value1=1"),style.featureTypeStyles().get(2).rules().get(0).getFilter());
  assertEquals("2",((LineSymbolizer)style.featureTypeStyles().get(0).rules().get(0).symbolizers().get(0)).getStroke().getWidth().toString());
  assertEquals("#008000",((LineSymbolizer)style.featureTypeStyles().get(0).rules().get(0).symbolizers().get(0)).getStroke().getColor().toString());
  assertEquals("2",((LineSymbolizer)style.featureTypeStyles().get(1).rules().get(0).symbolizers().get(0)).getStroke().getWidth().toString());
  assertEquals("#008000",((LineSymbolizer)style.featureTypeStyles().get(1).rules().get(0).symbolizers().get(0)).getStroke().getColor().toString());
  assertEquals("10",((LineSymbolizer)style.featureTypeStyles().get(2).rules().get(0).symbolizers().get(0)).getStroke().getWidth().toString());
  assertEquals("#0000ff",((LineSymbolizer)style.featureTypeStyles().get(2).rules().get(0).symbolizers().get(0)).getStroke().getColor().toString());
}
