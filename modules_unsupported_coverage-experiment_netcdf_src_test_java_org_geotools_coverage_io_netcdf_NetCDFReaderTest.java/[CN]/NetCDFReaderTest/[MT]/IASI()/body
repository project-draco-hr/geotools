{
  final URL testURL=TestData.url(this,"IASI_C_EUMP_20121120062959_31590_eps_o_l2.nc");
  final Hints hints=new Hints(Hints.DEFAULT_COORDINATE_REFERENCE_SYSTEM,CRS.decode("EPSG:4326",true));
  final AbstractGridFormat format=(AbstractGridFormat)GridFormatFinder.findFormat(testURL,hints);
  final NetCDFReader reader=(NetCDFReader)format.getReader(testURL,hints);
  assertNotNull(format);
  assertNotNull(reader);
  try {
    String[] names=reader.getGridCoverageNames();
    assertNotNull(names);
    assertEquals(names.length,20);
    final String coverageName="surface_emissivity";
    final String[] metadataNames=reader.getMetadataNames(coverageName);
    assertNotNull(metadataNames);
    assertEquals(14,metadataNames.length);
    assertEquals("false",reader.getMetadataValue(coverageName,"HAS_TIME_DOMAIN"));
    assertEquals("false",reader.getMetadataValue(coverageName,"HAS_ELEVATION_DOMAIN"));
    assertEquals("true",reader.getMetadataValue(coverageName,"HAS_NEW_DOMAIN"));
    final String newDomain=reader.getMetadataValue(coverageName,"NEW_DOMAIN");
    assertNotNull(metadataNames);
    final String[] newDomainValues=newDomain.split(",");
    assertNotNull(newDomainValues);
    assertEquals(12,newDomainValues.length);
    assertEquals(13.063399669990758,Double.valueOf(newDomainValues[11]),1E-6);
    assertEquals(3.6231999084702693,Double.valueOf(newDomainValues[0]),1E-6);
    final ParameterValue<GridGeometry2D> gg=AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
    final GeneralEnvelope originalEnvelope=reader.getOriginalEnvelope(coverageName);
    final GeneralEnvelope reducedEnvelope=new GeneralEnvelope(new double[]{originalEnvelope.getLowerCorner().getOrdinate(0),originalEnvelope.getLowerCorner().getOrdinate(1)},new double[]{originalEnvelope.getMedian().getOrdinate(0),originalEnvelope.getMedian().getOrdinate(1)});
    reducedEnvelope.setCoordinateReferenceSystem(reader.getCoordinateReferenceSystem(coverageName));
    final Dimension dim=new Dimension();
    GridEnvelope gridRange=reader.getOriginalGridRange(coverageName);
    dim.setSize(gridRange.getSpan(0) * 4.0,gridRange.getSpan(1) * 2.0);
    final Rectangle rasterArea=((GridEnvelope2D)gridRange);
    rasterArea.setSize(dim);
    final GridEnvelope2D range=new GridEnvelope2D(rasterArea);
    gg.setValue(new GridGeometry2D(range,reducedEnvelope));
    Set<ParameterDescriptor<List>> params=reader.getDynamicParameters(coverageName);
    ParameterValue<List> new_=null;
    for (    ParameterDescriptor param : params) {
      if (param.getName().getCode().equalsIgnoreCase("NEW")) {
        new_=param.createValue();
        new_.setValue(new ArrayList(){
{
            add(Double.valueOf(newDomainValues[11]));
          }
        }
);
      }
    }
    GeneralParameterValue[] values=new GeneralParameterValue[]{gg,new_};
    GridCoverage2D coverage=reader.read(coverageName,values);
    assertNotNull(coverage);
    if (TestData.isInteractiveTest()) {
      coverage.show();
    }
 else {
      PlanarImage.wrapRenderedImage(coverage.getRenderedImage()).getTiles();
    }
  }
  finally {
    if (reader != null) {
      try {
        reader.dispose();
      }
 catch (      Throwable t) {
      }
    }
  }
}
