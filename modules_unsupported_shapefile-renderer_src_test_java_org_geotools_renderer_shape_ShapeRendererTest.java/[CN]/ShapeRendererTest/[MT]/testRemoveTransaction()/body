{
  ShapefileDataStore ds=TestUtilites.getDataStore(shp2.getName());
  System.out.println("Count: " + ds.getFeatureSource().getCount(Query.ALL));
  Style st=TestUtilites.createTestStyle(null,typename);
  final SimpleFeatureStore store;
  store=(SimpleFeatureStore)ds.getFeatureSource();
  Transaction t=new DefaultTransaction();
  store.setTransaction(t);
  SimpleFeatureCollection collection=store.getFeatures();
  SimpleFeatureIterator iter=collection.features();
  String fid=null;
  try {
    fid=iter.next().getID();
  }
  finally {
    iter.close();
  }
  FeatureId id=TestUtilites.filterFactory.featureId(fid);
  Id createFidFilter=TestUtilites.filterFactory.id(Collections.singleton(id));
  store.removeFeatures(createFidFilter);
  MapContext context=new DefaultMapContext();
  context.addLayer(store,st);
  ShapefileRenderer renderer=new ShapefileRenderer(context);
  TestUtilites.CountingRenderListener listener=new TestUtilites.CountingRenderListener(getName());
  renderer.addRenderListener(listener);
  Envelope env=context.getLayerBounds();
  int boundary=7;
  TestUtilites.INTERACTIVE=INTERACTIVE;
  env=new Envelope(env.getMinX() - boundary,env.getMaxX() + boundary,env.getMinY() - boundary,env.getMaxY() + boundary);
  TestUtilites.showRender("testTransaction",renderer,2000,env);
  assertEquals(2,listener.count);
  t.commit();
  collection=store.getFeatures();
  iter=collection.features();
  try {
    @SuppressWarnings("unused") SimpleFeature first=iter.next();
  }
  finally {
    iter.close();
  }
  @SuppressWarnings("unused") SimpleFeatureType type=store.getSchema();
  store.addFeatures(DataUtilities.collection(new SimpleFeature[]{sf}));
  t.commit();
  System.out.println("Count: " + ds.getFeatureSource().getCount(Query.ALL));
  listener.count=0;
  TestUtilites.showRender("testTransaction",renderer,2000,env);
  assertEquals(3,listener.count);
  iter=store.getFeatures().features();
  SimpleFeature last=null;
  while (iter.hasNext()) {
    last=iter.next();
  }
  iter.close();
  id=TestUtilites.filterFactory.featureId(last.getID());
  store.removeFeatures(TestUtilites.filterFactory.id(Collections.singleton(id)));
  listener.count=0;
  TestUtilites.showRender("testTransaction",renderer,2000,env);
  assertEquals(2,listener.count);
}
