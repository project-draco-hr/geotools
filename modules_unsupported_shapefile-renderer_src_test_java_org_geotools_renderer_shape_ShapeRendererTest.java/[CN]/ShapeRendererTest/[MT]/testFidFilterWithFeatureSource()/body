{
  TestUtilites.INTERACTIVE=INTERACTIVE;
  ShapefileDataStore dataStore=TestUtilites.getDataStore("countries.shp");
  final SimpleFeatureSource featureSource=dataStore.getFeatureSource(dataStore.getTypeNames()[0]);
  SimpleFeatureCollection features=featureSource.getFeatures();
  Set<FeatureId> selectedFids=new HashSet<FeatureId>();
{
    SimpleFeatureIterator fIt=features.features();
    try {
      int count=0;
      while (fIt.hasNext()) {
        SimpleFeature sf=fIt.next();
        if (count++ % 3 != 0)         continue;
        selectedFids.add(sf.getIdentifier());
      }
    }
  finally {
      fIt.close();
    }
  }
  assertEquals(84,selectedFids.size());
  Id filter=CommonFactoryFinder.getFilterFactory2(null).id(selectedFids);
  final StyleBuilder SB=new StyleBuilder();
  org.geotools.styling.Rule rule1=SB.createRule(SB.createLineSymbolizer(Color.red));
  org.geotools.styling.Rule rule2=SB.createRule(SB.createPolygonSymbolizer(Color.red));
  rule2.setFilter(filter);
  Style style=SB.createStyle();
  assertEquals(0,style.featureTypeStyles().size());
  style.featureTypeStyles().add(SB.createFeatureTypeStyle("Feature",new Rule[]{rule1,rule2}));
  assertEquals(1,style.featureTypeStyles().size());
  assertEquals(2,style.featureTypeStyles().get(0).rules().size());
  assertTrue(style.featureTypeStyles().get(0).rules().get(1).getFilter() instanceof Id);
  DefaultMapLayer layer=new DefaultMapLayer(featureSource,style);
  MapContext mapContext=new DefaultMapContext();
  mapContext.addLayer(layer);
  GTRenderer renderer=new ShapefileRenderer();
  renderer.setContext(mapContext);
  ReferencedEnvelope fullBounds=features.getBounds();
  fullBounds.translate(20,0);
  fullBounds=zoomIn(fullBounds);
  BufferedImage correctImage=TestUtilites.showRender("full",renderer,4000,fullBounds);
  int correctRgb=correctImage.getRGB(150,150);
  assertEquals(-1,correctRgb);
{
    ReferencedEnvelope zoomIn=fullBounds;
    for (int i=1; i < 5; i++) {
      zoomIn=zoomIn(zoomIn);
      BufferedImage testImage=TestUtilites.showRender("zomming in step " + i,renderer,4000,zoomIn);
      int testRgb=testImage.getRGB(150,150);
      assertEquals("Just zooming into the mapContext, should not change the color of the center point in this test:",correctRgb,testRgb);
    }
  }
}
