{
  selectedProperties=new HashMap<AttributeMapping,List<PropertyName>>();
  if (propertyNames == null) {
    selectedMapping=mapping.getAttributeMappings();
  }
 else {
    final AttributeDescriptor targetDescriptor=mapping.getTargetFeature();
    selectedMapping=new ArrayList<AttributeMapping>();
    for (    AttributeMapping attMapping : mapping.getAttributeMappings()) {
      final StepList targetSteps=attMapping.getTargetXPath();
      boolean alreadyAdded=false;
      for (      PropertyName requestedProperty : propertyNames) {
        StepList requestedPropertySteps=requestedProperty.getNamespaceContext() == null ? null : XPath.steps(targetDescriptor,requestedProperty.getPropertyName(),requestedProperty.getNamespaceContext());
        if (requestedPropertySteps == null ? AppSchemaDataAccess.matchProperty(requestedProperty.getPropertyName(),targetSteps) : AppSchemaDataAccess.matchProperty(requestedPropertySteps,targetSteps)) {
          if (!alreadyAdded) {
            selectedMapping.add(attMapping);
            alreadyAdded=true;
          }
          if (requestedPropertySteps != null && requestedPropertySteps.size() > targetSteps.size()) {
            List<PropertyName> pnList=selectedProperties.get(attMapping);
            if (pnList == null) {
              pnList=new ArrayList<PropertyName>();
              selectedProperties.put(attMapping,pnList);
            }
            StepList subProperty=requestedPropertySteps.subList(targetSteps.size(),requestedPropertySteps.size());
            pnList.add(filterFac.property(subProperty.toString(),requestedProperty.getNamespaceContext()));
          }
        }
      }
    }
  }
}
