{
  double[] coord1=new double[]{0.0,0.0,0.0,200.0,200,200.0,200.0,0.0,0.0,0.0};
  double[] coord2=new double[]{50.0,50.0,50.0,150.0,150.0,150.0,150.0,50.0};
  double[][] coords=new double[][]{coord1,coord2};
  SimpleGeometry geom=new SimpleGeometry(ShapeType.ARC,coords,new Envelope(0,15,0,15));
  final PolygonShape shape=new PolygonShape(geom);
  PathIterator i=shape.getPathIterator(null);
  double[] tmp=new double[6];
  int result=i.currentSegment(tmp);
  assertFalse(i.isDone());
  assertEquals(0.0,tmp[0],0.001);
  assertEquals(0.0,tmp[1],0.001);
  assertEquals(PathIterator.SEG_MOVETO,result);
  i.next();
  tmp=new double[6];
  result=i.currentSegment(tmp);
  assertFalse(i.isDone());
  assertEquals(0.0,tmp[0],0.001);
  assertEquals(200.0,tmp[1],0.001);
  assertEquals(PathIterator.SEG_LINETO,result);
  i.next();
  tmp=new double[6];
  result=i.currentSegment(tmp);
  assertFalse(i.isDone());
  assertEquals(200.0,tmp[0],0.001);
  assertEquals(200.0,tmp[1],0.001);
  assertEquals(PathIterator.SEG_LINETO,result);
  i.next();
  tmp=new double[6];
  result=i.currentSegment(tmp);
  assertFalse(i.isDone());
  assertEquals(200.0,tmp[0],0.001);
  assertEquals(0.0,tmp[1],0.001);
  assertEquals(PathIterator.SEG_LINETO,result);
  i.next();
  tmp=new double[6];
  result=i.currentSegment(tmp);
  assertFalse(i.isDone());
  assertEquals(0.0,tmp[0],0.001);
  assertEquals(0.0,tmp[1],0.001);
  assertEquals(PathIterator.SEG_CLOSE,result);
  i.next();
  tmp=new double[6];
  result=i.currentSegment(tmp);
  assertFalse(i.isDone());
  assertEquals(50.0,tmp[0],0.001);
  assertEquals(50.0,tmp[1],0.001);
  assertEquals(PathIterator.SEG_MOVETO,result);
  i.next();
  tmp=new double[6];
  result=i.currentSegment(tmp);
  assertFalse(i.isDone());
  assertEquals(50.0,tmp[0],0.001);
  assertEquals(150.0,tmp[1],0.001);
  assertEquals(PathIterator.SEG_LINETO,result);
  i.next();
  tmp=new double[6];
  result=i.currentSegment(tmp);
  assertFalse(i.isDone());
  assertEquals(150.0,tmp[0],0.001);
  assertEquals(150.0,tmp[1],0.001);
  assertEquals(PathIterator.SEG_LINETO,result);
  i.next();
  tmp=new double[6];
  result=i.currentSegment(tmp);
  assertEquals(150.0,tmp[0],0.001);
  assertEquals(50.0,tmp[1],0.001);
  assertEquals(PathIterator.SEG_CLOSE,result);
  if (DISPLAY) {
    display("Holes",shape,500,500);
  }
}
