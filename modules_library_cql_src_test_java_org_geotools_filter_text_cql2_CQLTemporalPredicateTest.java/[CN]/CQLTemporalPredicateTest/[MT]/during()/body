{
  Filter resultFilter;
  Filter expected;
  resultFilter=CompilerUtil.parseFilter(this.language,FilterCQLSample.FILTER_DURING_PERIOD_BETWEEN_DATES);
  Assert.assertNotNull("Filter expected",resultFilter);
  expected=FilterCQLSample.getSample(FilterCQLSample.FILTER_DURING_PERIOD_BETWEEN_DATES);
  Assert.assertEquals("greater filter ",expected,resultFilter);
  resultFilter=CompilerUtil.parseFilter(this.language,FilterCQLSample.FILTER_DURING_PERIOD_DATE_YMD_HMS);
  Assert.assertNotNull("Filter expected",resultFilter);
  expected=FilterCQLSample.getSample(FilterCQLSample.FILTER_DURING_PERIOD_DATE_YMD_HMS);
  Assert.assertEquals("greater filter",expected,resultFilter);
  resultFilter=CompilerUtil.parseFilter(this.language,FilterCQLSample.FILTER_DURING_PERIOD_YMD_HMS_DATE);
  Assert.assertNotNull("Filter expected",resultFilter);
  expected=FilterCQLSample.getSample(FilterCQLSample.FILTER_DURING_PERIOD_YMD_HMS_DATE);
  Assert.assertEquals("greater filter",expected,resultFilter);
}
