{
  File directory=tmp;
  Map<String,Serializable> params=new HashMap<String,Serializable>();
  params.put("url",url);
  DataStore store=DataStoreFinder.getDataStore(params);
  SimpleFeatureType featureType=store.getSchema("locations");
  File file2=new File(directory,"duplicate.json");
  Map<String,Serializable> params2=new HashMap<String,Serializable>();
  params2.put("url",DataUtilities.fileToURL(file2));
  GeoJSONDataStoreFactory factory=new GeoJSONDataStoreFactory();
  DataStore duplicate=factory.createNewDataStore(params2);
  duplicate.createSchema(featureType);
  FeatureReader<SimpleFeatureType,SimpleFeature> reader;
  FeatureWriter<SimpleFeatureType,SimpleFeature> writer;
  SimpleFeature feature, newFeature;
  Query query=new Query(featureType.getTypeName(),Filter.INCLUDE);
  reader=store.getFeatureReader(query,Transaction.AUTO_COMMIT);
  writer=duplicate.getFeatureWriterAppend("duplicate",Transaction.AUTO_COMMIT);
  try {
    while (reader.hasNext()) {
      feature=reader.next();
      newFeature=writer.next();
      newFeature.setAttributes(feature.getAttributes());
      writer.write();
    }
  }
  finally {
    reader.close();
    writer.close();
  }
  SimpleFeatureStore featureStore=(SimpleFeatureStore)store.getFeatureSource("locations");
  assertEquals(9,featureStore.getFeatures().size());
  SimpleFeatureStore featureStored=(SimpleFeatureStore)duplicate.getFeatureSource("duplicate");
  assertEquals(9,featureStored.getFeatures().size());
  SimpleFeatureIterator original=featureStore.getFeatures().features();
  SimpleFeatureIterator dups=featureStored.getFeatures().features();
  try {
    while (original.hasNext() && dups.hasNext()) {
      SimpleFeature o=original.next();
      SimpleFeature d=dups.next();
      for (int i=0; i < o.getAttributeCount(); i++) {
        assertTrue(DataUtilities.attributesEqual(o.getAttribute(i),d.getAttribute(i)));
      }
    }
  }
  finally {
    original.close();
    dups.close();
  }
}
