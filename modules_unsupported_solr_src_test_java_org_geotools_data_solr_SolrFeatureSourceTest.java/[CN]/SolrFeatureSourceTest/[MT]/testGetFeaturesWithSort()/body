{
  init();
  FilterFactory ff=dataStore.getFilterFactory();
  SortBy sort=ff.sort("vendor_s",SortOrder.ASCENDING);
  Query query=new Query();
  query.setSortBy(new SortBy[]{sort});
  SimpleFeatureCollection features=featureSource.getFeatures(query);
  assertEquals(11,features.size());
  SimpleFeatureIterator iterator=features.features();
  SimpleFeature f;
  try {
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("Asus",f.getAttribute("vendor_s"));
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("Cisco",f.getAttribute("vendor_s"));
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("Cisco",f.getAttribute("vendor_s"));
  }
  finally {
    iterator.close();
  }
  sort=ff.sort("vendor_s",SortOrder.DESCENDING);
  query.setSortBy(new SortBy[]{sort});
  features=featureSource.getFeatures(query);
  iterator=features.features();
  try {
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("TP-Link",f.getAttribute("vendor_s"));
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("Linksys",f.getAttribute("vendor_s"));
    assertTrue(iterator.hasNext());
    f=(SimpleFeature)iterator.next();
    assertEquals("Linksys",f.getAttribute("vendor_s"));
  }
  finally {
    iterator.close();
  }
}
