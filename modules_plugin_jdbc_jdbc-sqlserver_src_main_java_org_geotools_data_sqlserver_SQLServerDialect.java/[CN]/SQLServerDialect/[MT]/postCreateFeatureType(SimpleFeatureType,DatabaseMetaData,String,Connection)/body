{
  String sql="SELECT \n" + "     index_name = ind.name,\n" + "     column_name = col.name\n"+ "FROM \n"+ "     sys.indexes ind \n"+ "INNER JOIN \n"+ "     sys.index_columns ic ON  ind.object_id = ic.object_id and ind.index_id = ic.index_id \n"+ "INNER JOIN \n"+ "     sys.columns col ON ic.object_id = col.object_id and ic.column_id = col.column_id \n"+ "INNER JOIN \n"+ "     sys.tables t ON ind.object_id = t.object_id \n"+ "WHERE \n"+ "     ind.type_desc = 'SPATIAL'\n"+ "     and t.name = '" + featureType.getTypeName() + "'";
  ResultSet indexInfo=null;
  Statement st=null;
  Map<String,Set<String>> indexes=new HashMap<String,Set<String>>();
  try {
    st=cx.createStatement();
    indexInfo=st.executeQuery(sql);
    while (indexInfo.next()) {
      String indexName=indexInfo.getString("index_name");
      String columnName=indexInfo.getString("column_name");
      Set<String> indexColumns=indexes.get(indexName);
      if (indexColumns == null) {
        indexColumns=new HashSet<String>();
        indexes.put(indexName,indexColumns);
      }
      indexColumns.add(columnName);
    }
  }
  finally {
    dataStore.closeSafe(st);
    dataStore.closeSafe(indexInfo);
  }
  for (  Map.Entry<String,Set<String>> entry : indexes.entrySet()) {
    Set<String> columns=entry.getValue();
    if (columns.size() == 1) {
      String column=columns.iterator().next();
      AttributeDescriptor descriptor=featureType.getDescriptor(column);
      if (descriptor instanceof GeometryDescriptor) {
        descriptor.getUserData().put(SPATIAL_INDEX_KEY,entry.getKey());
      }
    }
  }
}
