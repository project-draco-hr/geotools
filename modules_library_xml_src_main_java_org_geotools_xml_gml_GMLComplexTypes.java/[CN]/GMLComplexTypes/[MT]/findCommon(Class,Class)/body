{
  if (Object.class == c1)   return c2;
  if (Object.class == c2)   return c1;
  Class p1=c1.getSuperclass();
  if (p1.isAssignableFrom(c2))   return p1;
  Class p2=c2.getSuperclass();
  if (p2.isAssignableFrom(c1))   return p2;
  Class t=findCommon(p1,p2);
  if (!(t == Object.class))   return t;
  Class[] it1=c1.getInterfaces();
  Class[] it2=c2.getInterfaces();
  if (it1 != null && it1.length > 0 && it2 != null && it2.length > 0) {
    for (int i=0; i < it1.length; i++) {
      for (int j=0; j < it2.length; j++) {
        if (it1[i].isAssignableFrom(it2[j]))         return it1[i];
        if (it2[j].isAssignableFrom(it1[i]))         return it2[j];
      }
    }
  }
  return Object.class;
}
