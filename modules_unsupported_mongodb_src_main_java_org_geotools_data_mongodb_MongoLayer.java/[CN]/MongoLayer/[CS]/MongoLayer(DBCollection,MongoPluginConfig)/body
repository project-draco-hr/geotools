{
  this.config=config;
  layerName=coll.getName();
  log.fine("MongoLayer; layerName " + layerName);
  keywords=new HashSet<String>();
  SimpleFeatureTypeBuilder builder=new SimpleFeatureTypeBuilder();
  builder.setName(layerName);
  builder.setNamespaceURI(config.getNamespace());
  AttributeTypeBuilder b=new AttributeTypeBuilder();
  b.setBinding(String.class);
  b.setName("_id");
  b.setNillable(false);
  b.setDefaultValue(null);
  b.setLength(1024);
  AttributeDescriptor a=b.buildDescriptor("_id");
  builder.add(a);
  try {
    crs=CRS.decode("EPSG:4326");
  }
 catch (  Throwable t) {
    crs=DefaultGeographicCRS.WGS84;
  }
  b=new AttributeTypeBuilder();
  b.setName("geometry");
  b.setNillable(false);
  b.setDefaultValue(null);
  b.setCRS(crs);
  metaData=getCollectionModel(coll,buildRule);
  setGeometryType(metaData);
switch (geometryType) {
case GeometryCollection:
    b.setBinding(GeometryCollection.class);
  break;
case LineString:
b.setBinding(LineString.class);
break;
case Point:
b.setBinding(Point.class);
break;
case Polygon:
b.setBinding(Polygon.class);
break;
case MultiLineString:
b.setBinding(MultiLineString.class);
break;
case MultiPoint:
b.setBinding(MultiPoint.class);
break;
case MultiPolygon:
b.setBinding(MultiPolygon.class);
break;
case Unknown:
log.warning("Unknown geometry for layer " + layerName + " (but has valid distinct geometry.type)");
return;
}
a=b.buildDescriptor("geometry");
builder.add(a);
keywords.add("_id");
keywords.add("geometry");
DBObject props=(DBObject)metaData.get("properties");
addAttributes(builder,props,"properties");
schema=builder.buildFeatureType();
}
