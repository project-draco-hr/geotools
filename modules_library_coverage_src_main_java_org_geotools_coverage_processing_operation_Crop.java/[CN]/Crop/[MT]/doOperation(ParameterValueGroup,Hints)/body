{
  final Geometry cropRoi;
  GeneralEnvelope cropEnvelope=null;
  final GridCoverage2D source;
  final double roiTolerance=parameters.parameter(Crop.PARAMNAME_ROITOLERANCE).doubleValue();
  final ParameterValue sourceParameter=parameters.parameter("Source");
  if (sourceParameter == null || !(sourceParameter.getValue() instanceof GridCoverage2D)) {
    throw new CannotCropException(Errors.format(ErrorKeys.NULL_PARAMETER_$2,"Source",GridCoverage2D.class.toString()));
  }
  source=(GridCoverage2D)sourceParameter.getValue();
  final ParameterValue envelopeParameter=parameters.parameter(PARAMNAME_ENVELOPE);
  final ParameterValue roiParameter=parameters.parameter(PARAMNAME_ROI);
  if ((envelopeParameter == null || envelopeParameter.getValue() == null) && (roiParameter == null || roiParameter.getValue() == null))   throw new CannotCropException(Errors.format(ErrorKeys.NULL_PARAMETER_$2,PARAMNAME_ENVELOPE,GeneralEnvelope.class.toString()));
  Object envelope=envelopeParameter.getValue();
  if (envelope != null) {
    if (envelope instanceof GeneralEnvelope) {
      cropEnvelope=(GeneralEnvelope)envelope;
    }
 else     if (envelope instanceof Envelope) {
      cropEnvelope=new GeneralEnvelope((Envelope)envelope);
    }
  }
  try {
    cropRoi=IntersectUtils.unrollGeometries((Geometry)roiParameter.getValue());
  }
 catch (  IllegalArgumentException ex) {
    throw new CannotCropException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2,PARAMNAME_ROI,ex.getMessage()),ex);
  }
  if (cropRoi != null && cropEnvelope == null) {
    Envelope e2d=JTS.getEnvelope2D(cropRoi.getEnvelopeInternal(),source.getCoordinateReferenceSystem());
    cropEnvelope=new GeneralEnvelope(e2d);
  }
  final Envelope2D sourceEnvelope=source.getEnvelope2D();
  Envelope2D destinationEnvelope=new Envelope2D(cropEnvelope);
  CoordinateReferenceSystem sourceCRS=sourceEnvelope.getCoordinateReferenceSystem();
  CoordinateReferenceSystem destinationCRS=destinationEnvelope.getCoordinateReferenceSystem();
  if (destinationCRS == null) {
    final Envelope2D ge=new Envelope2D(destinationEnvelope);
    destinationCRS=source.getCoordinateReferenceSystem2D();
    ge.setCoordinateReferenceSystem(destinationCRS);
    destinationEnvelope=ge;
  }
  if (!CRS.equalsIgnoreMetadata(sourceCRS,destinationCRS)) {
    throw new CannotCropException(Errors.format(ErrorKeys.MISMATCHED_ENVELOPE_CRS_$2,sourceCRS.getName().getCode(),destinationCRS.getName().getCode()));
  }
  if (cropRoi != null) {
  }
  final GeneralEnvelope intersectionEnvelope=new GeneralEnvelope((Envelope)destinationEnvelope);
  intersectionEnvelope.setCoordinateReferenceSystem(source.getCoordinateReferenceSystem());
  intersectionEnvelope.intersect(sourceEnvelope);
  if (intersectionEnvelope.isEmpty())   throw new CannotCropException(Errors.format(ErrorKeys.CANT_CROP));
  if (cropRoi != null) {
    final Geometry jis=JTS.toGeometry((com.vividsolutions.jts.geom.Envelope)new ReferencedEnvelope(intersectionEnvelope));
    if (!IntersectUtils.intersects(cropRoi,jis))     throw new CannotCropException(Errors.format(ErrorKeys.CANT_CROP));
  }
  final AffineTransform sourceCornerGridToWorld=(AffineTransform)((GridGeometry2D)source.getGridGeometry()).getGridToCRS(PixelInCell.CELL_CORNER);
  final double tolerance=XAffineTransform.getScale(sourceCornerGridToWorld);
  if (cropRoi != null || !intersectionEnvelope.equals(sourceEnvelope,tolerance / 2.0,false)) {
    cropEnvelope=intersectionEnvelope.clone();
    return buildResult(cropEnvelope,cropRoi,roiTolerance,(hints instanceof Hints) ? (Hints)hints : new Hints(hints),source,sourceCornerGridToWorld);
  }
 else {
    return source;
  }
}
