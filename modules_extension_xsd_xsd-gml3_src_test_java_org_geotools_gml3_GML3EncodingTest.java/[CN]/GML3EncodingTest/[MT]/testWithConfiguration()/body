{
  if (isOffline()) {
    return;
  }
  TestConfiguration configuration=new TestConfiguration();
  Parser parser=new Parser(configuration);
  SimpleFeatureCollection fc=(SimpleFeatureCollection)parser.parse(TestConfiguration.class.getResourceAsStream("test.xml"));
  assertNotNull(fc);
  XSDSchema schema=TEST.getInstance().getSchema();
  assertNotNull(schema);
  Encoder encoder=new Encoder(configuration,schema);
  ByteArrayOutputStream output=new ByteArrayOutputStream();
  encoder.write(fc,TEST.TestFeatureCollection,output);
  SAXParser saxParser=new SAXParser();
  saxParser.setFeature("http://xml.org/sax/features/validation",true);
  saxParser.setFeature("http://apache.org/xml/features/validation/schema",true);
  saxParser.setFeature("http://apache.org/xml/features/validation/schema-full-checking",true);
  saxParser.setProperty("http://apache.org/xml/properties/schema/external-noNamespaceSchemaLocation",TEST.NAMESPACE);
  saxParser.setProperty("http://apache.org/xml/properties/schema/external-schemaLocation",TEST.NAMESPACE + " " + configuration.getSchemaFileURL());
  final ArrayList errors=new ArrayList();
  DefaultHandler handler=new DefaultHandler(){
    public void error(    SAXParseException e) throws SAXException {
      System.out.println(e.getMessage());
      errors.add(e);
    }
    public void fatalError(    SAXParseException e) throws SAXException {
      System.out.println(e.getMessage());
      errors.add(e);
    }
  }
;
  saxParser.setErrorHandler(handler);
  saxParser.parse(new InputSource(new ByteArrayInputStream(output.toByteArray())));
  assertTrue(errors.isEmpty());
}
