{
  StrictWFS_1_1_Strategy strategy=createTestProtocol(GEOS_ARCHSITES_11.CAPABILITIES,new StrictWFS_1_1_Strategy());
  FilterCapabilities filterCapabilities=strategy.getFilterCapabilities();
  assertNotNull(filterCapabilities);
  SpatialCapabilities spatialCapabilities=filterCapabilities.getSpatialCapabilities();
  Collection<GeometryOperand> geometryOperands=spatialCapabilities.getGeometryOperands();
  assertEquals(4,geometryOperands.size());
  assertTrue(geometryOperands.contains(GeometryOperand.Envelope));
  assertTrue(geometryOperands.contains(GeometryOperand.Point));
  assertTrue(geometryOperands.contains(GeometryOperand.LineString));
  assertTrue(geometryOperands.contains(GeometryOperand.Polygon));
  SpatialOperators spatialOperators=spatialCapabilities.getSpatialOperators();
  Collection<SpatialOperator> operators=spatialOperators.getOperators();
  assertEquals(9,operators.size());
  assertNotNull(spatialOperators.getOperator("Disjoint"));
  assertNotNull(spatialOperators.getOperator("Equals"));
  assertNotNull(spatialOperators.getOperator("DWithin"));
  assertNotNull(spatialOperators.getOperator("Beyond"));
  assertNotNull(spatialOperators.getOperator("Intersects"));
  assertNotNull(spatialOperators.getOperator("Touches"));
  assertNotNull(spatialOperators.getOperator("Crosses"));
  assertNotNull(spatialOperators.getOperator("Contains"));
  assertNotNull(spatialOperators.getOperator("BBOX"));
  assertNull(spatialOperators.getOperator("Overlaps"));
}
