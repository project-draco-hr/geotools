{
  for (  ExcelDataStore ed : eds) {
    System.out.println(ed.getName());
    List<Name> names=ed.getNames();
    ExcelFeatureSource source=(ExcelFeatureSource)ed.getFeatureSource(names.get(0));
    assertNotNull("FeatureSource is null",source);
    SimpleFeatureType schema=source.getSchema();
    assertNotNull("Null Schema",schema);
    System.out.println(schema.getAttributeCount());
    List<AttributeDescriptor> attrs=schema.getAttributeDescriptors();
    for (    AttributeDescriptor attr : attrs) {
      System.out.println(attr.getName() + ": " + attr.getType());
    }
    ContentFeatureCollection fts=source.getFeatures();
    System.out.println("BBox = " + source.getBounds());
    System.out.println("got " + fts.size() + " features");
    SimpleFeatureIterator its=fts.features();
    int count=10;
    int counter=0;
    while (its.hasNext() && counter++ < count) {
      SimpleFeature feature=its.next();
      System.out.print(feature.getID() + ": ");
      for (      AttributeDescriptor attr : attrs) {
        System.out.print(feature.getAttribute(attr.getName()) + ", ");
      }
      System.out.println();
    }
    if (ed.getName().contains("qed"))     continue;
    FilterFactory2 ff=CommonFactoryFinder.getFilterFactory2(GeoTools.getDefaultHints());
    Filter filter=ff.equal(ff.property("CITY"),ff.literal("Trento"),true);
    Query query=new Query("locations",filter);
    fts=source.getFeatures(query);
    System.out.println(fts.size());
    System.out.println(fts.features().next());
  }
}
