{
  final byte[][] data=new byte[numBands][];
  for (int band=0; band < numBands; band++) {
    data[band]=new byte[256];
    final byte[] table=data[band];
    PiecewiseTransform1DElement lastPiecewiseElement=null;
    for (int value=0; value < 256; value++) {
      final PiecewiseTransform1DElement piecewiseElement;
      if (useLast) {
        if (lastPiecewiseElement != null && lastPiecewiseElement.contains(value))         piecewiseElement=lastPiecewiseElement;
 else {
          lastPiecewiseElement=piecewiseElement=(PiecewiseTransform1DElement)piecewise.findDomainElement(value);
        }
      }
 else       piecewiseElement=(PiecewiseTransform1DElement)piecewise.findDomainElement(value);
      if (piecewiseElement != null)       table[value]=ImageUtil.clampRoundByte(piecewiseElement.transform(value));
 else {
        if (hasGapsValue)         table[value]=ImageUtil.clampRoundByte(gapsValue);
 else         throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$1,Double.toString(value)));
      }
    }
  }
  lut=data;
}
