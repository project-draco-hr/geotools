{
  final PlanarImage source=sources[0];
  WritableRectIter iterator=RectIterFactory.createWritable(dest,destRect);
  if (true) {
    iterator=TransfertRectIter.create(RectIterFactory.create(source,destRect),iterator);
  }
  PiecewiseTransform1DElement last=null;
  int bandNumber=0;
  do {
    try {
      iterator.startLines();
      if (!iterator.finishedLines())       do {
        iterator.startPixels();
        if (!iterator.finishedPixels())         do {
          if (isByteData) {
            final int in=iterator.getSample() & 0xff;
            final int out=0xff & lut[bandNumber][in];
            iterator.setSample(out);
          }
 else           last=domainSearch(iterator,last,bandNumber);
        }
 while (!iterator.nextPixelDone());
      }
 while (!iterator.nextLineDone());
    }
 catch (    final Exception cause) {
      final RasterFormatException exception=new RasterFormatException(cause.getLocalizedMessage());
      exception.initCause(cause);
      throw exception;
    }
    bandNumber++;
  }
 while (iterator.finishedBands());
}
