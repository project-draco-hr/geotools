{
  Expression[] expressions=new Expression[5];
  expressions[1]=(Expression)node.getChildValue("NumericValue");
  expressions[0]=filterFactory.literal(node.getChildValue("Pattern"));
  if (node.hasChild("NegativePattern")) {
    expressions[2]=filterFactory.literal(node.getChildValue("NegativePattern"));
  }
 else {
    expressions[2]=filterFactory.literal("-");
  }
  if (node.hasAttribute("decimalPoint")) {
    expressions[3]=filterFactory.literal(node.getAttributeValue("decimalPoint"));
  }
 else {
    expressions[3]=filterFactory.literal(".");
  }
  if (node.hasAttribute("groupingSeparator")) {
    expressions[4]=filterFactory.literal(node.getAttributeValue("groupingSeparator"));
  }
 else {
    expressions[4]=filterFactory.literal(",");
  }
  return filterFactory.function("numberFormat2",expressions);
}
