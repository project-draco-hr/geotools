{
switch (eDataType.getClassifierID()) {
case WfsPackage.ALL_SOME_TYPE:
    return convertAllSomeTypeToString(eDataType,instanceValue);
case WfsPackage.IDENTIFIER_GENERATION_OPTION_TYPE:
  return convertIdentifierGenerationOptionTypeToString(eDataType,instanceValue);
case WfsPackage.OPERATION_TYPE:
return convertOperationTypeToString(eDataType,instanceValue);
case WfsPackage.RESULT_TYPE_TYPE:
return convertResultTypeTypeToString(eDataType,instanceValue);
case WfsPackage.SERVICE_TYPE:
return convertServiceTypeToString(eDataType,instanceValue);
case WfsPackage.FILTER:
return convertFilterToString(eDataType,instanceValue);
case WfsPackage.FILTER_CAPABILITIES:
return convertFilterCapabilitiesToString(eDataType,instanceValue);
case WfsPackage.QNAME:
return convertQNameToString(eDataType,instanceValue);
case WfsPackage.CALENDAR:
return convertCalendarToString(eDataType,instanceValue);
case WfsPackage.FEATURE_COLLECTION:
return convertFeatureCollectionToString(eDataType,instanceValue);
case WfsPackage.FEATURE_ID:
return convertFeatureIdToString(eDataType,instanceValue);
case WfsPackage.SERVICE_TYPE_1:
return convertServiceType_1ToString(eDataType,instanceValue);
case WfsPackage.URI:
return convertURIToString(eDataType,instanceValue);
case WfsPackage.FORMAT_TYPE:
return convertFormatTypeToString(eDataType,instanceValue);
case WfsPackage.TYPE_TYPE:
return convertTypeTypeToString(eDataType,instanceValue);
case WfsPackage.FUNCTION:
return convertFunctionToString(eDataType,instanceValue);
case WfsPackage.SORT_BY:
return convertSortByToString(eDataType,instanceValue);
case WfsPackage.TYPE_NAME_LIST_TYPE:
return convertTypeNameListTypeToString(eDataType,instanceValue);
case WfsPackage.MAP:
return convertMapToString(eDataType,instanceValue);
default :
throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
}
}
