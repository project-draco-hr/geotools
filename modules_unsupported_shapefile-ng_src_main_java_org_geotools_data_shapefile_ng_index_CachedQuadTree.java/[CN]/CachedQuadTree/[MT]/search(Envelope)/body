{
  final Indices indices=new Indices();
  collectIndices(indices,root,bounds);
  indices.sort();
  final Data data=new Data(DATA_DEFINITION);
  return new CloseableIterator<Data>(){
    boolean read=true;
    int idx=0;
    public void remove(){
      throw new UnsupportedOperationException();
    }
    public Data next(){
      if (!hasNext()) {
        throw new NoSuchElementException();
      }
      read=true;
      return data;
    }
    public boolean hasNext(){
      if (!read) {
        return true;
      }
      if (idx >= indices.size()) {
        return false;
      }
      try {
        data.clear();
        data.addValue(0);
        data.addValue((long)indices.get(idx));
        idx++;
        read=false;
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
      return true;
    }
    public void close() throws IOException {
      indices.clear();
    }
  }
;
}
