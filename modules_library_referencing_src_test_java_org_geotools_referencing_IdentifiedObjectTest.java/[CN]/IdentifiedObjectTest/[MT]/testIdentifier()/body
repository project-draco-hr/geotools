{
  final Map<String,Object> properties=new HashMap<String,Object>();
  assertNull(properties.put("code","This is a code"));
  assertNull(properties.put("authority","This is an authority"));
  assertNull(properties.put("version","This is a version"));
  assertNull(properties.put("dummy","Doesn't matter"));
  assertNull(properties.put("remarks","There is remarks"));
  assertNull(properties.put("remarks_fr","Voici des remarques"));
  assertNull(properties.put("remarks_fr_CA","Pareil"));
  NamedIdentifier identifier=new NamedIdentifier(properties);
  assertEquals("code","This is a code",identifier.getCode());
  assertEquals("authority","This is an authority",identifier.getAuthority().getTitle().toString());
  assertEquals("version","This is a version",identifier.getVersion());
  assertEquals("remarks","There is remarks",identifier.getRemarks().toString(Locale.ENGLISH));
  assertEquals("remarks_fr","Voici des remarques",identifier.getRemarks().toString(Locale.FRENCH));
  assertEquals("remarks_fr_CA","Pareil",identifier.getRemarks().toString(Locale.CANADA_FRENCH));
  assertEquals("remarks_fr_BE","Voici des remarques",identifier.getRemarks().toString(new Locale("fr","BE")));
  if (false) {
    properties.put("remarks",new SimpleInternationalString("Overrides remarks"));
    identifier=new NamedIdentifier(properties);
    assertEquals("remarks","Overrides remarks",identifier.getRemarks().toString(Locale.ENGLISH));
  }
  assertNotNull(properties.remove("authority"));
  assertNull(properties.put("AutHOrITY",new CitationImpl("An other authority")));
  identifier=new NamedIdentifier(properties);
  assertEquals("authority","An other authority",identifier.getAuthority().getTitle().toString(Locale.ENGLISH));
  assertNotNull(properties.remove("AutHOrITY"));
  assertNull(properties.put("authority",Locale.CANADA));
  try {
    identifier=new NamedIdentifier(properties);
    fail();
  }
 catch (  InvalidParameterValueException exception) {
  }
}
