{
  if (object == this) {
    return true;
  }
  if (super.equals(object,compareMetadata)) {
    final AbstractCoordinateOperation that=(AbstractCoordinateOperation)object;
    if (equals(this.sourceCRS,that.sourceCRS,compareMetadata) && Utilities.equals(this.transform,that.transform)) {
      if (compareMetadata) {
        if (!Utilities.equals(this.domainOfValidity,that.domainOfValidity) || !Utilities.equals(this.scope,that.scope) || !Utilities.equals(this.coordinateOperationAccuracy,that.coordinateOperationAccuracy)) {
          return false;
        }
      }
      final Boolean comparing=AbstractDerivedCRS._COMPARING.get();
      if (comparing != null && comparing.booleanValue()) {
        return true;
      }
      try {
        AbstractDerivedCRS._COMPARING.set(Boolean.TRUE);
        return equals(this.targetCRS,that.targetCRS,compareMetadata);
      }
  finally {
        AbstractDerivedCRS._COMPARING.set(Boolean.FALSE);
      }
    }
  }
  return false;
}
