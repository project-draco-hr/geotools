{
  YamlMap style=encode("line","zoom.sld");
  YamlMap rule=style.seq("feature-styles").map(0).seq("rules").map(0);
  assertThat(rule,yHasEntry("name",equalTo("Large")));
  assertThat(rule,yHasEntry("scale",yTuple(lexEqualTo(""),numEqualTo(1.8E8,0.1))));
  YamlMap line=rule.seq("symbolizers").map(0).map("line");
  assertThat(line.get("stroke-color"),isColor("009933"));
  assertEquals(6,line.integer("stroke-width").intValue());
  rule=style.seq("feature-styles").map(0).seq("rules").map(1);
  assertThat(rule,yHasEntry("name",equalTo("Medium")));
  assertThat(rule,yHasEntry("scale",yTuple(numEqualTo(1.8E8,0.1),numEqualTo(3.6E8,0.1))));
  line=rule.seq("symbolizers").map(0).map("line");
  assertThat(line.get("stroke-color"),isColor("009933"));
  assertEquals(4,line.integer("stroke-width").intValue());
  rule=style.seq("feature-styles").map(0).seq("rules").map(2);
  assertThat(rule,yHasEntry("name",equalTo("Small")));
  assertThat(rule,yHasEntry("scale",yTuple(numEqualTo(3.6E8,0.1),lexEqualTo(""))));
  line=rule.seq("symbolizers").map(0).map("line");
  assertThat(line.get("stroke-color"),isColor("009933"));
  assertEquals(2,line.integer("stroke-width").intValue());
}
