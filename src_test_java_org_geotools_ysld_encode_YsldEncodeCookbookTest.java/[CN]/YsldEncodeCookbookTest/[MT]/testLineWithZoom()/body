{
  YamlMap style=encode("line","zoom.sld");
  YamlMap rule=style.seq("feature-styles").map(0).seq("rules").map(0);
  assertEquals("Large",rule.str("name"));
  Matcher m=Pattern.compile("\\(,(.*)\\)").matcher(rule.str("scale"));
  assertTrue(m.matches());
  assertEquals(1.8E8,Double.parseDouble(m.group(1)),0.1);
  YamlMap line=rule.seq("symbolizers").map(0).map("line");
  assertThat(line.get("stroke-color"),isColor("009933"));
  assertEquals(6,line.integer("stroke-width").intValue());
  rule=style.seq("feature-styles").map(0).seq("rules").map(1);
  assertEquals("Medium",rule.str("name"));
  m=Pattern.compile("\\((.*),(.*)\\)").matcher(rule.str("scale"));
  assertTrue(m.matches());
  assertEquals(1.8E8,Double.parseDouble(m.group(1)),0.1);
  assertEquals(3.6E8,Double.parseDouble(m.group(2)),0.1);
  line=rule.seq("symbolizers").map(0).map("line");
  assertThat(line.get("stroke-color"),isColor("009933"));
  assertEquals(4,line.integer("stroke-width").intValue());
  rule=style.seq("feature-styles").map(0).seq("rules").map(2);
  assertEquals("Small",rule.str("name"));
  m=Pattern.compile("\\((.*),\\)").matcher(rule.str("scale"));
  assertTrue(m.matches());
  assertEquals(3.6E8,Double.parseDouble(m.group(1)),0.1);
  line=rule.seq("symbolizers").map(0).map("line");
  assertThat(line.get("stroke-color"),isColor("009933"));
  assertEquals(2,line.integer("stroke-width").intValue());
}
