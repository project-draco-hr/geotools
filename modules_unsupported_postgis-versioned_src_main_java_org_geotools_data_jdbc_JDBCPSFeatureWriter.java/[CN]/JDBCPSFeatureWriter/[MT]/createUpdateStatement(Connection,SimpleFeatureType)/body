{
  List<AttributeDescriptor> attributeTypes=featureType.getAttributeDescriptors();
  String tableName=featureType.getTypeName();
  StringBuffer statementSQL=new StringBuffer("UPDATE  " + tableName + " SET ");
  for (int i=0; i < attributeTypes.size(); i++) {
    statementSQL.append(attributeTypes.get(i).getLocalName()).append(" = ");
    if (attributeTypes.get(i) instanceof GeometryDescriptor) {
      statementSQL.append(getGeometryPlaceHolder(attributeTypes.get(i)));
    }
 else {
      statementSQL.append("?");
    }
    statementSQL.append(",");
  }
  if (!mapper.returnFIDColumnsAsAttributes() && !mapper.hasAutoIncrementColumns()) {
    for (int i=0; i < mapper.getColumnCount(); i++) {
      statementSQL.append(mapper.getColumnName(i)).append(" = ?,");
    }
  }
  statementSQL.setCharAt(statementSQL.length() - 1,' ');
  statementSQL.append(" WHERE ");
  if (!mapper.returnFIDColumnsAsAttributes() && !mapper.hasAutoIncrementColumns()) {
    for (int i=0; i < mapper.getColumnCount(); i++) {
      statementSQL.append(mapper.getColumnName(i)).append(" = ?");
      if (i < (mapper.getColumnCount() - 1)) {
        statementSQL.append(" AND ");
      }
    }
  }
  String sql=statementSQL.toString();
  return conn.prepareStatement(sql);
}
