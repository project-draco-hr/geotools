{
  final List<AttributeDescriptor> attributeTypes=featureType.getAttributeDescriptors();
  final String tableName=featureType.getTypeName();
  final StringBuffer statementSQL=new StringBuffer("INSERT INTO ");
  statementSQL.append(encodeName(tableName)).append("(");
  final int pkColumnCount=mapper.getColumnCount();
  if (!mapper.returnFIDColumnsAsAttributes()) {
    for (int i=0; i < pkColumnCount; i++) {
      if (!mapper.isAutoIncrement(i)) {
        statementSQL.append(mapper.getColumnName(i)).append(",");
      }
    }
  }
  for (int i=0; i < attributeTypes.size(); i++) {
    AttributeDescriptor attributeDescriptor=attributeTypes.get(i);
    String localName=attributeDescriptor.getLocalName();
    statementSQL.append(localName).append(",");
  }
  statementSQL.setCharAt(statementSQL.length() - 1,')');
  statementSQL.append(" VALUES (");
  if (!mapper.returnFIDColumnsAsAttributes() && !mapper.hasAutoIncrementColumns()) {
    for (int i=0; i < pkColumnCount; i++) {
      statementSQL.append("?,");
    }
  }
  for (int i=0; i < attributeTypes.size(); i++) {
    AttributeDescriptor attributeDescriptor=attributeTypes.get(i);
    if (attributeDescriptor instanceof GeometryDescriptor) {
      String geometryPlaceHolder=getGeometryPlaceHolder(attributeDescriptor);
      statementSQL.append(geometryPlaceHolder);
    }
 else {
      statementSQL.append("?");
    }
    statementSQL.append(",");
  }
  statementSQL.setCharAt(statementSQL.length() - 1,')');
  return prepareInsertStatement(conn,statementSQL,featureType);
}
