{
  this.metadata=metadata;
  final Node root=metadata.getRootNode();
  final List<Node> childs=new ArrayList<Node>(4);
  if (parentPath != null) {
    listChilds(root,parentPath,0,childs,true);
    final int count=childs.size();
switch (count) {
default :
{
        warning("<init>",ErrorKeys.TOO_MANY_OCCURENCES_$2,new Object[]{parentPath,count});
      }
case 1:
{
      parent=childs.get(0);
      childs.clear();
      break;
    }
case 0:
{
    parent=appendChild(root,parentPath);
    break;
  }
}
}
 else {
parent=root;
}
this.childPath=childPath;
if (childPath != null) {
final String path;
if (parentPath != null) {
path=parentPath + SEPARATOR + childPath;
}
 else {
path=childPath;
}
listChilds(root,path,0,childs,false);
this.childs=childs;
}
 else {
this.childs=Collections.emptyList();
}
if (parent instanceof Element) {
current=(Element)parent;
}
}
