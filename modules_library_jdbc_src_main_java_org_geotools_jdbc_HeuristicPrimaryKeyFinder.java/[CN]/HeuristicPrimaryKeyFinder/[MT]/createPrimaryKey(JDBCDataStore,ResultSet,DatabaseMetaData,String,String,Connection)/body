{
  ArrayList<PrimaryKeyColumn> cols=new ArrayList();
  while (index.next()) {
    String columnName=index.getString("COLUMN_NAME");
    if (columnName == null) {
      continue;
    }
    ResultSet columns=metaData.getColumns(null,store.escapeNamePattern(metaData,databaseSchema),store.escapeNamePattern(metaData,tableName),store.escapeNamePattern(metaData,columnName));
    columns.next();
    Class columnType=store.getSQLDialect().getMapping(columns,cx);
    if (columnType == null) {
      int binding=columns.getInt("DATA_TYPE");
      columnType=store.getMapping(binding);
      if (columnType == null) {
        LOGGER.warning("No class for sql type " + binding);
        columnType=Object.class;
      }
    }
    PrimaryKeyColumn col=null;
    Statement st=cx.createStatement();
    try {
      st.setFetchSize(1);
      StringBuffer sql=new StringBuffer();
      sql.append("SELECT ");
      store.getSQLDialect().encodeColumnName(columnName,sql);
      sql.append(" FROM ");
      store.encodeTableName(tableName,sql,null);
      sql.append(" WHERE 0=1");
      LOGGER.log(Level.FINE,"Grabbing table pk metadata: {0}",sql);
      ResultSet rs=st.executeQuery(sql.toString());
      try {
        if (rs.getMetaData().isAutoIncrement(1)) {
          col=new AutoGeneratedPrimaryKeyColumn(columnName,columnType);
        }
      }
  finally {
        store.closeSafe(rs);
      }
    }
  finally {
      store.closeSafe(st);
    }
    if (col == null) {
      try {
        String sequenceName=store.getSQLDialect().getSequenceForColumn(databaseSchema,tableName,columnName,cx);
        if (sequenceName != null) {
          col=new SequencedPrimaryKeyColumn(columnName,columnType,sequenceName);
        }
      }
 catch (      Exception e) {
        LOGGER.log(Level.WARNING,"Error occured determining sequence for " + columnName + ", "+ tableName,e);
      }
    }
    if (col == null) {
      col=new NonIncrementingPrimaryKeyColumn(columnName,columnType);
    }
    cols.add(col);
  }
  if (!cols.isEmpty()) {
    return new PrimaryKey(tableName,cols);
  }
  return null;
}
