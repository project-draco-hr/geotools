{
  if (band < 0 || band >= model.getNumBands()) {
    throw new IllegalArgumentException(Errors.format(ErrorKeys.BAD_BAND_NUMBER_$1,band));
  }
  boolean signed=true;
switch (model.getDataType()) {
case DataBuffer.TYPE_DOUBLE:
    return REAL_64BITS;
case DataBuffer.TYPE_FLOAT:
  return REAL_32BITS;
case DataBuffer.TYPE_USHORT:
case DataBuffer.TYPE_BYTE:
signed=false;
case DataBuffer.TYPE_INT:
case DataBuffer.TYPE_SHORT:
{
switch (model.getSampleSize(band)) {
case 1:
  return UNSIGNED_1BIT;
case 2:
return UNSIGNED_2BITS;
case 4:
return UNSIGNED_4BITS;
case 8:
return signed ? SIGNED_8BITS : UNSIGNED_8BITS;
case 16:
return signed ? SIGNED_16BITS : UNSIGNED_16BITS;
case 32:
return signed ? SIGNED_32BITS : UNSIGNED_32BITS;
}
}
}
return null;
}
