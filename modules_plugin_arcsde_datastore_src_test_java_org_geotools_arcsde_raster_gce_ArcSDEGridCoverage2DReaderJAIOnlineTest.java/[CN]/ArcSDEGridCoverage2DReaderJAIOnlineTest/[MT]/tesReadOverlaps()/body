{
  tableName=rasterTestData.getRasterTableName(RasterCellType.TYPE_8BIT_U,1);
  rasterTestData.loadTestRaster(tableName,1,100,100,TYPE_8BIT_U,null,true,false,SeRaster.SE_INTERPOLATION_NEAREST,null);
  final AbstractGridCoverage2DReader reader=getReader();
  assertNotNull(reader);
  final GeneralEnvelope originalEnvelope=reader.getOriginalEnvelope();
  final CoordinateReferenceSystem originalCrs=originalEnvelope.getCoordinateReferenceSystem();
  final GridEnvelope originalGridRange=reader.getOriginalGridRange();
  final int requestedWidth=originalGridRange.getSpan(0);
  final int requestedHeight=originalGridRange.getSpan(1);
  final GeneralEnvelope requestedEnvelope;
  requestedEnvelope=new GeneralEnvelope(new ReferencedEnvelope(-100,100,-100,100,originalCrs));
  final GridCoverage2D coverage;
  coverage=readCoverage(reader,requestedWidth,requestedHeight,requestedEnvelope);
  assertNotNull(coverage);
  assertNotNull(coverage.getRenderedImage());
  final String fileName="tesReadOverlaps_Level0_8BitU_1-Band";
  final RenderedImage image=coverage.getRenderedImage();
  assertNotNull(image);
  writeToDisk(coverage,fileName);
  final Envelope returnedEnvelope=coverage.getEnvelope();
  int tileWidth=image.getTileWidth();
  int tileHeight=image.getTileHeight();
  assertTrue(tileWidth > 0);
  assertTrue(tileHeight > 0);
  GeneralEnvelope expectedEnvelope=new GeneralEnvelope(originalCrs);
  expectedEnvelope.setRange(0,0,100);
  expectedEnvelope.setRange(1,0,100);
  LOGGER.info("\nRequested width : " + requestedWidth + "\nReturned width  :"+ image.getWidth()+ "\nRequested height:"+ requestedHeight+ "\nReturned height :"+ image.getHeight());
  LOGGER.info("\nOriginal envelope  : " + originalEnvelope + "\n requested envelope :"+ requestedEnvelope+ "\n expected envelope  :"+ expectedEnvelope+ "\n returned envelope  :"+ returnedEnvelope);
  assertEquals(50,image.getWidth());
  assertEquals(50,image.getHeight());
}
