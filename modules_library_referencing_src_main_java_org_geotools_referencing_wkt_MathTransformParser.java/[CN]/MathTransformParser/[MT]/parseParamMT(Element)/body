{
  final Element element=parent.pullElement("PARAM_MT");
  classification=element.pullString("classification");
  final ParameterValueGroup parameters;
  try {
    parameters=mtFactory.getDefaultParameters(classification);
  }
 catch (  NoSuchIdentifierException exception) {
    throw element.parseFailed(exception,null);
  }
  Element param;
  while ((param=element.pullOptionalElement("PARAMETER")) != null) {
    final String name=param.pullString("name");
    final ParameterValue parameter=parameters.parameter(name);
    final Class type=parameter.getDescriptor().getValueClass();
    if (Integer.class.equals(type)) {
      parameter.setValue(param.pullInteger("value"));
    }
 else     if (Double.class.equals(type)) {
      parameter.setValue(param.pullDouble("value"));
    }
 else     if (URI.class.equals(type)) {
      parameter.setValue(URI.create(param.pullString("value")));
    }
 else {
      parameter.setValue(param.pullString("value"));
    }
    param.close();
  }
  element.close();
  final MathTransform transform;
  try {
    transform=mtFactory.createParameterizedTransform(parameters);
  }
 catch (  FactoryException exception) {
    throw element.parseFailed(exception,null);
  }
  lastMethod=mtFactory.getLastMethodUsed();
  return transform;
}
