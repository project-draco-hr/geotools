{
  namespaceMappings.put("geotools","http://geotools.org");
  DefaultFeatureCollection features=new DefaultFeatureCollection(null,null);
  SimpleFeatureTypeBuilder tb=new SimpleFeatureTypeBuilder();
  tb.setName("feature");
  tb.setNamespaceURI("http://geotools.org");
  tb.add("geometry",Point.class);
  tb.add("integer",Integer.class);
  SimpleFeatureBuilder b=new SimpleFeatureBuilder(tb.buildFeatureType());
  b.add(new GeometryFactory().createPoint(new Coordinate(0,0)));
  b.add(0);
  features.add(b.buildFeature("zero"));
  b.add(new GeometryFactory().createPoint(new Coordinate(1,1)));
  b.add(1);
  features.add(b.buildFeature("one"));
  FeatureCollectionType fc=WfsFactory.eINSTANCE.createFeatureCollectionType();
  fc.getFeature().add(features);
  Document dom=encode(fc,WFS.FeatureCollection);
  print(dom);
  NodeList featureNodes=dom.getElementsByTagNameNS("http://geotools.org","feature");
  assertEquals(2,featureNodes.getLength());
  for (int i=0; i < featureNodes.getLength(); i++) {
    Element featureNode=(Element)featureNodes.item(i);
    assertNotNull(featureNode.getElementsByTagNameNS("http://geotools.org","geometry"));
    assertNotNull(featureNode.getElementsByTagNameNS("http://geotools.org","integer"));
  }
}
