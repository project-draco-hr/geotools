{
  final int length=source.length();
  int start=pos.getIndex();
  for (int j=SYMBOLS.length; j >= 0; j--) {
    int index=start;
    final String toSkip=getSuffix(field);
    if (toSkip != null) {
      final int toSkipLength=toSkip.length();
      do {
        if (source.regionMatches(index,toSkip,0,toSkipLength)) {
          pos.setIndex(index + toSkipLength);
          return field;
        }
      }
 while (index < length && Character.isSpaceChar(source.charAt(index++)));
    }
    if (++field >= SYMBOLS.length)     field=-1;
  }
  char c;
  do {
    if (start >= length) {
      return SYMBOLS.length;
    }
  }
 while (Character.isSpaceChar(c=source.charAt(start++)));
switch (c) {
case '\u00B0':
    pos.setIndex(start);
  return DEGREES_FIELD;
case '\'':
pos.setIndex(start);
return MINUTES_FIELD;
case '"':
pos.setIndex(start);
return SECONDS_FIELD;
default :
return SYMBOLS.length;
}
}
