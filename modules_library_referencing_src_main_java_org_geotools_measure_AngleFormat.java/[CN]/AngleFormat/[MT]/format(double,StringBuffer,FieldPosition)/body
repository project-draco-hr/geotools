{
  if (Double.isNaN(angle) || Double.isInfinite(angle)) {
    return numberFormat.format(angle,toAppendTo,(pos != null) ? pos : new FieldPosition(DecimalFormat.INTEGER_FIELD));
  }
  double degrees=angle;
  double minutes=Double.NaN;
  double secondes=Double.NaN;
  if (width1 != 0 && !Double.isNaN(angle)) {
    int tmp=(int)degrees;
    minutes=Math.abs(degrees - tmp) * 60;
    degrees=tmp;
    if (minutes < 0 || minutes > 60) {
      throw new IllegalArgumentException(Errors.format(ErrorKeys.ANGLE_OVERFLOW_$1,angle));
    }
    if (width2 != 0) {
      tmp=(int)minutes;
      secondes=(minutes - tmp) * 60;
      minutes=tmp;
      if (secondes < 0 || secondes > 60) {
        throw new IllegalArgumentException(Errors.format(ErrorKeys.ANGLE_OVERFLOW_$1,angle));
      }
      tmp=(int)(secondes / 60);
      secondes-=60 * tmp;
      minutes+=tmp;
    }
    tmp=(int)(minutes / 60);
    minutes-=60 * tmp;
    degrees+=tmp;
  }
  if (prefix != null) {
    toAppendTo.append(prefix);
  }
  final int field;
  if (pos != null) {
    field=pos.getField();
    pos.setBeginIndex(0);
    pos.setEndIndex(0);
  }
 else {
    field=PREFIX_FIELD;
  }
  if (!Double.isNaN(secondes) && isOverflow(secondes,SECONDS_FIELD,true)) {
    secondes=0d;
    minutes=minutes + 1;
  }
  if (!Double.isNaN(minutes) && isOverflow(minutes,MINUTES_FIELD,width2 == 0)) {
    minutes=0d;
    degrees=degrees + 1;
  }
  if (isOverflow(degrees,DEGREES_FIELD,width1 == 0)) {
    degrees=degrees - 360d;
  }
  toAppendTo=formatField(degrees,toAppendTo,field == DEGREES_FIELD ? pos : null,width0,width1 == 0,suffix0);
  if (!Double.isNaN(minutes)) {
    toAppendTo=formatField(minutes,toAppendTo,field == MINUTES_FIELD ? pos : null,width1,width2 == 0,suffix1);
  }
  if (!Double.isNaN(secondes)) {
    toAppendTo=formatField(secondes,toAppendTo,field == SECONDS_FIELD ? pos : null,width2,true,suffix2);
  }
  return toAppendTo;
}
