{
  final File file=TestData.file(GeoTiffReaderTest.class,"mask/external2.tif");
  assertNotNull(file);
  final AbstractGridFormat format=new GeoTiffFormat();
  AbstractGridCoverage2DReader reader=format.getReader(file);
  GeneralParameterValue[] params=new GeneralParameterValue[2];
  final ParameterValue<GridGeometry2D> gg=AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();
  final GeneralEnvelope envelope=reader.getOriginalEnvelope();
  final Dimension dim=new Dimension();
  dim.setSize(reader.getOriginalGridRange().getSpan(0) / 2.0,reader.getOriginalGridRange().getSpan(1) / 2.0);
  final Rectangle rasterArea=((GridEnvelope2D)reader.getOriginalGridRange());
  rasterArea.setSize(dim);
  final GridEnvelope2D range=new GridEnvelope2D(rasterArea);
  gg.setValue(new GridGeometry2D(range,envelope));
  params[0]=gg;
  final ParameterValue<OverviewPolicy> policy=AbstractGridFormat.OVERVIEW_POLICY.createValue();
  policy.setValue(OverviewPolicy.NEAREST);
  params[1]=policy;
  GridCoverage2D coverage=reader.read(params);
  checkCoverageROI(coverage);
  DatasetLayout layout=reader.getDatasetLayout();
  Assert.assertEquals(0,layout.getNumInternalMasks());
  Assert.assertEquals(1,layout.getNumExternalMasks());
  Assert.assertEquals(4,layout.getNumInternalOverviews());
  Assert.assertEquals(0,layout.getNumExternalOverviews());
  Assert.assertEquals(4,layout.getNumExternalMaskOverviews());
  Assert.assertTrue(!layout.getExternalMasks().getAbsolutePath().isEmpty());
  Assert.assertNull(layout.getExternalOverviews());
  Assert.assertTrue(!layout.getExternalMaskOverviews().getAbsolutePath().isEmpty());
  CoverageProcessor processor=CoverageProcessor.getInstance();
  Scale scaleOp=(Scale)processor.getOperation("Scale");
  ParameterValueGroup parameters=scaleOp.getParameters();
  parameters.parameter("Source").setValue(coverage);
  parameters.parameter("xScale").setValue(Float.valueOf(3f));
  parameters.parameter("yScale").setValue(Float.valueOf(3f));
  parameters.parameter("xTrans").setValue(Float.valueOf(0.0f));
  parameters.parameter("yTrans").setValue(Float.valueOf(0.0f));
  parameters.parameter("Interpolation").setValue(Interpolation.getInstance(Interpolation.INTERP_NEAREST));
  coverage=(GridCoverage2D)scaleOp.doOperation(parameters,null);
  checkCoverageROI(coverage);
  byte[] results=new byte[3];
  DirectPosition2D position=new DirectPosition2D();
  position.setLocation(-87.517,25.302);
  results=coverage.evaluate(position,results);
  assertEquals(results[0],0);
  assertEquals(results[1],0);
  assertEquals(results[2],0);
  position.setLocation(-87.005,26.336);
  results=coverage.evaluate(position,results);
  assertTrue(results[0] != 0);
  assertTrue(results[1] != 0);
  assertTrue(results[2] != 0);
  position.setLocation(-87.891,26.159);
  results=coverage.evaluate(position,results);
  assertEquals(results[0],0);
  assertEquals(results[1],0);
  assertEquals(results[2],0);
  position.setLocation(-86.401,26.297);
  results=coverage.evaluate(position,results);
  assertTrue(results[0] != 0);
  assertTrue(results[1] != 0);
  assertTrue(results[2] != 0);
  position.setLocation(-87.411,27.289);
  results=coverage.evaluate(position,results);
  assertEquals(results[0],0);
  assertEquals(results[1],0);
  assertEquals(results[2],0);
}
