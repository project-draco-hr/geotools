{
  if ("histogram".equals(name)) {
    this.method=new Histogram();
  }
 else   if ("normalize".equals(name)) {
    this.method=new Normalize();
  }
 else   if ("logarithmic".equals(name)) {
    this.method=new Logarithmic();
  }
 else   if ("exponential".equals(name)) {
    this.method=new Exponential();
  }
 else {
    throw new IllegalArgumentException("Unexpected ContrastEnhamcement method " + name);
  }
  if (algorithm != null && !algorithm.isEmpty()) {
    System.out.println("setting " + algorithm);
    this.method.setAlgorithm(FF.literal(algorithm));
  }
  if (parameters != null) {
    for (int i=0; i < parameters.length; i+=2) {
      System.out.println("adding parameter " + parameters[i] + "="+ parameters[i + 1]);
      this.method.addParameter(parameters[i],FF.literal(parameters[i + 1]));
    }
  }
  this.unset=false;
  return this;
}
