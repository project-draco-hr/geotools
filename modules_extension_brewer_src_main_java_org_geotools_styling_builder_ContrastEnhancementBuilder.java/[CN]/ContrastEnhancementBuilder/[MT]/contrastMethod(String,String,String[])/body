{
  if ("histogram".equals(name)) {
    this.method=ContrastMethod.HISTOGRAM;
  }
 else   if ("normalize".equals(name)) {
    this.method=ContrastMethod.NORMALIZE;
  }
 else   if ("logarithmic".equals(name)) {
    this.method=ContrastMethod.LOGARITHMIC;
  }
 else   if ("exponential".equals(name)) {
    this.method=ContrastMethod.EXPONENTIAL;
  }
 else {
    throw new IllegalArgumentException("Unexpected ContrastEnhamcement method " + name);
  }
  if (algorithm != null && !algorithm.isEmpty()) {
    this.options.put("algorithm",FF.literal(algorithm));
  }
  if (parameters != null) {
    for (int i=0; i < parameters.length; i+=2) {
      this.options.put(parameters[i],FF.literal(parameters[i + 1]));
    }
  }
  this.unset=false;
  return this;
}
