{
  NodePointer current=null;
  Stack<NodePointer> notYetVisitedNodes=new Stack<NodePointer>();
  Stack<NodePointer> visitedNodes=new Stack<NodePointer>();
  if (query.intersects(this.root.getShape())) {
    current=new NodePointer(readNode(this.root));
    notYetVisitedNodes.push(current);
  }
  while (!notYetVisitedNodes.isEmpty() || !visitedNodes.isEmpty()) {
    if (!notYetVisitedNodes.isEmpty()) {
      current=notYetVisitedNodes.pop();
      v.visitNode(current.node);
      if (v.isDataVisitor()) {
        visitData(current.node,v,query,type);
      }
    }
 else {
      current=visitedNodes.pop();
    }
    while (current.hasNext()) {
      NodeIdentifier child=current.next();
      if (query.intersects(child.getShape())) {
        Node n=readNode(child);
        NodePointer np=new NodePointer(n);
        notYetVisitedNodes.push(np);
        visitedNodes.push(current);
        break;
      }
    }
  }
}
