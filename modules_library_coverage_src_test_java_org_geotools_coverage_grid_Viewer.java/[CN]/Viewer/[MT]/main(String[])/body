{
  final Arguments arguments=new Arguments(args);
  final PrintWriter out=arguments.out;
  final Locale locale=arguments.locale;
  final String operation=arguments.getOptionalString("-operation");
  final boolean palette=arguments.getFlag("-palette");
  args=arguments.getRemainingArguments(1);
  if (args.length == 0) {
    out.println("Usage: Viewer [options] example");
    out.println();
    out.print("Where \"example\" is the number of the requested example (0 to ");
    out.print(GridCoverageTestBase.EXAMPLES.size() - 1);
    out.println(" inclusive)");
    out.println("and [options] includes:");
    out.println();
    out.println("  -operation=[s]  An operation name to apply (e.g. \"GradientMagniture\").");
    out.println("                  For a list of available operations, run the following:");
    out.println("                  java org.geotools.coverage.processing.DefaultProcessor");
    out.println("  -palette        Dumps RGB codes to standard output.");
    out.flush();
    return;
  }
  GridCoverage2D coverage=GridCoverageTestBase.EXAMPLES.get(Integer.parseInt(args[0]));
  if (operation != null) {
    final CoverageProcessor processor=CoverageProcessor.getInstance();
    final ParameterValueGroup param=processor.getOperation(operation).getParameters();
    param.parameter("Source").setValue(coverage);
    coverage=(GridCoverage2D)processor.doOperation(param);
  }
  Viewer viewer=new Viewer(coverage);
  viewer.setLocale(locale);
  viewer=show(viewer,coverage.getName().toString(locale));
  if (palette) {
    viewer.printPalette(out);
  }
  out.flush();
}
