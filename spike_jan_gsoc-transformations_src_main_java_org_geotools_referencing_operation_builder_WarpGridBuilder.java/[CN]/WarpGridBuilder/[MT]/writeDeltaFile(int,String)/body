{
  final float[] warpPositions=(float[])gridParameters.getWarpPositions();
  File file=new File(path);
  FileOutputStream fos=new FileOutputStream(file);
  OutputStreamWriter osw=new OutputStreamWriter(fos);
  osw.write("NADCON EXTRACTED REGION                                 NADGRD ");
  osw.write("\n");
  Locale.setDefault(Locale.UK);
  DecimalFormat format=new DecimalFormat();
  format.setMinimumFractionDigits(5);
  format.setMaximumFractionDigits(5);
  format.setMinimumIntegerDigits(0);
  String space=" ";
  osw.write(" " + (gridParameters.getXNumber() + 1) + " "+ (gridParameters.getYNumber() + 1)+ "   "+ "1"+ "    "+ format.format(gridParameters.getXStart())+ "      "+ format.format(gridParameters.getXStep())+ "    "+ format.format(gridParameters.getYStart())+ "      "+ format.format(gridParameters.getYStep())+ "      "+ format.format(0));
  int ii=0;
  format.setMinimumFractionDigits(6);
  format.setMaximumFractionDigits(6);
switch (dim) {
case 0:
    for (int i=getDxGrid().length - 1; i >= 0; i--) {
      osw.write(String.valueOf("\n"));
      int col=0;
      for (int j=0; j < getDxGrid()[i].length; j++) {
        float val=-1 * getDxGrid()[i][j];
        osw.write("   " + format.format(val));
        col++;
        if (col >= 6) {
          osw.write(String.valueOf("\n"));
          col=0;
        }
      }
    }
  break;
case 1:
{
  for (int i=getDyGrid().length - 1; i >= 0; i--) {
    osw.write(String.valueOf("\n"));
    int col=0;
    for (int j=0; j < getDyGrid()[i].length; j++) {
      float val=getDyGrid()[i][j];
      osw.write("    " + format.format(val));
      col++;
      if (col >= 6) {
        osw.write(String.valueOf("\n"));
        col=0;
      }
    }
  }
}
break;
}
osw.close();
return file;
}
