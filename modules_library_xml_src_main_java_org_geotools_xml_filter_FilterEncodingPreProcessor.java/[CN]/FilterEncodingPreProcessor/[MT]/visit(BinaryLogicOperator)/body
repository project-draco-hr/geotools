{
  int startSize=current.size();
  try {
switch (this.complianceInt) {
case LOW:
      current.push(new Data(filter));
    break;
case MEDIUM:
  for (  org.opengis.filter.Filter component : filter.getChildren()) {
    component.accept(this,null);
  }
current.push(createMediumLevelLogicFilter(Filters.getFilterType(filter),startSize));
break;
case HIGH:
for (org.opengis.filter.Filter component : filter.getChildren()) {
component.accept(this,null);
}
current.push(createHighLevelLogicFilter(Filters.getFilterType(filter),startSize));
break;
default :
break;
}
}
 catch (Exception e) {
if (e instanceof UnsupportedFilterException) {
throw (UnsupportedFilterException)e;
}
throw new UnsupportedFilterException("Exception creating filter",e);
}
}
