{
  FeatureTypeStyle fts=sf.createFeatureTypeStyle();
  fts.setFeatureTypeName("feature-type");
  fts.getOptions().put("key","value");
  Rule rule1;
  rule1=sf.createRule();
  rule1.setName("rule1");
  rule1.setFilter(ff.id(Collections.singleton(ff.featureId("FID"))));
  Rule rule2=sf.createRule();
  rule2.setIsElseFilter(true);
  rule2.setName("rule2");
  fts.addRule(rule1);
  fts.addRule(rule2);
  fts.accept(visitor);
  FeatureTypeStyle clone=(FeatureTypeStyle)visitor.getCopy();
  assertEqualsContract(fts,clone);
  rule1=sf.createRule();
  rule1.setName("rule1");
  rule1.setFilter(ff.id(Collections.singleton(ff.featureId("FID"))));
  FeatureTypeStyle notEq=sf.createFeatureTypeStyle();
  notEq.setName("fts-not-equal");
  notEq.addRule(rule1);
  assertEqualsContract(clone,notEq,fts);
  fts.setTransformation(ff.literal("transformation"));
  fts.setOnlineResource(new OnLineResourceImpl());
  fts.accept(visitor);
  clone=(FeatureTypeStyle)visitor.getCopy();
  assertEqualsContract(fts,clone);
}
