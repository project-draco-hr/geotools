{
  LOGGER.finer("testCreateStroke");
  Stroke s=styleFactory.createStroke(filterFactory.literal("#000000"),filterFactory.literal(2.0));
  assertNotNull("Failed to build stroke ",s);
  s=styleFactory.createStroke(filterFactory.literal("#000000"),filterFactory.literal(2.0),filterFactory.literal(0.5));
  assertNotNull("Failed to build stroke ",s);
  s=styleFactory.createStroke(filterFactory.literal("#000000"),filterFactory.literal(2.0),filterFactory.literal(0.5),filterFactory.literal("bevel"),filterFactory.literal("square"),new float[]{1.1f,2.1f,6f,2.1f,1.1f,5f},filterFactory.literal(3),null,null);
  assertNotNull("Failed to build stroke ",s);
  assertEquals("Wrong color ","#000000",s.getColor().evaluate(feature).toString());
  assertEquals("Wrong width ","2.0",s.getWidth().evaluate(feature).toString());
  assertEquals("Wrong opacity ","0.5",s.getOpacity().evaluate(feature).toString());
  assertEquals("Wrong linejoin ","bevel",s.getLineJoin().evaluate(feature).toString());
  assertEquals("Wrong linejoin ","square",s.getLineCap().evaluate(feature).toString());
  assertEquals("Broken dash array",2.1f,s.getDashArray()[1],0.001f);
  assertEquals("Wrong dash offset ","3",s.getDashOffset().evaluate(feature).toString());
}
