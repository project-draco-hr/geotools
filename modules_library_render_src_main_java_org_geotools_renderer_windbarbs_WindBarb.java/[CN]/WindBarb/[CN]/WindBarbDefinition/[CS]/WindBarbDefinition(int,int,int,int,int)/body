{
  if (vectorLength <= 0) {
    throw new IllegalArgumentException("Invalid vectorLength:" + vectorLength);
  }
  if (basePennantLength <= 0) {
    throw new IllegalArgumentException("Invalid basePennantLength:" + vectorLength);
  }
  if (elementsSpacing <= 0) {
    throw new IllegalArgumentException("Invalid elementsSpacing:" + vectorLength);
  }
  if (vectorLength < elementsSpacing + basePennantLength) {
    throw new IllegalArgumentException("Invalid vectorLength<elementsSpacing+basePennantLength : " + vectorLength);
  }
  if (longBarbLength <= 0) {
    throw new IllegalArgumentException("Invalid longBarbLength:" + vectorLength);
  }
  if (zeroWindRadius <= 0) {
    throw new IllegalArgumentException("Invalid zeroWindRadius:" + vectorLength);
  }
  this.vectorLength=vectorLength;
  this.basePennantLength=basePennantLength;
  this.elementsSpacing=elementsSpacing;
  this.longBarbLength=longBarbLength;
  this.shortBarbLength=longBarbLength / 2;
  this.zeroWindRadius=zeroWindRadius;
}
