{
  int positionOnPath=-windBarbDefinition.vectorLength;
  Path2D path=new Path2D.Double();
  if (knots < 5) {
    return new Ellipse2D.Float(-windBarbDefinition.zeroWindRadius / 2.0f,-windBarbDefinition.zeroWindRadius / 2.0f,windBarbDefinition.zeroWindRadius,windBarbDefinition.zeroWindRadius);
  }
 else {
    path.moveTo(0,0);
    path.lineTo(0,positionOnPath);
  }
  if (squares > 0) {
    positionOnPath=drawSquare(path,positionOnPath);
    positionOnPath+=windBarbDefinition.elementsSpacing;
  }
  if (pennants > 0) {
    positionOnPath=drawPennants(path,positionOnPath);
    positionOnPath+=windBarbDefinition.elementsSpacing;
  }
  if (longBarbs > 0) {
    positionOnPath=drawLongBarbs(path,positionOnPath);
    positionOnPath+=windBarbDefinition.elementsSpacing;
  }
  if (shortBarbs > 0) {
    positionOnPath=drawShortBarb(path,positionOnPath);
  }
  final Shape createTransformedShape=path.createTransformedShape(AffineTransform.getScaleInstance(1,-1));
  return createTransformedShape;
}
