{
  if (!key.startsWith(prefix)) {
    return false;
  }
  int position=prefix.length();
  final int length=key.length();
  final String[] parts=new String[]{"","",""};
  for (int i=0; ; i++) {
    if (position == length) {
      final Locale locale=(i == 0) ? (Locale)null : unique(new Locale(parts[0],parts[1],parts[2]));
      add(locale,string);
      return true;
    }
    if (key.charAt(position) != '_' || i == parts.length) {
      break;
    }
    int next=key.indexOf('_',++position);
    if (next < 0) {
      next=length;
    }
 else     if (next == position) {
      break;
    }
    parts[i]=key.substring(position,position=next);
  }
  throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$2,"locale",key.substring(prefix.length())));
}
