{
  Quadrilateral mQuad=mappedQuad(quad,vectors);
  ExtendedPosition[] vertices=new ExtendedPosition[vectors.size()];
  for (int i=0; i < vectors.size(); i++) {
    vertices[i]=new ExtendedPosition(((MappedPosition)vectors.get(i)).getSource(),((MappedPosition)vectors.get(i)).getTarget());
  }
  TriangulationFactory triangulator=new TriangulationFactory(mQuad,vertices);
  List taggedSourceTriangles=triangulator.getTriangulation();
  final HashMap triangleMap=new HashMap();
  for (Iterator i=taggedSourceTriangles.iterator(); i.hasNext(); ) {
    final TINTriangle sourceTriangle=(TINTriangle)i.next();
    triangleMap.put(sourceTriangle,new TINTriangle(((ExtendedPosition)sourceTriangle.p0).getMappedposition(),((ExtendedPosition)sourceTriangle.p1).getMappedposition(),((ExtendedPosition)sourceTriangle.p2).getMappedposition()));
  }
  return triangleMap;
}
