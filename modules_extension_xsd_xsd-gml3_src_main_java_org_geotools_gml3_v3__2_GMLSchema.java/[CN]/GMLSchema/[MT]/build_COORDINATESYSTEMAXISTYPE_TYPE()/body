{
  ComplexType builtType=new AbstractLazyComplexTypeImpl(new NameImpl("http://www.opengis.net/gml/3.2","CoordinateSystemAxisType"),false,false,null,null){
    @Override public AttributeType buildSuper(){
      return IDENTIFIEDOBJECTTYPE_TYPE;
    }
    @Override public Collection<PropertyDescriptor> buildDescriptors(){
      List<PropertyDescriptor> descriptors=new ArrayList<PropertyDescriptor>();
      descriptors.add(new AttributeDescriptorImpl(CODETYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","axisAbbrev"),1,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(CODEWITHAUTHORITYTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","axisDirection"),1,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(XSSchema.DOUBLE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","minimumValue"),0,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(XSSchema.DOUBLE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","maximumValue"),0,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(CODEWITHAUTHORITYTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","rangeMeaning"),0,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(UOMIDENTIFIER_TYPE,new NameImpl("uom"),0,1,true,null));
      return descriptors;
    }
  }
;
  return builtType;
}
