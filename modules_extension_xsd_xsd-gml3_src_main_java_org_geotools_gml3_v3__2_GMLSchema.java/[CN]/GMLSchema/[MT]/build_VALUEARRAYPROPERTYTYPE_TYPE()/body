{
  ComplexType builtType=new AbstractLazyComplexTypeImpl(new NameImpl("http://www.opengis.net/gml/3.2","ValueArrayPropertyType"),false,false,null,null){
    @Override public AttributeType buildSuper(){
      return XSSchema.ANYTYPE_TYPE;
    }
    @Override public Collection<PropertyDescriptor> buildDescriptors(){
      List<PropertyDescriptor> descriptors=new ArrayList<PropertyDescriptor>();
      descriptors.add(new AttributeDescriptorImpl(XSSchema.ANYTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","AbstractValue"),1,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(ABSTRACTGEOMETRYTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","AbstractGeometry"),1,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(ABSTRACTTIMEOBJECTTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","AbstractTimeObject"),1,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(NILREASONTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","Null"),1,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(XSSchema.BOOLEAN_TYPE,new NameImpl("owns"),0,1,true,null));
      return descriptors;
    }
  }
;
  return builtType;
}
