{
  ComplexType builtType=new AbstractLazyComplexTypeImpl(new NameImpl("http://www.opengis.net/gml/3.2","EdgeType"),false,false,null,null){
    @Override public AttributeType buildSuper(){
      return ABSTRACTTOPOPRIMITIVETYPE_TYPE;
    }
    @Override public Collection<PropertyDescriptor> buildDescriptors(){
      List<PropertyDescriptor> descriptors=new ArrayList<PropertyDescriptor>();
      descriptors.add(new AttributeDescriptorImpl(TOPOSOLIDPROPERTYTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","container"),0,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(DIRECTEDNODEPROPERTYTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","directedNode"),2,2,false,null));
      descriptors.add(new AttributeDescriptorImpl(DIRECTEDFACEPROPERTYTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","directedFace"),0,2147483647,false,null));
      descriptors.add(new AttributeDescriptorImpl(CURVEPROPERTYTYPE_TYPE,new NameImpl("http://www.opengis.net/gml/3.2","curveProperty"),0,1,false,null));
      descriptors.add(new AttributeDescriptorImpl(AGGREGATIONTYPE_TYPE,new NameImpl("aggregationType"),0,1,true,null));
      return descriptors;
    }
  }
;
  return builtType;
}
