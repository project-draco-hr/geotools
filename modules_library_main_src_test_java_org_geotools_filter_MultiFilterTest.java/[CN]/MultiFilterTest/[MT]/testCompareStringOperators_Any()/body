{
  Filter filter;
  List<String> list=new ArrayList<String>();
  list.add("foo-1");
  list.add("foo-2");
  list.add("foo-3");
  list.add("blah-blah");
  Expression e=new LiteralExpressionImpl(list);
  Expression empty=new LiteralExpressionImpl(new ArrayList<String>());
  filter=fac.equals(e,new LiteralExpressionImpl("foo-2"));
  assertTrue(filter.evaluate(null));
  filter=fac.equals(new LiteralExpressionImpl("foo-1"),e);
  assertTrue(filter.evaluate(null));
  filter=fac.equals(e,new LiteralExpressionImpl("foo-3"));
  assertTrue(filter.evaluate(null));
  filter=fac.equals(new LiteralExpressionImpl("blah"),e);
  assertFalse(filter.evaluate(null));
  filter=fac.equals(empty,new LiteralExpressionImpl("blah"));
  assertFalse(filter.evaluate(null));
  filter=fac.equals(new LiteralExpressionImpl("blah"),empty);
  assertFalse(filter.evaluate(null));
  filter=fac.notEqual(e,new LiteralExpressionImpl("blah"));
  assertTrue(filter.evaluate(null));
  filter=fac.notEqual(new LiteralExpressionImpl("foo-2"),e);
  assertTrue(filter.evaluate(null));
  filter=fac.like(e,"foo*");
  assertTrue(filter.evaluate(null));
  filter=fac.like(e,"blah*");
  assertTrue(filter.evaluate(null));
  filter=fac.like(e,"foox*");
  assertFalse(filter.evaluate(null));
  filter=fac.like(empty,"*");
  assertFalse(filter.evaluate(null));
  List<String> list2=new ArrayList<String>();
  list2.add("foo-4");
  list2.add("foo-5");
  list2.add("foo-6");
  filter=fac.equals(e,new LiteralExpressionImpl(list2));
  assertFalse(filter.evaluate(null));
  filter=fac.notEqual(e,new LiteralExpressionImpl(list2));
  assertTrue(filter.evaluate(null));
  list2.add("blah-blah");
  filter=fac.equals(e,new LiteralExpressionImpl(list2));
  assertTrue(filter.evaluate(null));
  filter=fac.notEqual(e,new LiteralExpressionImpl(list2));
  assertTrue(filter.evaluate(null));
  list2=new ArrayList<String>();
  list2.add("foo-1");
  list2.add("foo-2");
  list2.add("foo-3");
  list2.add("blah-blah");
  filter=fac.notEqual(e,new LiteralExpressionImpl(list2));
  assertTrue(filter.evaluate(null));
  list=new ArrayList<String>();
  list.add("foo-1");
  list.add("foo-1");
  list.add("foo-1");
  e=new LiteralExpressionImpl(list);
  filter=fac.notEqual(e,new LiteralExpressionImpl("foo-1"));
  assertFalse(filter.evaluate(null));
  list2=new ArrayList<String>();
  list2.add("foo-1");
  list2.add("foo-1");
  filter=fac.notEqual(e,new LiteralExpressionImpl(list2));
  assertFalse(filter.evaluate(null));
}
