{
switch (classifierID) {
case Fes20Package.ABSTRACT_ADHOC_QUERY_EXPRESSION_TYPE:
    return validateAbstractAdhocQueryExpressionType((AbstractAdhocQueryExpressionType)value,diagnostics,context);
case Fes20Package.ABSTRACT_ID_TYPE:
  return validateAbstractIdType((AbstractIdType)value,diagnostics,context);
case Fes20Package.ABSTRACT_PROJECTION_CLAUSE_TYPE:
return validateAbstractProjectionClauseType((AbstractProjectionClauseType)value,diagnostics,context);
case Fes20Package.ABSTRACT_QUERY_EXPRESSION_TYPE:
return validateAbstractQueryExpressionType((AbstractQueryExpressionType)value,diagnostics,context);
case Fes20Package.ABSTRACT_SELECTION_CLAUSE_TYPE:
return validateAbstractSelectionClauseType((AbstractSelectionClauseType)value,diagnostics,context);
case Fes20Package.ABSTRACT_SORTING_CLAUSE_TYPE:
return validateAbstractSortingClauseType((AbstractSortingClauseType)value,diagnostics,context);
case Fes20Package.ADDITIONAL_OPERATORS_TYPE:
return validateAdditionalOperatorsType((AdditionalOperatorsType)value,diagnostics,context);
case Fes20Package.ARGUMENTS_TYPE:
return validateArgumentsType((ArgumentsType)value,diagnostics,context);
case Fes20Package.ARGUMENT_TYPE:
return validateArgumentType((ArgumentType)value,diagnostics,context);
case Fes20Package.AVAILABLE_FUNCTIONS_TYPE:
return validateAvailableFunctionsType((AvailableFunctionsType)value,diagnostics,context);
case Fes20Package.AVAILABLE_FUNCTION_TYPE:
return validateAvailableFunctionType((AvailableFunctionType)value,diagnostics,context);
case Fes20Package.BBOX_TYPE:
return validateBBOXType((BBOXType)value,diagnostics,context);
case Fes20Package.BINARY_COMPARISON_OP_TYPE:
return validateBinaryComparisonOpType((BinaryComparisonOpType)value,diagnostics,context);
case Fes20Package.BINARY_LOGIC_OP_TYPE:
return validateBinaryLogicOpType((BinaryLogicOpType)value,diagnostics,context);
case Fes20Package.BINARY_SPATIAL_OP_TYPE:
return validateBinarySpatialOpType((BinarySpatialOpType)value,diagnostics,context);
case Fes20Package.BINARY_TEMPORAL_OP_TYPE:
return validateBinaryTemporalOpType((BinaryTemporalOpType)value,diagnostics,context);
case Fes20Package.COMPARISON_OPERATORS_TYPE:
return validateComparisonOperatorsType((ComparisonOperatorsType)value,diagnostics,context);
case Fes20Package.COMPARISON_OPERATOR_TYPE:
return validateComparisonOperatorType((ComparisonOperatorType)value,diagnostics,context);
case Fes20Package.COMPARISON_OPS_TYPE:
return validateComparisonOpsType((ComparisonOpsType)value,diagnostics,context);
case Fes20Package.CONFORMANCE_TYPE:
return validateConformanceType((ConformanceType)value,diagnostics,context);
case Fes20Package.DISTANCE_BUFFER_TYPE:
return validateDistanceBufferType((DistanceBufferType)value,diagnostics,context);
case Fes20Package.DOCUMENT_ROOT:
return validateDocumentRoot((DocumentRoot)value,diagnostics,context);
case Fes20Package.EXTENDED_CAPABILITIES_TYPE:
return validateExtendedCapabilitiesType((ExtendedCapabilitiesType)value,diagnostics,context);
case Fes20Package.EXTENSION_OPERATOR_TYPE:
return validateExtensionOperatorType((ExtensionOperatorType)value,diagnostics,context);
case Fes20Package.EXTENSION_OPS_TYPE:
return validateExtensionOpsType((ExtensionOpsType)value,diagnostics,context);
case Fes20Package.FILTER_CAPABILITIES_TYPE:
return validateFilterCapabilitiesType((FilterCapabilitiesType)value,diagnostics,context);
case Fes20Package.FILTER_TYPE:
return validateFilterType((FilterType)value,diagnostics,context);
case Fes20Package.FUNCTION_TYPE:
return validateFunctionType((FunctionType)value,diagnostics,context);
case Fes20Package.GEOMETRY_OPERANDS_TYPE:
return validateGeometryOperandsType((GeometryOperandsType)value,diagnostics,context);
case Fes20Package.GEOMETRY_OPERAND_TYPE:
return validateGeometryOperandType((GeometryOperandType)value,diagnostics,context);
case Fes20Package.ID_CAPABILITIES_TYPE:
return validateIdCapabilitiesType((IdCapabilitiesType)value,diagnostics,context);
case Fes20Package.LITERAL_TYPE:
return validateLiteralType((LiteralType)value,diagnostics,context);
case Fes20Package.LOGICAL_OPERATORS_TYPE:
return validateLogicalOperatorsType((LogicalOperatorsType)value,diagnostics,context);
case Fes20Package.LOGIC_OPS_TYPE:
return validateLogicOpsType((LogicOpsType)value,diagnostics,context);
case Fes20Package.LOWER_BOUNDARY_TYPE:
return validateLowerBoundaryType((LowerBoundaryType)value,diagnostics,context);
case Fes20Package.MEASURE_TYPE:
return validateMeasureType((MeasureType)value,diagnostics,context);
case Fes20Package.PROPERTY_IS_BETWEEN_TYPE:
return validatePropertyIsBetweenType((PropertyIsBetweenType)value,diagnostics,context);
case Fes20Package.PROPERTY_IS_LIKE_TYPE:
return validatePropertyIsLikeType((PropertyIsLikeType)value,diagnostics,context);
case Fes20Package.PROPERTY_IS_NIL_TYPE:
return validatePropertyIsNilType((PropertyIsNilType)value,diagnostics,context);
case Fes20Package.PROPERTY_IS_NULL_TYPE:
return validatePropertyIsNullType((PropertyIsNullType)value,diagnostics,context);
case Fes20Package.RESOURCE_IDENTIFIER_TYPE:
return validateResourceIdentifierType((ResourceIdentifierType)value,diagnostics,context);
case Fes20Package.RESOURCE_ID_TYPE:
return validateResourceIdType((ResourceIdType)value,diagnostics,context);
case Fes20Package.SCALAR_CAPABILITIES_TYPE:
return validateScalarCapabilitiesType((ScalarCapabilitiesType)value,diagnostics,context);
case Fes20Package.SORT_BY_TYPE:
return validateSortByType((SortByType)value,diagnostics,context);
case Fes20Package.SORT_PROPERTY_TYPE:
return validateSortPropertyType((SortPropertyType)value,diagnostics,context);
case Fes20Package.SPATIAL_CAPABILITIES_TYPE:
return validateSpatialCapabilitiesType((SpatialCapabilitiesType)value,diagnostics,context);
case Fes20Package.SPATIAL_OPERATORS_TYPE:
return validateSpatialOperatorsType((SpatialOperatorsType)value,diagnostics,context);
case Fes20Package.SPATIAL_OPERATOR_TYPE:
return validateSpatialOperatorType((SpatialOperatorType)value,diagnostics,context);
case Fes20Package.SPATIAL_OPS_TYPE:
return validateSpatialOpsType((SpatialOpsType)value,diagnostics,context);
case Fes20Package.TEMPORAL_CAPABILITIES_TYPE:
return validateTemporalCapabilitiesType((TemporalCapabilitiesType)value,diagnostics,context);
case Fes20Package.TEMPORAL_OPERANDS_TYPE:
return validateTemporalOperandsType((TemporalOperandsType)value,diagnostics,context);
case Fes20Package.TEMPORAL_OPERAND_TYPE:
return validateTemporalOperandType((TemporalOperandType)value,diagnostics,context);
case Fes20Package.TEMPORAL_OPERATORS_TYPE:
return validateTemporalOperatorsType((TemporalOperatorsType)value,diagnostics,context);
case Fes20Package.TEMPORAL_OPERATOR_TYPE:
return validateTemporalOperatorType((TemporalOperatorType)value,diagnostics,context);
case Fes20Package.TEMPORAL_OPS_TYPE:
return validateTemporalOpsType((TemporalOpsType)value,diagnostics,context);
case Fes20Package.UNARY_LOGIC_OP_TYPE:
return validateUnaryLogicOpType((UnaryLogicOpType)value,diagnostics,context);
case Fes20Package.UPPER_BOUNDARY_TYPE:
return validateUpperBoundaryType((UpperBoundaryType)value,diagnostics,context);
case Fes20Package.COMPARISON_OPERATOR_NAME_TYPE_MEMBER0:
return validateComparisonOperatorNameTypeMember0((ComparisonOperatorNameTypeMember0)value,diagnostics,context);
case Fes20Package.MATCH_ACTION_TYPE:
return validateMatchActionType((MatchActionType)value,diagnostics,context);
case Fes20Package.SORT_ORDER_TYPE:
return validateSortOrderType((SortOrderType)value,diagnostics,context);
case Fes20Package.SPATIAL_OPERATOR_NAME_TYPE_MEMBER0:
return validateSpatialOperatorNameTypeMember0((SpatialOperatorNameTypeMember0)value,diagnostics,context);
case Fes20Package.TEMPORAL_OPERATOR_NAME_TYPE_MEMBER0:
return validateTemporalOperatorNameTypeMember0((TemporalOperatorNameTypeMember0)value,diagnostics,context);
case Fes20Package.VERSION_ACTION_TOKENS:
return validateVersionActionTokens((VersionActionTokens)value,diagnostics,context);
case Fes20Package.ALIASES_TYPE:
return validateAliasesType((List<?>)value,diagnostics,context);
case Fes20Package.COMPARISON_OPERATOR_NAME_TYPE:
return validateComparisonOperatorNameType(value,diagnostics,context);
case Fes20Package.COMPARISON_OPERATOR_NAME_TYPE_MEMBER0_OBJECT:
return validateComparisonOperatorNameTypeMember0Object((ComparisonOperatorNameTypeMember0)value,diagnostics,context);
case Fes20Package.COMPARISON_OPERATOR_NAME_TYPE_MEMBER1:
return validateComparisonOperatorNameTypeMember1((String)value,diagnostics,context);
case Fes20Package.MATCH_ACTION_TYPE_OBJECT:
return validateMatchActionTypeObject((MatchActionType)value,diagnostics,context);
case Fes20Package.SCHEMA_ELEMENT:
return validateSchemaElement((String)value,diagnostics,context);
case Fes20Package.SORT_ORDER_TYPE_OBJECT:
return validateSortOrderTypeObject((SortOrderType)value,diagnostics,context);
case Fes20Package.SPATIAL_OPERATOR_NAME_TYPE:
return validateSpatialOperatorNameType(value,diagnostics,context);
case Fes20Package.SPATIAL_OPERATOR_NAME_TYPE_MEMBER0_OBJECT:
return validateSpatialOperatorNameTypeMember0Object((SpatialOperatorNameTypeMember0)value,diagnostics,context);
case Fes20Package.SPATIAL_OPERATOR_NAME_TYPE_MEMBER1:
return validateSpatialOperatorNameTypeMember1((String)value,diagnostics,context);
case Fes20Package.TEMPORAL_OPERATOR_NAME_TYPE:
return validateTemporalOperatorNameType(value,diagnostics,context);
case Fes20Package.TEMPORAL_OPERATOR_NAME_TYPE_MEMBER0_OBJECT:
return validateTemporalOperatorNameTypeMember0Object((TemporalOperatorNameTypeMember0)value,diagnostics,context);
case Fes20Package.TEMPORAL_OPERATOR_NAME_TYPE_MEMBER1:
return validateTemporalOperatorNameTypeMember1((String)value,diagnostics,context);
case Fes20Package.TYPE_NAMES_LIST_TYPE:
return validateTypeNamesListType((List<?>)value,diagnostics,context);
case Fes20Package.TYPE_NAMES_TYPE:
return validateTypeNamesType(value,diagnostics,context);
case Fes20Package.UOM_IDENTIFIER:
return validateUomIdentifier((String)value,diagnostics,context);
case Fes20Package.UOM_SYMBOL:
return validateUomSymbol((String)value,diagnostics,context);
case Fes20Package.UOM_URI:
return validateUomURI((String)value,diagnostics,context);
case Fes20Package.VERSION_ACTION_TOKENS_OBJECT:
return validateVersionActionTokensObject((VersionActionTokens)value,diagnostics,context);
case Fes20Package.VERSION_TYPE:
return validateVersionType(value,diagnostics,context);
default :
return true;
}
}
