{
  if (isCreated)   return;
  isCreated=true;
  abstractDescriptionBaseTypeEClass=createEClass(ABSTRACT_DESCRIPTION_BASE_TYPE);
  abstractDescriptionTypeEClass=createEClass(ABSTRACT_DESCRIPTION_TYPE);
  createEReference(abstractDescriptionTypeEClass,ABSTRACT_DESCRIPTION_TYPE__METADATA_LINK);
  createEAttribute(abstractDescriptionTypeEClass,ABSTRACT_DESCRIPTION_TYPE__DESCRIPTION1);
  createEAttribute(abstractDescriptionTypeEClass,ABSTRACT_DESCRIPTION_TYPE__NAME1);
  createEAttribute(abstractDescriptionTypeEClass,ABSTRACT_DESCRIPTION_TYPE__LABEL);
  addressTypeEClass=createEClass(ADDRESS_TYPE);
  createEAttribute(addressTypeEClass,ADDRESS_TYPE__DELIVERY_POINT);
  createEAttribute(addressTypeEClass,ADDRESS_TYPE__CITY);
  createEAttribute(addressTypeEClass,ADDRESS_TYPE__ADMINISTRATIVE_AREA);
  createEAttribute(addressTypeEClass,ADDRESS_TYPE__POSTAL_CODE);
  createEAttribute(addressTypeEClass,ADDRESS_TYPE__COUNTRY);
  createEAttribute(addressTypeEClass,ADDRESS_TYPE__ELECTRONIC_MAIL_ADDRESS);
  axisDescriptionTypeEClass=createEClass(AXIS_DESCRIPTION_TYPE);
  createEReference(axisDescriptionTypeEClass,AXIS_DESCRIPTION_TYPE__VALUES);
  createEAttribute(axisDescriptionTypeEClass,AXIS_DESCRIPTION_TYPE__REF_SYS);
  createEAttribute(axisDescriptionTypeEClass,AXIS_DESCRIPTION_TYPE__REF_SYS_LABEL);
  createEAttribute(axisDescriptionTypeEClass,AXIS_DESCRIPTION_TYPE__SEMANTIC);
  axisDescriptionType1EClass=createEClass(AXIS_DESCRIPTION_TYPE1);
  createEReference(axisDescriptionType1EClass,AXIS_DESCRIPTION_TYPE1__AXIS_DESCRIPTION);
  axisSubsetTypeEClass=createEClass(AXIS_SUBSET_TYPE);
  createEAttribute(axisSubsetTypeEClass,AXIS_SUBSET_TYPE__NAME);
  contactTypeEClass=createEClass(CONTACT_TYPE);
  createEReference(contactTypeEClass,CONTACT_TYPE__PHONE);
  createEReference(contactTypeEClass,CONTACT_TYPE__ADDRESS);
  createEReference(contactTypeEClass,CONTACT_TYPE__ONLINE_RESOURCE);
  contentMetadataTypeEClass=createEClass(CONTENT_METADATA_TYPE);
  createEReference(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__COVERAGE_OFFERING_BRIEF);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__ACTUATE);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__ARCROLE);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__HREF);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__REMOTE_SCHEMA);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__ROLE);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__SHOW);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__TITLE);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__TYPE);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__UPDATE_SEQUENCE);
  createEAttribute(contentMetadataTypeEClass,CONTENT_METADATA_TYPE__VERSION);
  coverageDescriptionTypeEClass=createEClass(COVERAGE_DESCRIPTION_TYPE);
  createEReference(coverageDescriptionTypeEClass,COVERAGE_DESCRIPTION_TYPE__COVERAGE_OFFERING);
  createEAttribute(coverageDescriptionTypeEClass,COVERAGE_DESCRIPTION_TYPE__UPDATE_SEQUENCE);
  createEAttribute(coverageDescriptionTypeEClass,COVERAGE_DESCRIPTION_TYPE__VERSION);
  coverageOfferingBriefTypeEClass=createEClass(COVERAGE_OFFERING_BRIEF_TYPE);
  createEReference(coverageOfferingBriefTypeEClass,COVERAGE_OFFERING_BRIEF_TYPE__LON_LAT_ENVELOPE);
  createEReference(coverageOfferingBriefTypeEClass,COVERAGE_OFFERING_BRIEF_TYPE__KEYWORDS);
  coverageOfferingTypeEClass=createEClass(COVERAGE_OFFERING_TYPE);
  createEReference(coverageOfferingTypeEClass,COVERAGE_OFFERING_TYPE__DOMAIN_SET);
  createEReference(coverageOfferingTypeEClass,COVERAGE_OFFERING_TYPE__RANGE_SET);
  createEReference(coverageOfferingTypeEClass,COVERAGE_OFFERING_TYPE__SUPPORTED_CR_SS);
  createEReference(coverageOfferingTypeEClass,COVERAGE_OFFERING_TYPE__SUPPORTED_FORMATS);
  createEReference(coverageOfferingTypeEClass,COVERAGE_OFFERING_TYPE__SUPPORTED_INTERPOLATIONS);
  dcpTypeTypeEClass=createEClass(DCP_TYPE_TYPE);
  createEReference(dcpTypeTypeEClass,DCP_TYPE_TYPE__HTTP);
  describeCoverageTypeEClass=createEClass(DESCRIBE_COVERAGE_TYPE);
  createEAttribute(describeCoverageTypeEClass,DESCRIBE_COVERAGE_TYPE__COVERAGE);
  createEAttribute(describeCoverageTypeEClass,DESCRIBE_COVERAGE_TYPE__SERVICE);
  createEAttribute(describeCoverageTypeEClass,DESCRIBE_COVERAGE_TYPE__VERSION);
  createEAttribute(describeCoverageTypeEClass,DESCRIBE_COVERAGE_TYPE__BASE_URL);
  createEAttribute(describeCoverageTypeEClass,DESCRIBE_COVERAGE_TYPE__EXTENDED_PROPERTIES);
  describeCoverageType1EClass=createEClass(DESCRIBE_COVERAGE_TYPE1);
  createEReference(describeCoverageType1EClass,DESCRIBE_COVERAGE_TYPE1__DCP_TYPE);
  documentRootEClass=createEClass(DOCUMENT_ROOT);
  createEAttribute(documentRootEClass,DOCUMENT_ROOT__MIXED);
  createEReference(documentRootEClass,DOCUMENT_ROOT__XMLNS_PREFIX_MAP);
  createEReference(documentRootEClass,DOCUMENT_ROOT__XSI_SCHEMA_LOCATION);
  createEReference(documentRootEClass,DOCUMENT_ROOT__AXIS_DESCRIPTION);
  createEReference(documentRootEClass,DOCUMENT_ROOT__AXIS_DESCRIPTION1);
  createEReference(documentRootEClass,DOCUMENT_ROOT__CAPABILITY);
  createEReference(documentRootEClass,DOCUMENT_ROOT__CONTENT_METADATA);
  createEReference(documentRootEClass,DOCUMENT_ROOT__COVERAGE_DESCRIPTION);
  createEReference(documentRootEClass,DOCUMENT_ROOT__COVERAGE_OFFERING);
  createEReference(documentRootEClass,DOCUMENT_ROOT__COVERAGE_OFFERING_BRIEF);
  createEReference(documentRootEClass,DOCUMENT_ROOT__DESCRIBE_COVERAGE);
  createEAttribute(documentRootEClass,DOCUMENT_ROOT__DESCRIPTION);
  createEReference(documentRootEClass,DOCUMENT_ROOT__DOMAIN_SET);
  createEReference(documentRootEClass,DOCUMENT_ROOT__FORMATS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__GET_CAPABILITIES);
  createEReference(documentRootEClass,DOCUMENT_ROOT__GET_COVERAGE);
  createEAttribute(documentRootEClass,DOCUMENT_ROOT__INTERPOLATION_METHOD);
  createEReference(documentRootEClass,DOCUMENT_ROOT__INTERVAL);
  createEReference(documentRootEClass,DOCUMENT_ROOT__KEYWORDS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__LON_LAT_ENVELOPE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__METADATA_LINK);
  createEAttribute(documentRootEClass,DOCUMENT_ROOT__NAME);
  createEReference(documentRootEClass,DOCUMENT_ROOT__RANGE_SET);
  createEReference(documentRootEClass,DOCUMENT_ROOT__RANGE_SET1);
  createEReference(documentRootEClass,DOCUMENT_ROOT__SERVICE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__SINGLE_VALUE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__SPATIAL_DOMAIN);
  createEReference(documentRootEClass,DOCUMENT_ROOT__SPATIAL_SUBSET);
  createEReference(documentRootEClass,DOCUMENT_ROOT__SUPPORTED_CR_SS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__SUPPORTED_FORMATS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__SUPPORTED_INTERPOLATIONS);
  createEReference(documentRootEClass,DOCUMENT_ROOT__TEMPORAL_DOMAIN);
  createEReference(documentRootEClass,DOCUMENT_ROOT__TEMPORAL_SUBSET);
  createEReference(documentRootEClass,DOCUMENT_ROOT__TIME_PERIOD);
  createEReference(documentRootEClass,DOCUMENT_ROOT__TIME_SEQUENCE);
  createEReference(documentRootEClass,DOCUMENT_ROOT__WCS_CAPABILITIES);
  createEAttribute(documentRootEClass,DOCUMENT_ROOT__CLOSURE);
  createEAttribute(documentRootEClass,DOCUMENT_ROOT__SEMANTIC);
  createEAttribute(documentRootEClass,DOCUMENT_ROOT__TYPE);
  domainSetTypeEClass=createEClass(DOMAIN_SET_TYPE);
  createEReference(domainSetTypeEClass,DOMAIN_SET_TYPE__SPATIAL_DOMAIN);
  createEReference(domainSetTypeEClass,DOMAIN_SET_TYPE__TEMPORAL_DOMAIN);
  createEReference(domainSetTypeEClass,DOMAIN_SET_TYPE__TEMPORAL_DOMAIN1);
  domainSubsetTypeEClass=createEClass(DOMAIN_SUBSET_TYPE);
  createEReference(domainSubsetTypeEClass,DOMAIN_SUBSET_TYPE__SPATIAL_SUBSET);
  createEReference(domainSubsetTypeEClass,DOMAIN_SUBSET_TYPE__TEMPORAL_SUBSET);
  createEReference(domainSubsetTypeEClass,DOMAIN_SUBSET_TYPE__TEMPORAL_SUBSET1);
  exceptionTypeEClass=createEClass(EXCEPTION_TYPE);
  createEAttribute(exceptionTypeEClass,EXCEPTION_TYPE__FORMAT);
  getCapabilitiesTypeEClass=createEClass(GET_CAPABILITIES_TYPE);
  createEAttribute(getCapabilitiesTypeEClass,GET_CAPABILITIES_TYPE__SECTION);
  createEAttribute(getCapabilitiesTypeEClass,GET_CAPABILITIES_TYPE__SERVICE);
  createEAttribute(getCapabilitiesTypeEClass,GET_CAPABILITIES_TYPE__UPDATE_SEQUENCE);
  createEAttribute(getCapabilitiesTypeEClass,GET_CAPABILITIES_TYPE__VERSION);
  createEAttribute(getCapabilitiesTypeEClass,GET_CAPABILITIES_TYPE__BASE_URL);
  createEAttribute(getCapabilitiesTypeEClass,GET_CAPABILITIES_TYPE__EXTENDED_PROPERTIES);
  getCapabilitiesType1EClass=createEClass(GET_CAPABILITIES_TYPE1);
  createEReference(getCapabilitiesType1EClass,GET_CAPABILITIES_TYPE1__DCP_TYPE);
  getCoverageTypeEClass=createEClass(GET_COVERAGE_TYPE);
  createEAttribute(getCoverageTypeEClass,GET_COVERAGE_TYPE__SOURCE_COVERAGE);
  createEReference(getCoverageTypeEClass,GET_COVERAGE_TYPE__DOMAIN_SUBSET);
  createEReference(getCoverageTypeEClass,GET_COVERAGE_TYPE__RANGE_SUBSET);
  createEAttribute(getCoverageTypeEClass,GET_COVERAGE_TYPE__INTERPOLATION_METHOD);
  createEReference(getCoverageTypeEClass,GET_COVERAGE_TYPE__OUTPUT);
  createEAttribute(getCoverageTypeEClass,GET_COVERAGE_TYPE__SERVICE);
  createEAttribute(getCoverageTypeEClass,GET_COVERAGE_TYPE__VERSION);
  createEAttribute(getCoverageTypeEClass,GET_COVERAGE_TYPE__BASE_URL);
  createEAttribute(getCoverageTypeEClass,GET_COVERAGE_TYPE__EXTENDED_PROPERTIES);
  getCoverageType1EClass=createEClass(GET_COVERAGE_TYPE1);
  createEReference(getCoverageType1EClass,GET_COVERAGE_TYPE1__DCP_TYPE);
  getTypeEClass=createEClass(GET_TYPE);
  createEReference(getTypeEClass,GET_TYPE__ONLINE_RESOURCE);
  httpTypeEClass=createEClass(HTTP_TYPE);
  createEAttribute(httpTypeEClass,HTTP_TYPE__GROUP);
  createEReference(httpTypeEClass,HTTP_TYPE__GET);
  createEReference(httpTypeEClass,HTTP_TYPE__POST);
  intervalTypeEClass=createEClass(INTERVAL_TYPE);
  createEReference(intervalTypeEClass,INTERVAL_TYPE__RES);
  keywordsTypeEClass=createEClass(KEYWORDS_TYPE);
  createEAttribute(keywordsTypeEClass,KEYWORDS_TYPE__KEYWORD);
  createEReference(keywordsTypeEClass,KEYWORDS_TYPE__TYPE);
  lonLatEnvelopeBaseTypeEClass=createEClass(LON_LAT_ENVELOPE_BASE_TYPE);
  lonLatEnvelopeTypeEClass=createEClass(LON_LAT_ENVELOPE_TYPE);
  createEReference(lonLatEnvelopeTypeEClass,LON_LAT_ENVELOPE_TYPE__TIME_POSITION);
  metadataAssociationTypeEClass=createEClass(METADATA_ASSOCIATION_TYPE);
  metadataLinkTypeEClass=createEClass(METADATA_LINK_TYPE);
  createEAttribute(metadataLinkTypeEClass,METADATA_LINK_TYPE__METADATA_TYPE);
  onlineResourceTypeEClass=createEClass(ONLINE_RESOURCE_TYPE);
  createEAttribute(onlineResourceTypeEClass,ONLINE_RESOURCE_TYPE__ACTUATE);
  createEAttribute(onlineResourceTypeEClass,ONLINE_RESOURCE_TYPE__ARCROLE);
  createEAttribute(onlineResourceTypeEClass,ONLINE_RESOURCE_TYPE__HREF);
  createEAttribute(onlineResourceTypeEClass,ONLINE_RESOURCE_TYPE__ROLE);
  createEAttribute(onlineResourceTypeEClass,ONLINE_RESOURCE_TYPE__SHOW);
  createEAttribute(onlineResourceTypeEClass,ONLINE_RESOURCE_TYPE__TITLE);
  createEAttribute(onlineResourceTypeEClass,ONLINE_RESOURCE_TYPE__TYPE);
  outputTypeEClass=createEClass(OUTPUT_TYPE);
  createEReference(outputTypeEClass,OUTPUT_TYPE__CRS);
  createEReference(outputTypeEClass,OUTPUT_TYPE__FORMAT);
  postTypeEClass=createEClass(POST_TYPE);
  createEReference(postTypeEClass,POST_TYPE__ONLINE_RESOURCE);
  rangeSetTypeEClass=createEClass(RANGE_SET_TYPE);
  createEReference(rangeSetTypeEClass,RANGE_SET_TYPE__AXIS_DESCRIPTION);
  createEReference(rangeSetTypeEClass,RANGE_SET_TYPE__NULL_VALUES);
  createEAttribute(rangeSetTypeEClass,RANGE_SET_TYPE__REF_SYS);
  createEAttribute(rangeSetTypeEClass,RANGE_SET_TYPE__REF_SYS_LABEL);
  createEAttribute(rangeSetTypeEClass,RANGE_SET_TYPE__SEMANTIC);
  rangeSetType1EClass=createEClass(RANGE_SET_TYPE1);
  createEReference(rangeSetType1EClass,RANGE_SET_TYPE1__RANGE_SET);
  rangeSubsetTypeEClass=createEClass(RANGE_SUBSET_TYPE);
  createEReference(rangeSubsetTypeEClass,RANGE_SUBSET_TYPE__AXIS_SUBSET);
  requestTypeEClass=createEClass(REQUEST_TYPE);
  createEReference(requestTypeEClass,REQUEST_TYPE__GET_CAPABILITIES);
  createEReference(requestTypeEClass,REQUEST_TYPE__DESCRIBE_COVERAGE);
  createEReference(requestTypeEClass,REQUEST_TYPE__GET_COVERAGE);
  responsiblePartyTypeEClass=createEClass(RESPONSIBLE_PARTY_TYPE);
  createEAttribute(responsiblePartyTypeEClass,RESPONSIBLE_PARTY_TYPE__INDIVIDUAL_NAME);
  createEAttribute(responsiblePartyTypeEClass,RESPONSIBLE_PARTY_TYPE__ORGANISATION_NAME);
  createEAttribute(responsiblePartyTypeEClass,RESPONSIBLE_PARTY_TYPE__ORGANISATION_NAME1);
  createEAttribute(responsiblePartyTypeEClass,RESPONSIBLE_PARTY_TYPE__POSITION_NAME);
  createEReference(responsiblePartyTypeEClass,RESPONSIBLE_PARTY_TYPE__CONTACT_INFO);
  serviceTypeEClass=createEClass(SERVICE_TYPE);
  createEReference(serviceTypeEClass,SERVICE_TYPE__KEYWORDS);
  createEReference(serviceTypeEClass,SERVICE_TYPE__RESPONSIBLE_PARTY);
  createEReference(serviceTypeEClass,SERVICE_TYPE__FEES);
  createEReference(serviceTypeEClass,SERVICE_TYPE__ACCESS_CONSTRAINTS);
  createEAttribute(serviceTypeEClass,SERVICE_TYPE__UPDATE_SEQUENCE);
  createEAttribute(serviceTypeEClass,SERVICE_TYPE__VERSION);
  spatialDomainTypeEClass=createEClass(SPATIAL_DOMAIN_TYPE);
  createEReference(spatialDomainTypeEClass,SPATIAL_DOMAIN_TYPE__ENVELOPE);
  createEAttribute(spatialDomainTypeEClass,SPATIAL_DOMAIN_TYPE__GRID_GROUP);
  createEReference(spatialDomainTypeEClass,SPATIAL_DOMAIN_TYPE__GRID);
  createEReference(spatialDomainTypeEClass,SPATIAL_DOMAIN_TYPE__POLYGON);
  spatialSubsetTypeEClass=createEClass(SPATIAL_SUBSET_TYPE);
  supportedCRSsTypeEClass=createEClass(SUPPORTED_CR_SS_TYPE);
  createEReference(supportedCRSsTypeEClass,SUPPORTED_CR_SS_TYPE__REQUEST_RESPONSE_CR_SS);
  createEReference(supportedCRSsTypeEClass,SUPPORTED_CR_SS_TYPE__REQUEST_CR_SS);
  createEReference(supportedCRSsTypeEClass,SUPPORTED_CR_SS_TYPE__RESPONSE_CR_SS);
  createEReference(supportedCRSsTypeEClass,SUPPORTED_CR_SS_TYPE__NATIVE_CR_SS);
  supportedFormatsTypeEClass=createEClass(SUPPORTED_FORMATS_TYPE);
  createEReference(supportedFormatsTypeEClass,SUPPORTED_FORMATS_TYPE__FORMATS);
  createEAttribute(supportedFormatsTypeEClass,SUPPORTED_FORMATS_TYPE__NATIVE_FORMAT);
  supportedInterpolationsTypeEClass=createEClass(SUPPORTED_INTERPOLATIONS_TYPE);
  createEAttribute(supportedInterpolationsTypeEClass,SUPPORTED_INTERPOLATIONS_TYPE__INTERPOLATION_METHOD);
  createEAttribute(supportedInterpolationsTypeEClass,SUPPORTED_INTERPOLATIONS_TYPE__DEFAULT);
  telephoneTypeEClass=createEClass(TELEPHONE_TYPE);
  createEAttribute(telephoneTypeEClass,TELEPHONE_TYPE__VOICE);
  createEAttribute(telephoneTypeEClass,TELEPHONE_TYPE__FACSIMILE);
  timePeriodTypeEClass=createEClass(TIME_PERIOD_TYPE);
  createEReference(timePeriodTypeEClass,TIME_PERIOD_TYPE__BEGIN_POSITION);
  createEReference(timePeriodTypeEClass,TIME_PERIOD_TYPE__END_POSITION);
  createEAttribute(timePeriodTypeEClass,TIME_PERIOD_TYPE__TIME_RESOLUTION);
  createEAttribute(timePeriodTypeEClass,TIME_PERIOD_TYPE__FRAME);
  timeSequenceTypeEClass=createEClass(TIME_SEQUENCE_TYPE);
  createEAttribute(timeSequenceTypeEClass,TIME_SEQUENCE_TYPE__GROUP);
  createEReference(timeSequenceTypeEClass,TIME_SEQUENCE_TYPE__TIME_POSITION);
  createEReference(timeSequenceTypeEClass,TIME_SEQUENCE_TYPE__TIME_PERIOD);
  typedLiteralTypeEClass=createEClass(TYPED_LITERAL_TYPE);
  createEAttribute(typedLiteralTypeEClass,TYPED_LITERAL_TYPE__VALUE);
  createEAttribute(typedLiteralTypeEClass,TYPED_LITERAL_TYPE__TYPE);
  valueEnumBaseTypeEClass=createEClass(VALUE_ENUM_BASE_TYPE);
  createEAttribute(valueEnumBaseTypeEClass,VALUE_ENUM_BASE_TYPE__GROUP);
  createEReference(valueEnumBaseTypeEClass,VALUE_ENUM_BASE_TYPE__INTERVAL);
  createEReference(valueEnumBaseTypeEClass,VALUE_ENUM_BASE_TYPE__SINGLE_VALUE);
  valueEnumTypeEClass=createEClass(VALUE_ENUM_TYPE);
  createEAttribute(valueEnumTypeEClass,VALUE_ENUM_TYPE__SEMANTIC);
  createEAttribute(valueEnumTypeEClass,VALUE_ENUM_TYPE__TYPE);
  valueRangeTypeEClass=createEClass(VALUE_RANGE_TYPE);
  createEReference(valueRangeTypeEClass,VALUE_RANGE_TYPE__MIN);
  createEReference(valueRangeTypeEClass,VALUE_RANGE_TYPE__MAX);
  createEAttribute(valueRangeTypeEClass,VALUE_RANGE_TYPE__ATOMIC);
  createEAttribute(valueRangeTypeEClass,VALUE_RANGE_TYPE__CLOSURE);
  createEAttribute(valueRangeTypeEClass,VALUE_RANGE_TYPE__SEMANTIC);
  createEAttribute(valueRangeTypeEClass,VALUE_RANGE_TYPE__TYPE);
  valuesTypeEClass=createEClass(VALUES_TYPE);
  createEReference(valuesTypeEClass,VALUES_TYPE__DEFAULT);
  vendorSpecificCapabilitiesTypeEClass=createEClass(VENDOR_SPECIFIC_CAPABILITIES_TYPE);
  createEAttribute(vendorSpecificCapabilitiesTypeEClass,VENDOR_SPECIFIC_CAPABILITIES_TYPE__ANY);
  wcsCapabilitiesTypeEClass=createEClass(WCS_CAPABILITIES_TYPE);
  createEReference(wcsCapabilitiesTypeEClass,WCS_CAPABILITIES_TYPE__SERVICE);
  createEReference(wcsCapabilitiesTypeEClass,WCS_CAPABILITIES_TYPE__CAPABILITY);
  createEReference(wcsCapabilitiesTypeEClass,WCS_CAPABILITIES_TYPE__CONTENT_METADATA);
  createEAttribute(wcsCapabilitiesTypeEClass,WCS_CAPABILITIES_TYPE__UPDATE_SEQUENCE);
  createEAttribute(wcsCapabilitiesTypeEClass,WCS_CAPABILITIES_TYPE__VERSION);
  wcsCapabilityTypeEClass=createEClass(WCS_CAPABILITY_TYPE);
  createEReference(wcsCapabilityTypeEClass,WCS_CAPABILITY_TYPE__REQUEST);
  createEReference(wcsCapabilityTypeEClass,WCS_CAPABILITY_TYPE__EXCEPTION);
  createEReference(wcsCapabilityTypeEClass,WCS_CAPABILITY_TYPE__VENDOR_SPECIFIC_CAPABILITIES);
  createEAttribute(wcsCapabilityTypeEClass,WCS_CAPABILITY_TYPE__UPDATE_SEQUENCE);
  createEAttribute(wcsCapabilityTypeEClass,WCS_CAPABILITY_TYPE__VERSION);
  envelopeEClass=createEClass(ENVELOPE);
  generalEnvelopeEClass=createEClass(GENERAL_ENVELOPE);
  capabilitiesSectionTypeEEnum=createEEnum(CAPABILITIES_SECTION_TYPE);
  closureTypeEEnum=createEEnum(CLOSURE_TYPE);
  interpolationMethodTypeEEnum=createEEnum(INTERPOLATION_METHOD_TYPE);
  metadataTypeTypeEEnum=createEEnum(METADATA_TYPE_TYPE);
  capabilitiesSectionTypeObjectEDataType=createEDataType(CAPABILITIES_SECTION_TYPE_OBJECT);
  closureTypeObjectEDataType=createEDataType(CLOSURE_TYPE_OBJECT);
  interpolationMethodTypeObjectEDataType=createEDataType(INTERPOLATION_METHOD_TYPE_OBJECT);
  metadataTypeTypeObjectEDataType=createEDataType(METADATA_TYPE_TYPE_OBJECT);
  mapEDataType=createEDataType(MAP);
}
