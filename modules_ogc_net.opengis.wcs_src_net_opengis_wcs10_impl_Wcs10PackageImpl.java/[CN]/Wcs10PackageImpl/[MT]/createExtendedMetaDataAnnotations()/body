{
  String source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData";
  addAnnotation(abstractDescriptionBaseTypeEClass,source,new String[]{"name","AbstractDescriptionBaseType","kind","elementOnly"});
  addAnnotation(abstractDescriptionTypeEClass,source,new String[]{"name","AbstractDescriptionType","kind","elementOnly"});
  addAnnotation(getAbstractDescriptionType_MetadataLink(),source,new String[]{"kind","element","name","metadataLink","namespace","##targetNamespace"});
  addAnnotation(getAbstractDescriptionType_Description1(),source,new String[]{"kind","element","name","description","namespace","##targetNamespace"});
  addAnnotation(getAbstractDescriptionType_Name1(),source,new String[]{"kind","element","name","name","namespace","##targetNamespace"});
  addAnnotation(getAbstractDescriptionType_Label(),source,new String[]{"kind","element","name","label","namespace","##targetNamespace"});
  addAnnotation(addressTypeEClass,source,new String[]{"name","AddressType","kind","elementOnly"});
  addAnnotation(getAddressType_DeliveryPoint(),source,new String[]{"kind","element","name","deliveryPoint","namespace","##targetNamespace"});
  addAnnotation(getAddressType_City(),source,new String[]{"kind","element","name","city","namespace","##targetNamespace"});
  addAnnotation(getAddressType_AdministrativeArea(),source,new String[]{"kind","element","name","administrativeArea","namespace","##targetNamespace"});
  addAnnotation(getAddressType_PostalCode(),source,new String[]{"kind","element","name","postalCode","namespace","##targetNamespace"});
  addAnnotation(getAddressType_Country(),source,new String[]{"kind","element","name","country","namespace","##targetNamespace"});
  addAnnotation(getAddressType_ElectronicMailAddress(),source,new String[]{"kind","element","name","electronicMailAddress","namespace","##targetNamespace"});
  addAnnotation(axisDescriptionTypeEClass,source,new String[]{"name","AxisDescriptionType","kind","elementOnly"});
  addAnnotation(getAxisDescriptionType_Values(),source,new String[]{"kind","element","name","values","namespace","##targetNamespace"});
  addAnnotation(getAxisDescriptionType_RefSys(),source,new String[]{"kind","attribute","name","refSys"});
  addAnnotation(getAxisDescriptionType_RefSysLabel(),source,new String[]{"kind","attribute","name","refSysLabel"});
  addAnnotation(getAxisDescriptionType_Semantic(),source,new String[]{"kind","attribute","name","semantic","namespace","##targetNamespace"});
  addAnnotation(axisDescriptionType1EClass,source,new String[]{"name","axisDescription_._type","kind","elementOnly"});
  addAnnotation(getAxisDescriptionType1_AxisDescription(),source,new String[]{"kind","element","name","AxisDescription","namespace","##targetNamespace"});
  addAnnotation(axisSubsetTypeEClass,source,new String[]{"name","axisSubset_._type","kind","elementOnly"});
  addAnnotation(getAxisSubsetType_Name(),source,new String[]{"kind","attribute","name","name"});
  addAnnotation(contactTypeEClass,source,new String[]{"name","ContactType","kind","elementOnly"});
  addAnnotation(getContactType_Phone(),source,new String[]{"kind","element","name","phone","namespace","##targetNamespace"});
  addAnnotation(getContactType_Address(),source,new String[]{"kind","element","name","address","namespace","##targetNamespace"});
  addAnnotation(getContactType_OnlineResource(),source,new String[]{"kind","element","name","onlineResource","namespace","##targetNamespace"});
  addAnnotation(contentMetadataTypeEClass,source,new String[]{"name","ContentMetadata_._type","kind","elementOnly"});
  addAnnotation(getContentMetadataType_CoverageOfferingBrief(),source,new String[]{"kind","element","name","CoverageOfferingBrief","namespace","##targetNamespace"});
  addAnnotation(getContentMetadataType_Actuate(),source,new String[]{"kind","attribute","name","actuate","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getContentMetadataType_Arcrole(),source,new String[]{"kind","attribute","name","arcrole","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getContentMetadataType_Href(),source,new String[]{"kind","attribute","name","href","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getContentMetadataType_RemoteSchema(),source,new String[]{"kind","attribute","name","remoteSchema","namespace","http://www.opengis.net/gml"});
  addAnnotation(getContentMetadataType_Role(),source,new String[]{"kind","attribute","name","role","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getContentMetadataType_Show(),source,new String[]{"kind","attribute","name","show","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getContentMetadataType_Title(),source,new String[]{"kind","attribute","name","title","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getContentMetadataType_Type(),source,new String[]{"kind","attribute","name","type","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getContentMetadataType_UpdateSequence(),source,new String[]{"kind","attribute","name","updateSequence"});
  addAnnotation(getContentMetadataType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(coverageDescriptionTypeEClass,source,new String[]{"name","CoverageDescription_._type","kind","elementOnly"});
  addAnnotation(getCoverageDescriptionType_CoverageOffering(),source,new String[]{"kind","element","name","CoverageOffering","namespace","##targetNamespace"});
  addAnnotation(getCoverageDescriptionType_UpdateSequence(),source,new String[]{"kind","attribute","name","updateSequence"});
  addAnnotation(getCoverageDescriptionType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(coverageOfferingBriefTypeEClass,source,new String[]{"name","CoverageOfferingBriefType","kind","elementOnly"});
  addAnnotation(getCoverageOfferingBriefType_LonLatEnvelope(),source,new String[]{"kind","element","name","lonLatEnvelope","namespace","##targetNamespace"});
  addAnnotation(getCoverageOfferingBriefType_Keywords(),source,new String[]{"kind","element","name","keywords","namespace","##targetNamespace"});
  addAnnotation(coverageOfferingTypeEClass,source,new String[]{"name","CoverageOfferingType","kind","elementOnly"});
  addAnnotation(getCoverageOfferingType_DomainSet(),source,new String[]{"kind","element","name","domainSet","namespace","##targetNamespace"});
  addAnnotation(getCoverageOfferingType_RangeSet(),source,new String[]{"kind","element","name","rangeSet","namespace","##targetNamespace"});
  addAnnotation(getCoverageOfferingType_SupportedCRSs(),source,new String[]{"kind","element","name","supportedCRSs","namespace","##targetNamespace"});
  addAnnotation(getCoverageOfferingType_SupportedFormats(),source,new String[]{"kind","element","name","supportedFormats","namespace","##targetNamespace"});
  addAnnotation(getCoverageOfferingType_SupportedInterpolations(),source,new String[]{"kind","element","name","supportedInterpolations","namespace","##targetNamespace"});
  addAnnotation(dcpTypeTypeEClass,source,new String[]{"name","DCPTypeType","kind","elementOnly"});
  addAnnotation(getDCPTypeType_HTTP(),source,new String[]{"kind","element","name","HTTP","namespace","##targetNamespace"});
  addAnnotation(describeCoverageTypeEClass,source,new String[]{"name","DescribeCoverage_._1_._type","kind","elementOnly"});
  addAnnotation(getDescribeCoverageType_Service(),source,new String[]{"kind","attribute","name","service"});
  addAnnotation(getDescribeCoverageType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(describeCoverageType1EClass,source,new String[]{"name","DescribeCoverage_._type","kind","elementOnly"});
  addAnnotation(getDescribeCoverageType1_DCPType(),source,new String[]{"kind","element","name","DCPType","namespace","##targetNamespace"});
  addAnnotation(documentRootEClass,source,new String[]{"name","","kind","mixed"});
  addAnnotation(getDocumentRoot_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getDocumentRoot_XMLNSPrefixMap(),source,new String[]{"kind","attribute","name","xmlns:prefix"});
  addAnnotation(getDocumentRoot_XSISchemaLocation(),source,new String[]{"kind","attribute","name","xsi:schemaLocation"});
  addAnnotation(getDocumentRoot_AxisDescription(),source,new String[]{"kind","element","name","axisDescription","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_AxisDescription1(),source,new String[]{"kind","element","name","AxisDescription","namespace","##targetNamespace","affiliation","http://www.opengis.net/gml#_GML"});
  addAnnotation(getDocumentRoot_Capability(),source,new String[]{"kind","element","name","Capability","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_ContentMetadata(),source,new String[]{"kind","element","name","ContentMetadata","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_CoverageDescription(),source,new String[]{"kind","element","name","CoverageDescription","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_CoverageOffering(),source,new String[]{"kind","element","name","CoverageOffering","namespace","##targetNamespace","affiliation","http://www.opengis.net/gml#_GML"});
  addAnnotation(getDocumentRoot_CoverageOfferingBrief(),source,new String[]{"kind","element","name","CoverageOfferingBrief","namespace","##targetNamespace","affiliation","http://www.opengis.net/gml#_GML"});
  addAnnotation(getDocumentRoot_DescribeCoverage(),source,new String[]{"kind","element","name","DescribeCoverage","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Description(),source,new String[]{"kind","element","name","description","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_DomainSet(),source,new String[]{"kind","element","name","domainSet","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Formats(),source,new String[]{"kind","element","name","formats","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_GetCapabilities(),source,new String[]{"kind","element","name","GetCapabilities","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_GetCoverage(),source,new String[]{"kind","element","name","GetCoverage","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_InterpolationMethod(),source,new String[]{"kind","element","name","interpolationMethod","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Interval(),source,new String[]{"kind","element","name","interval","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Keywords(),source,new String[]{"kind","element","name","keywords","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_LonLatEnvelope(),source,new String[]{"kind","element","name","lonLatEnvelope","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_MetadataLink(),source,new String[]{"kind","element","name","metadataLink","namespace","##targetNamespace","affiliation","http://www.opengis.net/gml#metaDataProperty"});
  addAnnotation(getDocumentRoot_Name(),source,new String[]{"kind","element","name","name","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_RangeSet(),source,new String[]{"kind","element","name","rangeSet","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_RangeSet1(),source,new String[]{"kind","element","name","RangeSet","namespace","##targetNamespace","affiliation","http://www.opengis.net/gml#_GML"});
  addAnnotation(getDocumentRoot_Service(),source,new String[]{"kind","element","name","Service","namespace","##targetNamespace","affiliation","http://www.opengis.net/gml#_GML"});
  addAnnotation(getDocumentRoot_SingleValue(),source,new String[]{"kind","element","name","singleValue","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_SpatialDomain(),source,new String[]{"kind","element","name","spatialDomain","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_SpatialSubset(),source,new String[]{"kind","element","name","spatialSubset","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_SupportedCRSs(),source,new String[]{"kind","element","name","supportedCRSs","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_SupportedFormats(),source,new String[]{"kind","element","name","supportedFormats","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_SupportedInterpolations(),source,new String[]{"kind","element","name","supportedInterpolations","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_TemporalDomain(),source,new String[]{"kind","element","name","temporalDomain","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_TemporalSubset(),source,new String[]{"kind","element","name","temporalSubset","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_TimePeriod(),source,new String[]{"kind","element","name","timePeriod","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_TimeSequence(),source,new String[]{"kind","element","name","TimeSequence","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_WCSCapabilities(),source,new String[]{"kind","element","name","WCS_Capabilities","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Closure(),source,new String[]{"kind","attribute","name","closure","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Semantic(),source,new String[]{"kind","attribute","name","semantic","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Type(),source,new String[]{"kind","attribute","name","type","namespace","##targetNamespace"});
  addAnnotation(domainSetTypeEClass,source,new String[]{"name","DomainSetType","kind","elementOnly"});
  addAnnotation(getDomainSetType_SpatialDomain(),source,new String[]{"kind","element","name","spatialDomain","namespace","##targetNamespace"});
  addAnnotation(getDomainSetType_TemporalDomain(),source,new String[]{"kind","element","name","temporalDomain","namespace","##targetNamespace"});
  addAnnotation(getDomainSetType_TemporalDomain1(),source,new String[]{"kind","element","name","temporalDomain","namespace","##targetNamespace"});
  addAnnotation(domainSubsetTypeEClass,source,new String[]{"name","DomainSubsetType","kind","elementOnly"});
  addAnnotation(getDomainSubsetType_SpatialSubset(),source,new String[]{"kind","element","name","spatialSubset","namespace","##targetNamespace"});
  addAnnotation(getDomainSubsetType_TemporalSubset(),source,new String[]{"kind","element","name","temporalSubset","namespace","##targetNamespace"});
  addAnnotation(getDomainSubsetType_TemporalSubset1(),source,new String[]{"kind","element","name","temporalSubset","namespace","##targetNamespace"});
  addAnnotation(exceptionTypeEClass,source,new String[]{"name","Exception_._type","kind","elementOnly"});
  addAnnotation(getExceptionType_Format(),source,new String[]{"kind","element","name","Format","namespace","##targetNamespace"});
  addAnnotation(getCapabilitiesTypeEClass,source,new String[]{"name","GetCapabilities_._type","kind","elementOnly"});
  addAnnotation(getGetCapabilitiesType_Section(),source,new String[]{"kind","element","name","section","namespace","##targetNamespace"});
  addAnnotation(getGetCapabilitiesType_Service(),source,new String[]{"kind","attribute","name","service"});
  addAnnotation(getGetCapabilitiesType_UpdateSequence(),source,new String[]{"kind","attribute","name","updateSequence"});
  addAnnotation(getGetCapabilitiesType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(getCapabilitiesType1EClass,source,new String[]{"name","GetCapabilities_._1_._type","kind","elementOnly"});
  addAnnotation(getGetCapabilitiesType1_DCPType(),source,new String[]{"kind","element","name","DCPType","namespace","##targetNamespace"});
  addAnnotation(getCoverageTypeEClass,source,new String[]{"name","GetCoverage_._type","kind","elementOnly"});
  addAnnotation(getGetCoverageType_SourceCoverage(),source,new String[]{"kind","element","name","sourceCoverage","namespace","##targetNamespace"});
  addAnnotation(getGetCoverageType_DomainSubset(),source,new String[]{"kind","element","name","domainSubset","namespace","##targetNamespace"});
  addAnnotation(getGetCoverageType_RangeSubset(),source,new String[]{"kind","element","name","rangeSubset","namespace","##targetNamespace"});
  addAnnotation(getGetCoverageType_InterpolationMethod(),source,new String[]{"kind","element","name","interpolationMethod","namespace","##targetNamespace"});
  addAnnotation(getGetCoverageType_Output(),source,new String[]{"kind","element","name","output","namespace","##targetNamespace"});
  addAnnotation(getGetCoverageType_Service(),source,new String[]{"kind","attribute","name","service"});
  addAnnotation(getGetCoverageType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(getCoverageType1EClass,source,new String[]{"name","GetCoverage_._1_._type","kind","elementOnly"});
  addAnnotation(getGetCoverageType1_DCPType(),source,new String[]{"kind","element","name","DCPType","namespace","##targetNamespace"});
  addAnnotation(getTypeEClass,source,new String[]{"name","Get_._type","kind","elementOnly"});
  addAnnotation(getGetType_OnlineResource(),source,new String[]{"kind","element","name","OnlineResource","namespace","##targetNamespace"});
  addAnnotation(httpTypeEClass,source,new String[]{"name","HTTP_._type","kind","elementOnly"});
  addAnnotation(getHTTPType_Group(),source,new String[]{"kind","group","name","group:0"});
  addAnnotation(getHTTPType_Get(),source,new String[]{"kind","element","name","Get","namespace","##targetNamespace","group","#group:0"});
  addAnnotation(getHTTPType_Post(),source,new String[]{"kind","element","name","Post","namespace","##targetNamespace","group","#group:0"});
  addAnnotation(intervalTypeEClass,source,new String[]{"name","intervalType","kind","elementOnly"});
  addAnnotation(getIntervalType_Res(),source,new String[]{"kind","element","name","res","namespace","##targetNamespace"});
  addAnnotation(keywordsTypeEClass,source,new String[]{"name","keywords_._type","kind","elementOnly"});
  addAnnotation(getKeywordsType_Keyword(),source,new String[]{"kind","element","name","keyword","namespace","##targetNamespace"});
  addAnnotation(getKeywordsType_Type(),source,new String[]{"kind","element","name","type","namespace","##targetNamespace"});
  addAnnotation(lonLatEnvelopeBaseTypeEClass,source,new String[]{"name","LonLatEnvelopeBaseType","kind","elementOnly"});
  addAnnotation(lonLatEnvelopeTypeEClass,source,new String[]{"name","LonLatEnvelopeType","kind","elementOnly"});
  addAnnotation(getLonLatEnvelopeType_TimePosition(),source,new String[]{"kind","element","name","timePosition","namespace","http://www.opengis.net/gml"});
  addAnnotation(metadataAssociationTypeEClass,source,new String[]{"name","MetadataAssociationType","kind","elementOnly"});
  addAnnotation(metadataLinkTypeEClass,source,new String[]{"name","MetadataLinkType","kind","empty"});
  addAnnotation(getMetadataLinkType_MetadataType(),source,new String[]{"kind","attribute","name","metadataType"});
  addAnnotation(onlineResourceTypeEClass,source,new String[]{"name","OnlineResourceType","kind","empty"});
  addAnnotation(getOnlineResourceType_Actuate(),source,new String[]{"kind","attribute","name","actuate","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getOnlineResourceType_Arcrole(),source,new String[]{"kind","attribute","name","arcrole","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getOnlineResourceType_Href(),source,new String[]{"kind","attribute","name","href","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getOnlineResourceType_Role(),source,new String[]{"kind","attribute","name","role","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getOnlineResourceType_Show(),source,new String[]{"kind","attribute","name","show","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getOnlineResourceType_Title(),source,new String[]{"kind","attribute","name","title","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(getOnlineResourceType_Type(),source,new String[]{"kind","attribute","name","type","namespace","http://www.w3.org/1999/xlink"});
  addAnnotation(outputTypeEClass,source,new String[]{"name","OutputType","kind","elementOnly"});
  addAnnotation(getOutputType_Crs(),source,new String[]{"kind","element","name","crs","namespace","##targetNamespace"});
  addAnnotation(getOutputType_Format(),source,new String[]{"kind","element","name","format","namespace","##targetNamespace"});
  addAnnotation(postTypeEClass,source,new String[]{"name","Post_._type","kind","elementOnly"});
  addAnnotation(getPostType_OnlineResource(),source,new String[]{"kind","element","name","OnlineResource","namespace","##targetNamespace"});
  addAnnotation(rangeSetTypeEClass,source,new String[]{"name","RangeSetType","kind","elementOnly"});
  addAnnotation(getRangeSetType_AxisDescription(),source,new String[]{"kind","element","name","axisDescription","namespace","##targetNamespace"});
  addAnnotation(getRangeSetType_NullValues(),source,new String[]{"kind","element","name","nullValues","namespace","##targetNamespace"});
  addAnnotation(getRangeSetType_RefSys(),source,new String[]{"kind","attribute","name","refSys"});
  addAnnotation(getRangeSetType_RefSysLabel(),source,new String[]{"kind","attribute","name","refSysLabel"});
  addAnnotation(getRangeSetType_Semantic(),source,new String[]{"kind","attribute","name","semantic","namespace","##targetNamespace"});
  addAnnotation(rangeSetType1EClass,source,new String[]{"name","rangeSet_._type","kind","elementOnly"});
  addAnnotation(getRangeSetType1_RangeSet(),source,new String[]{"kind","element","name","RangeSet","namespace","##targetNamespace"});
  addAnnotation(rangeSubsetTypeEClass,source,new String[]{"name","RangeSubsetType","kind","elementOnly"});
  addAnnotation(getRangeSubsetType_AxisSubset(),source,new String[]{"kind","element","name","axisSubset","namespace","##targetNamespace"});
  addAnnotation(requestTypeEClass,source,new String[]{"name","Request_._type","kind","elementOnly"});
  addAnnotation(getRequestType_GetCapabilities(),source,new String[]{"kind","element","name","GetCapabilities","namespace","##targetNamespace"});
  addAnnotation(getRequestType_DescribeCoverage(),source,new String[]{"kind","element","name","DescribeCoverage","namespace","##targetNamespace"});
  addAnnotation(getRequestType_GetCoverage(),source,new String[]{"kind","element","name","GetCoverage","namespace","##targetNamespace"});
  addAnnotation(responsiblePartyTypeEClass,source,new String[]{"name","ResponsiblePartyType","kind","elementOnly"});
  addAnnotation(getResponsiblePartyType_IndividualName(),source,new String[]{"kind","element","name","individualName","namespace","##targetNamespace"});
  addAnnotation(getResponsiblePartyType_OrganisationName(),source,new String[]{"kind","element","name","organisationName","namespace","##targetNamespace"});
  addAnnotation(getResponsiblePartyType_OrganisationName1(),source,new String[]{"kind","element","name","organisationName","namespace","##targetNamespace"});
  addAnnotation(getResponsiblePartyType_PositionName(),source,new String[]{"kind","element","name","positionName","namespace","##targetNamespace"});
  addAnnotation(getResponsiblePartyType_ContactInfo(),source,new String[]{"kind","element","name","contactInfo","namespace","##targetNamespace"});
  addAnnotation(serviceTypeEClass,source,new String[]{"name","ServiceType","kind","elementOnly"});
  addAnnotation(getServiceType_Keywords(),source,new String[]{"kind","element","name","keywords","namespace","##targetNamespace"});
  addAnnotation(getServiceType_ResponsibleParty(),source,new String[]{"kind","element","name","responsibleParty","namespace","##targetNamespace"});
  addAnnotation(getServiceType_Fees(),source,new String[]{"kind","element","name","fees","namespace","##targetNamespace"});
  addAnnotation(getServiceType_AccessConstraints(),source,new String[]{"kind","element","name","accessConstraints","namespace","##targetNamespace"});
  addAnnotation(getServiceType_UpdateSequence(),source,new String[]{"kind","attribute","name","updateSequence"});
  addAnnotation(getServiceType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(spatialDomainTypeEClass,source,new String[]{"name","SpatialDomainType","kind","elementOnly"});
  addAnnotation(getSpatialDomainType_GridGroup(),source,new String[]{"kind","group","name","Grid:group","namespace","http://www.opengis.net/gml"});
  addAnnotation(getSpatialDomainType_Grid(),source,new String[]{"kind","element","name","Grid","namespace","http://www.opengis.net/gml","group","http://www.opengis.net/gml#Grid:group"});
  addAnnotation(getSpatialDomainType_Polygon(),source,new String[]{"kind","element","name","Polygon","namespace","http://www.opengis.net/gml"});
  addAnnotation(spatialSubsetTypeEClass,source,new String[]{"name","SpatialSubsetType","kind","elementOnly"});
  addAnnotation(supportedCRSsTypeEClass,source,new String[]{"name","SupportedCRSsType","kind","elementOnly"});
  addAnnotation(getSupportedCRSsType_RequestResponseCRSs(),source,new String[]{"kind","element","name","requestResponseCRSs","namespace","##targetNamespace"});
  addAnnotation(getSupportedCRSsType_RequestCRSs(),source,new String[]{"kind","element","name","requestCRSs","namespace","##targetNamespace"});
  addAnnotation(getSupportedCRSsType_ResponseCRSs(),source,new String[]{"kind","element","name","responseCRSs","namespace","##targetNamespace"});
  addAnnotation(getSupportedCRSsType_NativeCRSs(),source,new String[]{"kind","element","name","nativeCRSs","namespace","##targetNamespace"});
  addAnnotation(supportedFormatsTypeEClass,source,new String[]{"name","SupportedFormatsType","kind","elementOnly"});
  addAnnotation(getSupportedFormatsType_Formats(),source,new String[]{"kind","element","name","formats","namespace","##targetNamespace"});
  addAnnotation(getSupportedFormatsType_NativeFormat(),source,new String[]{"kind","attribute","name","nativeFormat"});
  addAnnotation(supportedInterpolationsTypeEClass,source,new String[]{"name","SupportedInterpolationsType","kind","elementOnly"});
  addAnnotation(getSupportedInterpolationsType_InterpolationMethod(),source,new String[]{"kind","element","name","interpolationMethod","namespace","##targetNamespace"});
  addAnnotation(getSupportedInterpolationsType_Default(),source,new String[]{"kind","attribute","name","default"});
  addAnnotation(telephoneTypeEClass,source,new String[]{"name","TelephoneType","kind","elementOnly"});
  addAnnotation(getTelephoneType_Voice(),source,new String[]{"kind","element","name","voice","namespace","##targetNamespace"});
  addAnnotation(getTelephoneType_Facsimile(),source,new String[]{"kind","element","name","facsimile","namespace","##targetNamespace"});
  addAnnotation(timePeriodTypeEClass,source,new String[]{"name","TimePeriodType","kind","elementOnly"});
  addAnnotation(getTimePeriodType_BeginPosition(),source,new String[]{"kind","element","name","beginPosition","namespace","##targetNamespace"});
  addAnnotation(getTimePeriodType_EndPosition(),source,new String[]{"kind","element","name","endPosition","namespace","##targetNamespace"});
  addAnnotation(getTimePeriodType_TimeResolution(),source,new String[]{"kind","element","name","timeResolution","namespace","##targetNamespace"});
  addAnnotation(getTimePeriodType_Frame(),source,new String[]{"kind","attribute","name","frame"});
  addAnnotation(timeSequenceTypeEClass,source,new String[]{"name","TimeSequenceType","kind","elementOnly"});
  addAnnotation(getTimeSequenceType_Group(),source,new String[]{"kind","group","name","group:0"});
  addAnnotation(getTimeSequenceType_TimePosition(),source,new String[]{"kind","element","name","timePosition","namespace","http://www.opengis.net/gml","group","#group:0"});
  addAnnotation(getTimeSequenceType_TimePeriod(),source,new String[]{"kind","element","name","timePeriod","namespace","##targetNamespace","group","#group:0"});
  addAnnotation(typedLiteralTypeEClass,source,new String[]{"name","TypedLiteralType","kind","simple"});
  addAnnotation(getTypedLiteralType_Value(),source,new String[]{"name",":0","kind","simple"});
  addAnnotation(getTypedLiteralType_Type(),source,new String[]{"kind","attribute","name","type","namespace","##targetNamespace"});
  addAnnotation(valueEnumBaseTypeEClass,source,new String[]{"name","valueEnumBaseType","kind","elementOnly"});
  addAnnotation(getValueEnumBaseType_Group(),source,new String[]{"kind","group","name","group:0"});
  addAnnotation(getValueEnumBaseType_Interval(),source,new String[]{"kind","element","name","interval","namespace","##targetNamespace","group","#group:0"});
  addAnnotation(getValueEnumBaseType_SingleValue(),source,new String[]{"kind","element","name","singleValue","namespace","##targetNamespace","group","#group:0"});
  addAnnotation(valueEnumTypeEClass,source,new String[]{"name","valueEnumType","kind","elementOnly"});
  addAnnotation(getValueEnumType_Semantic(),source,new String[]{"kind","attribute","name","semantic","namespace","##targetNamespace"});
  addAnnotation(getValueEnumType_Type(),source,new String[]{"kind","attribute","name","type","namespace","##targetNamespace"});
  addAnnotation(valueRangeTypeEClass,source,new String[]{"name","valueRangeType","kind","elementOnly"});
  addAnnotation(getValueRangeType_Min(),source,new String[]{"kind","element","name","min","namespace","##targetNamespace"});
  addAnnotation(getValueRangeType_Max(),source,new String[]{"kind","element","name","max","namespace","##targetNamespace"});
  addAnnotation(getValueRangeType_Atomic(),source,new String[]{"kind","attribute","name","atomic"});
  addAnnotation(getValueRangeType_Closure(),source,new String[]{"kind","attribute","name","closure","namespace","##targetNamespace"});
  addAnnotation(getValueRangeType_Semantic(),source,new String[]{"kind","attribute","name","semantic","namespace","##targetNamespace"});
  addAnnotation(getValueRangeType_Type(),source,new String[]{"kind","attribute","name","type","namespace","##targetNamespace"});
  addAnnotation(valuesTypeEClass,source,new String[]{"name","values_._type","kind","elementOnly"});
  addAnnotation(getValuesType_Default(),source,new String[]{"kind","element","name","default","namespace","##targetNamespace"});
  addAnnotation(vendorSpecificCapabilitiesTypeEClass,source,new String[]{"name","VendorSpecificCapabilities_._type","kind","elementOnly"});
  addAnnotation(getVendorSpecificCapabilitiesType_Any(),source,new String[]{"kind","elementWildcard","wildcards","##any","name",":0","processing","strict"});
  addAnnotation(wcsCapabilitiesTypeEClass,source,new String[]{"name","WCS_CapabilitiesType","kind","elementOnly"});
  addAnnotation(getWCSCapabilitiesType_Service(),source,new String[]{"kind","element","name","Service","namespace","##targetNamespace"});
  addAnnotation(getWCSCapabilitiesType_Capability(),source,new String[]{"kind","element","name","Capability","namespace","##targetNamespace"});
  addAnnotation(getWCSCapabilitiesType_ContentMetadata(),source,new String[]{"kind","element","name","ContentMetadata","namespace","##targetNamespace"});
  addAnnotation(getWCSCapabilitiesType_UpdateSequence(),source,new String[]{"kind","attribute","name","updateSequence"});
  addAnnotation(getWCSCapabilitiesType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(wcsCapabilityTypeEClass,source,new String[]{"name","WCSCapabilityType","kind","elementOnly"});
  addAnnotation(getWCSCapabilityType_Request(),source,new String[]{"kind","element","name","Request","namespace","##targetNamespace"});
  addAnnotation(getWCSCapabilityType_Exception(),source,new String[]{"kind","element","name","Exception","namespace","##targetNamespace"});
  addAnnotation(getWCSCapabilityType_VendorSpecificCapabilities(),source,new String[]{"kind","element","name","VendorSpecificCapabilities","namespace","##targetNamespace"});
  addAnnotation(getWCSCapabilityType_UpdateSequence(),source,new String[]{"kind","attribute","name","updateSequence"});
  addAnnotation(getWCSCapabilityType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(capabilitiesSectionTypeEEnum,source,new String[]{"name","CapabilitiesSectionType"});
  addAnnotation(closureTypeEEnum,source,new String[]{"name","closure_._type"});
  addAnnotation(interpolationMethodTypeEEnum,source,new String[]{"name","InterpolationMethodType"});
  addAnnotation(metadataTypeTypeEEnum,source,new String[]{"name","metadataType_._type"});
  addAnnotation(capabilitiesSectionTypeObjectEDataType,source,new String[]{"name","CapabilitiesSectionType:Object","baseType","CapabilitiesSectionType"});
  addAnnotation(closureTypeObjectEDataType,source,new String[]{"name","closure_._type:Object","baseType","closure_._type"});
  addAnnotation(interpolationMethodTypeObjectEDataType,source,new String[]{"name","InterpolationMethodType:Object","baseType","InterpolationMethodType"});
  addAnnotation(metadataTypeTypeObjectEDataType,source,new String[]{"name","metadataType_._type:Object","baseType","metadataType_._type"});
}
