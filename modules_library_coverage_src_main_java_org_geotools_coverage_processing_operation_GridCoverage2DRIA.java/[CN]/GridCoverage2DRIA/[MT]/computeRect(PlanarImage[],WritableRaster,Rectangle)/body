{
  RasterFormatTag formatTag=getFormatTags()[1];
  RasterAccessor d=new RasterAccessor(dest,destRect,formatTag,getColorModel());
  ROI roiTile=null;
  RandomIter roiIter=null;
  boolean roiContainsTile=false;
  boolean roiDisjointTile=false;
  if (hasROI) {
    Rectangle srcRectExpanded=null;
    int x=(int)destRect.getMinX();
    int y=(int)destRect.getMinY();
    int w=(int)destRect.getWidth();
    int h=(int)destRect.getHeight();
    float[] src=new float[w * h * 2];
    warpRect(x,y,w,h,src);
    double minX=Double.POSITIVE_INFINITY;
    double minY=Double.POSITIVE_INFINITY;
    double maxX=Double.NEGATIVE_INFINITY;
    double maxY=Double.NEGATIVE_INFINITY;
    int numP=src.length;
    for (int i=0; i < numP; i=i + 2) {
      float xi=src[i];
      float yi=src[i + 1];
      minX=xi < minX ? xi : minX;
      minY=yi < minY ? yi : minY;
      maxX=xi > maxX ? xi : maxX;
      maxY=yi > maxY ? yi : maxY;
    }
    srcRectExpanded=new Rectangle((int)minX,(int)minY,(int)(maxX - minX) + 1,(int)(maxY - minY) + 1);
    srcRectExpanded.setRect(srcRectExpanded.getMinX() - interp.getLeftPadding(),srcRectExpanded.getMinY() - interp.getTopPadding(),srcRectExpanded.getWidth() + interp.getRightPadding() + interp.getLeftPadding(),srcRectExpanded.getHeight() + interp.getBottomPadding() + interp.getTopPadding());
    roiTile=roi.intersect(new ROIShape(srcRectExpanded));
    if (!roiBounds.intersects(srcRectExpanded)) {
      roiDisjointTile=true;
    }
 else {
      roiContainsTile=roiTile.contains(srcRectExpanded);
      if (!roiContainsTile) {
        if (!roiTile.intersects(srcRectExpanded)) {
          roiDisjointTile=true;
        }
 else {
          PlanarImage roiIMG=getImage();
          roiIter=RandomIterFactory.create(roiIMG,null,true,true);
        }
      }
    }
  }
  if (roiDisjointTile) {
    double[] bkg=setBackground ? backgroundValues : new double[dest.getNumBands()];
    ImageUtil.fillBackground(dest,destRect,bkg);
    return;
  }
  computeRect(sources[0],d,roiIter,roiContainsTile);
  if (d.isDataCopy()) {
    d.clampDataArrays();
    d.copyDataToRaster();
  }
}
