{
  Utilities.ensureNonNull("dst",dst);
  final GridEnvelope2D destinationRasterDimension=dst.getGridRange2D();
  final ImageLayout imageLayout=new ImageLayout();
  imageLayout.setMinX(destinationRasterDimension.x).setMinY(destinationRasterDimension.y);
  imageLayout.setWidth(destinationRasterDimension.width).setHeight(destinationRasterDimension.height);
  imageLayout.setColorModel(src.getRenderedImage().getColorModel());
  imageLayout.setSampleModel(src.getRenderedImage().getSampleModel());
  if (hints != null && hints.containsKey(JAI.KEY_IMAGE_LAYOUT)) {
    ImageLayout l=(ImageLayout)hints.get(JAI.KEY_IMAGE_LAYOUT);
    if (l.isValid(ImageLayout.TILE_HEIGHT_MASK) && l.isValid(ImageLayout.TILE_WIDTH_MASK)) {
      imageLayout.setTileHeight(Math.min(imageLayout.getHeight(null),l.getTileHeight(null)));
      imageLayout.setTileWidth(Math.min(imageLayout.getWidth(null),l.getTileWidth(null)));
    }
  }
  BorderExtender extender=new BorderExtenderConstant(new double[]{nodata != null ? nodata[0] : 0d});
  ROI property=CoverageUtilities.getROIProperty(src);
  if (property != null) {
    roi=roi != null ? roi.intersect(property) : property;
  }
  return new GridCoverage2DRIA(src,dst,vectorize(src.getRenderedImage()),imageLayout,null,false,extender,Interpolation.getInstance(Interpolation.INTERP_NEAREST),nodata,roi,hints);
}
