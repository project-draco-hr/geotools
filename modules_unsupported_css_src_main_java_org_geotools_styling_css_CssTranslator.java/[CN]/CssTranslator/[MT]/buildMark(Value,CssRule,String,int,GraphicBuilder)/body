{
  MarkBuilder mark=gb.mark();
  mark.name(markName.toExpression());
  Map<String,List<Value>> values=getValuesForIndexedPseudoClass(cssRule,indexedPseudoClass,idx);
  if (values == null || values.isEmpty()) {
    mark.fill().reset();
    mark.stroke().reset();
  }
 else {
    if (values.containsKey("fill") && values.get("fill") != null) {
      FillBuilder fb=mark.fill();
      buildFill(cssRule,fb,values,idx);
    }
 else     if (!values.containsKey("fill")) {
      mark.fill();
    }
    if (values.containsKey("stroke") && values.get("stroke") != null) {
      StrokeBuilder sb=mark.stroke();
      buildStroke(cssRule,sb,values,idx);
    }
 else     if (!values.containsKey("stroke")) {
      mark.stroke();
    }
  }
  Expression size=getMeasureExpression(values,"size",idx,"px");
  if (size != null) {
    gb.size(size);
  }
  Expression rotation=getMeasureExpression(values,"rotation",idx,"deg");
  if (rotation != null) {
    gb.rotation(rotation);
  }
}
