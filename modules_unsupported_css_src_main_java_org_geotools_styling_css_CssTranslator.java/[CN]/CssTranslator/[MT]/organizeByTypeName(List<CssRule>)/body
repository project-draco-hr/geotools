{
  TypeNameExtractor extractor=new TypeNameExtractor();
  for (  CssRule rule : rules) {
    rule.getSelector().accept(extractor);
  }
  Map<String,List<CssRule>> result=new LinkedHashMap<>();
  Set<TypeName> typeNames=extractor.getTypeNames();
  if (typeNames.size() == 1 && typeNames.contains(TypeName.DEFAULT)) {
    result.put(TypeName.DEFAULT.name,rules);
  }
 else {
    typeNames.remove(TypeName.DEFAULT);
  }
  for (  TypeName tn : typeNames) {
    List<CssRule> typeNameRules=new ArrayList<>();
    for (    CssRule rule : rules) {
      Selector combined=Selector.and(tn,rule.getSelector());
      if (combined != Selector.REJECT) {
        typeNameRules.add(new CssRule(combined,rule.getProperties(),rule.getComment()));
      }
    }
    result.put(tn.name,typeNameRules);
  }
  return result;
}
