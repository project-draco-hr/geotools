{
  setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  getContentPane().setLayout(new BorderLayout());
  text=new JTextField(80);
  text.setText("include");
  getContentPane().add(text,BorderLayout.NORTH);
  table=new JTable();
  table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
  table.setModel(new DefaultTableModel(5,5));
  table.setPreferredScrollableViewportSize(new Dimension(500,200));
  JScrollPane scrollPane=new JScrollPane(table);
  getContentPane().add(scrollPane,BorderLayout.CENTER);
  JMenuBar menubar=new JMenuBar();
  setJMenuBar(menubar);
  JMenu fileMenu=new JMenu("File");
  menubar.add(fileMenu);
  featureTypeCBox=new JComboBox<String>();
  menubar.add(featureTypeCBox);
  JMenu dataMenu=new JMenu("Data");
  menubar.add(dataMenu);
  pack();
  fileMenu.add(new SafeAction("Open shapefile..."){
    public void action(    ActionEvent e) throws Throwable {
      connect(new ShapefileDataStoreFactory());
    }
  }
);
  fileMenu.add(new SafeAction("Connect to PostGIS database..."){
    public void action(    ActionEvent e) throws Throwable {
      connect(new PostgisNGDataStoreFactory());
    }
  }
);
  fileMenu.add(new SafeAction("Connect to DataStore..."){
    public void action(    ActionEvent e) throws Throwable {
      connect(null);
    }
  }
);
  fileMenu.addSeparator();
  fileMenu.add(new SafeAction("Exit"){
    public void action(    ActionEvent e) throws Throwable {
      System.exit(0);
    }
  }
);
  dataMenu.add(new SafeAction("Get features"){
    public void action(    ActionEvent e) throws Throwable {
      filterFeatures();
    }
  }
);
  dataMenu.add(new SafeAction("Count"){
    public void action(    ActionEvent e) throws Throwable {
      countFeatures();
    }
  }
);
  dataMenu.add(new SafeAction("Geometry"){
    public void action(    ActionEvent e) throws Throwable {
      queryFeatures();
    }
  }
);
  dataMenu.add(new SafeAction("Center"){
    public void action(    ActionEvent e) throws Throwable {
      centerFeatures();
    }
  }
);
}
