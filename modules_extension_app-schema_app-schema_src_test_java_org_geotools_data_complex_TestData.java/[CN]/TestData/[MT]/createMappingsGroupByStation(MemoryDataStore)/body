{
  Name sourceTypeName=WATERSAMPLE_TYPENAME;
  final FeatureSource<SimpleFeatureType,SimpleFeature> wsSource=simpleStore.getFeatureSource(sourceTypeName);
  FeatureType targetType=createComplexWaterQualityType();
  FeatureTypeFactory tf=new UniqueNameFeatureTypeFactoryImpl();
  AttributeDescriptor targetFeature=tf.createAttributeDescriptor(targetType,targetType.getName(),0,Integer.MAX_VALUE,true,null);
  List mappings=new LinkedList();
  Expression id;
  Expression source;
  String target;
  FilterFactory ff=CommonFactoryFinder.getFilterFactory(null);
  id=ff.property("station_no");
  source=Expression.NIL;
  target="wq_plus";
  NamespaceSupport namespaces=new NamespaceSupport();
  mappings.add(new AttributeMapping(id,source,XPath.steps(targetFeature,target,namespaces)));
  source=ff.property("sitename");
  target="wq_plus/sitename";
  mappings.add(new AttributeMapping(null,source,XPath.steps(targetFeature,target,namespaces)));
  source=ff.property("anzlic_no");
  target="wq_plus/anzlic_no";
  mappings.add(new AttributeMapping(null,source,XPath.steps(targetFeature,target,namespaces)));
  source=ff.property("project_no");
  target="wq_plus/project_no";
  mappings.add(new AttributeMapping(null,source,XPath.steps(targetFeature,target,namespaces)));
  id=ff.property("id[1]");
  source=null;
  target="wq_plus/measurement";
  mappings.add(new AttributeMapping(id,source,XPath.steps(targetFeature,target,namespaces),null,true,null));
  source=ff.property("determinand_description");
  target="wq_plus/measurement/determinand_description";
  mappings.add(new AttributeMapping(null,source,XPath.steps(targetFeature,target,namespaces)));
  source=ff.property("results_value");
  target="wq_plus/measurement/result";
  mappings.add(new AttributeMapping(null,source,XPath.steps(targetFeature,target,namespaces)));
  source=ff.property("location");
  target="wq_plus/location";
  mappings.add(new AttributeMapping(null,source,XPath.steps(targetFeature,target,namespaces)));
  return new FeatureTypeMapping(wsSource,targetFeature,mappings,namespaces);
}
