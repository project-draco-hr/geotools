{
  monitor.writeLock().lock();
  try {
    if (mapListeners == null || mapListeners.isEmpty()) {
      return;
    }
    if (layerListener == null) {
      layerListener=new MapLayerListener(){
        @Override public void layerShown(        MapLayerEvent event){
          Layer layer=(Layer)event.getSource();
          int index=layerList.indexOf(layer);
          fireLayerEvent(layer,index,event);
        }
        @Override public void layerSelected(        MapLayerEvent event){
          Layer layer=(Layer)event.getSource();
          int index=layerList.indexOf(layer);
          fireLayerEvent(layer,index,event);
        }
        @Override public void layerHidden(        MapLayerEvent event){
          Layer layer=(Layer)event.getSource();
          int index=layerList.indexOf(layer);
          fireLayerEvent(layer,index,event);
        }
        @Override public void layerDeselected(        MapLayerEvent event){
          Layer layer=(Layer)event.getSource();
          int index=layerList.indexOf(layer);
          fireLayerEvent(layer,index,event);
        }
        @Override public void layerChanged(        MapLayerEvent event){
          Layer layer=(Layer)event.getSource();
          int index=layerList.indexOf(layer);
          fireLayerEvent(layer,index,event);
        }
        @Override public void layerPreDispose(        MapLayerEvent event){
          Layer layer=(Layer)event.getSource();
          int index=layerList.indexOf(layer);
          fireLayerEvent(layer,index,event);
        }
      }
;
    }
    if (listen) {
      for (      Layer layer : layerList) {
        layer.addMapLayerListener(layerListener);
      }
    }
 else {
      for (      Layer layer : layerList) {
        layer.removeMapLayerListener(layerListener);
      }
    }
  }
  finally {
    monitor.writeLock().unlock();
  }
}
