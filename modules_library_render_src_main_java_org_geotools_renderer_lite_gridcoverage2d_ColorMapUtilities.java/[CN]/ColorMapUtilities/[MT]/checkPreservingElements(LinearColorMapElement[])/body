{
  if (preservingElements != null) {
    double outval=Double.NaN;
    Color color=null;
    for (int i=0; i < preservingElements.length; i++) {
      if (!(preservingElements[i] instanceof ConstantColorMapElement))       throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$1,preservingElements));
      final ConstantColorMapElement nc=(ConstantColorMapElement)preservingElements[i];
      if (nc.getColors().length != 1)       throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$1,nc.getColors()));
      if (i == 0) {
        outval=nc.getOutputMaximum();
        color=nc.getColors()[0];
      }
 else {
        if (compare(outval,nc.getOutputMaximum()) != 0)         throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$1,nc.getColors()));
        if (!color.equals(nc.getColors()[0]))         throw new IllegalArgumentException(Errors.format(ErrorKeys.ILLEGAL_ARGUMENT_$1,nc.getColors()));
      }
    }
  }
  return preservingElements;
}
