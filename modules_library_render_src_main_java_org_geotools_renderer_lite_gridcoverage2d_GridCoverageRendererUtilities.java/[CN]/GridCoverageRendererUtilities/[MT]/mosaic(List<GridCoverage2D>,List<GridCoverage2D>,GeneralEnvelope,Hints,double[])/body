{
  Comparator<GridCoverage2D> c=new Comparator<GridCoverage2D>(){
    @Override public int compare(    GridCoverage2D o1,    GridCoverage2D o2){
      double minx1=o1.getEnvelope().getMinimum(0);
      double minx2=o2.getEnvelope().getMinimum(0);
      if (minx1 == minx2) {
        double maxy1=o1.getEnvelope().getMaximum(1);
        double maxy2=o2.getEnvelope().getMaximum(1);
        return compareDoubles(maxy1,maxy2);
      }
 else {
        return compareDoubles(minx1,minx2);
      }
    }
    private int compareDoubles(    double maxy1,    double maxy2){
      if (maxy1 == maxy2) {
        return 0;
      }
 else {
        return (int)Math.signum(maxy1 - maxy2);
      }
    }
  }
;
  Collections.sort(coverages,c);
  Collections.sort(alphas,c);
  try {
    ReferencedEnvelope targetEnvelope=ReferencedEnvelope.reference(renderingEnvelope);
    ReferencedEnvelope coveragesEnvelope=null;
    for (    GridCoverage2D coverage : coverages) {
      ReferencedEnvelope re=ReferencedEnvelope.reference(coverage.getEnvelope2D());
      if (coveragesEnvelope == null) {
        coveragesEnvelope=re;
      }
 else {
        coveragesEnvelope.expandToInclude(re);
      }
    }
    targetEnvelope=new ReferencedEnvelope(targetEnvelope.intersection(coveragesEnvelope),renderingEnvelope.getCoordinateReferenceSystem());
    if (targetEnvelope.isEmpty() || targetEnvelope.isNull()) {
      return null;
    }
    MathTransform2D mt=coverages.get(0).getGridGeometry().getCRSToGrid2D();
    Rectangle rasterSpaceEnvelope;
    rasterSpaceEnvelope=CRS.transform(mt,targetEnvelope).toRectangle2D().getBounds();
    GridEnvelope2D gridRange=new GridEnvelope2D(rasterSpaceEnvelope);
    GridGeometry2D gridGeometry=new GridGeometry2D(gridRange,targetEnvelope);
    final ParameterValueGroup param=processor.getOperation("Mosaic").getParameters().clone();
    param.parameter("sources").setValue(coverages);
    param.parameter("geometry").setValue(gridGeometry);
    if (background != null) {
      param.parameter(Mosaic.OUTNODATA_NAME).setValue(background);
    }
    if (!alphas.isEmpty()) {
      param.parameter(Mosaic.ALPHA_NAME).setValue(alphas);
    }
    return (GridCoverage2D)((Mosaic)processor.getOperation("Mosaic")).doOperation(param,hints);
  }
 catch (  Exception e) {
    throw new RuntimeException("Failed to mosaic the input coverages",e);
  }
}
