{
  final Category[] categories=new Category[]{new Category("No data",null,0),new Category("Land",null,7),new Category("Clouds",null,3),new Category("Temperature",null,10,100),new Category("Foo",null,100,120)};
  CategoryList list;
  boolean searchNearest=false;
  do {
    list=new CategoryList(categories,null,searchNearest);
    assertTrue("containsAll",list.containsAll(Arrays.asList(categories)));
    final Range range=list.getRange();
    assertEquals("min",0,((Number)range.getMinValue()).doubleValue(),0);
    assertEquals("max",120,((Number)range.getMaxValue()).doubleValue(),0);
    assertTrue("min included",range.isMinIncluded() == true);
    assertTrue("max included",range.isMaxIncluded() == false);
    assertSame("0",list.getCategory(0),categories[0]);
    assertSame("7",list.getCategory(7),categories[1]);
    assertSame("3",list.getCategory(3),categories[2]);
    assertSame(" 10",list.getCategory(10),categories[3]);
    assertSame(" 50",list.getCategory(50),categories[3]);
    assertSame("100",list.getCategory(100),categories[4]);
    assertSame("110",list.getCategory(110),categories[4]);
    if (searchNearest) {
      assertSame("-1",list.getCategory(-1),categories[0]);
      assertSame("2",list.getCategory(2),categories[2]);
      assertSame("4",list.getCategory(4),categories[2]);
      assertSame("9",list.getCategory(9),categories[3]);
      assertSame("120",list.getCategory(120),categories[4]);
      assertSame("200",list.getCategory(200),categories[4]);
    }
 else {
      assertNull("-1",list.getCategory(-1));
      assertNull("2",list.getCategory(2));
      assertNull("4",list.getCategory(4));
      assertNull("9",list.getCategory(9));
      assertNull("120",list.getCategory(120));
      assertNull("200",list.getCategory(200));
    }
  }
 while ((searchNearest=!searchNearest) == true);
}
