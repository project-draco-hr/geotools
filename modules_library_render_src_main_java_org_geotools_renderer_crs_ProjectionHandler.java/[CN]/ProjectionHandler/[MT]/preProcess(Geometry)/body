{
  if (validAreaBounds == null)   return geometry;
  CoordinateReferenceSystem geometryCRS=CRS.getHorizontalCRS(sourceCRS);
  if (geometryCRS == null || CRS.findMathTransform(geometryCRS,renderingEnvelope.getCoordinateReferenceSystem()).isIdentity()) {
    return geometry;
  }
  Geometry mask;
  ReferencedEnvelope ge=new ReferencedEnvelope(geometry.getEnvelopeInternal(),geometryCRS);
  ReferencedEnvelope geWGS84=ge.transform(WGS84,true);
  if (geWGS84.getWidth() < EPS || geWGS84.getHeight() < EPS) {
    geWGS84.expandBy(EPS);
  }
  if (validArea == null) {
    if (validAreaBounds.contains((Envelope)geWGS84)) {
      return geometry;
    }
    ReferencedEnvelope envIntWgs84=new ReferencedEnvelope(validAreaBounds.intersection(geWGS84),WGS84);
    if (envIntWgs84.isEmpty()) {
      return null;
    }
    ReferencedEnvelope envInt=envIntWgs84.transform(geometryCRS,true);
    mask=JTS.toGeometry((Envelope)envInt);
  }
 else {
    if (validaAreaTester.contains(JTS.toGeometry(geWGS84))) {
      return geometry;
    }
    ReferencedEnvelope envIntWgs84=new ReferencedEnvelope(validAreaBounds.intersection(geWGS84),WGS84);
    if (envIntWgs84.isEmpty()) {
      return null;
    }
    Polygon polyIntWgs84=JTS.toGeometry(envIntWgs84);
    Geometry maskWgs84=intersect(validArea,polyIntWgs84,geometryCRS);
    if (maskWgs84 == null || maskWgs84.isEmpty()) {
      return null;
    }
    mask=JTS.transform(maskWgs84,CRS.findMathTransform(WGS84,geometryCRS));
  }
  return intersect(geometry,mask,geometryCRS);
}
