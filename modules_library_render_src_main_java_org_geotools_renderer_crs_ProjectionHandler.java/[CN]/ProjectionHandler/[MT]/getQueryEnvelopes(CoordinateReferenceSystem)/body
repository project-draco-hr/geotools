{
  ReferencedEnvelope re=renderingEnvelope.transform(WGS84,true,10);
  if (re.getMinX() >= -180.0 && re.getMaxX() <= 180)   return Collections.singletonList(renderingEnvelope.transform(queryCRS,true,10));
  List<ReferencedEnvelope> envelopes=new ArrayList<ReferencedEnvelope>();
  envelopes.add(re);
  if (re.getMinX() < -180) {
    envelopes.add(new ReferencedEnvelope(re.getMinX() + 360,180,re.getMinY(),re.getMaxY(),re.getCoordinateReferenceSystem()));
  }
  if (re.getMaxX() > 180) {
    envelopes.add(new ReferencedEnvelope(-180,re.getMaxX() - 360,re.getMinY(),re.getMaxY(),re.getCoordinateReferenceSystem()));
  }
  boolean merged=true;
  while (merged && envelopes.size() > 1) {
    merged=false;
    for (int i=0; i < envelopes.size() - 1; i++) {
      ReferencedEnvelope curr=envelopes.get(i);
      for (int j=i + 1; j < envelopes.size(); ) {
        ReferencedEnvelope next=envelopes.get(j);
        if (curr.intersects((Envelope)next)) {
          curr.expandToInclude(next);
          envelopes.remove(j);
          merged=true;
        }
 else {
          j++;
        }
      }
    }
  }
  for (int i=0; i < envelopes.size(); i++) {
    envelopes.set(i,envelopes.get(i).transform(queryCRS,true,10));
  }
  return envelopes;
}
