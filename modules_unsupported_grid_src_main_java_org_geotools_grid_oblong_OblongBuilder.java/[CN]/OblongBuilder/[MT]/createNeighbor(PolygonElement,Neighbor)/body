{
  if (el == null || neighbor == null) {
    throw new IllegalArgumentException("el and neighbour position must both be non-null");
  }
  if (!(el instanceof Oblong)) {
    throw new IllegalArgumentException("el must be an instance of Oblong");
  }
  Oblong oblong=(Oblong)el;
  ReferencedEnvelope bounds=oblong.getBounds();
  double dx, dy;
switch (neighbor) {
case LEFT:
    dx=-bounds.getWidth();
  dy=0.0;
break;
case LOWER:
dx=0.0;
dy=-bounds.getHeight();
break;
case LOWER_LEFT:
dx=-bounds.getWidth();
dy=-bounds.getHeight();
break;
case LOWER_RIGHT:
dx=bounds.getWidth();
dy=-bounds.getHeight();
break;
case RIGHT:
dx=bounds.getWidth();
dy=0.0;
break;
case UPPER:
dx=0.0;
dy=bounds.getHeight();
break;
case UPPER_LEFT:
dx=-bounds.getWidth();
dy=bounds.getHeight();
break;
case UPPER_RIGHT:
dx=bounds.getWidth();
dy=bounds.getHeight();
break;
default :
throw new IllegalArgumentException("Unrecognized value for neighbor");
}
return Oblongs.create(bounds.getMinX() + dx,bounds.getMinY() + dy,bounds.getWidth(),bounds.getHeight(),bounds.getCoordinateReferenceSystem());
}
