{
  Literal value=null;
  String name=null;
  Condition eCondition=null;
  Expression left=filter.getExpression1();
  Expression right=filter.getExpression2();
  if (left instanceof Function || right instanceof Function) {
    throw new IllegalArgumentException("Functions are not supported");
  }
  if (left instanceof PropertyName && right instanceof PropertyName) {
    throw new IllegalArgumentException("Implicit inner joint predicates not supported");
  }
  if (left instanceof PropertyName) {
    name=((PropertyName)left).getPropertyName();
  }
 else   if (left instanceof PropertyExistsFunction) {
    name=((PropertyExistsFunction)left).getParameters().get(0).toString();
  }
 else   if (left instanceof Literal) {
    value=(Literal)left;
  }
 else {
    throw new IllegalArgumentException("Left argument must be a Literal");
  }
  if (right instanceof PropertyName) {
    name=((PropertyName)right).getPropertyName();
  }
 else   if (right instanceof PropertyExistsFunction) {
    name=((PropertyExistsFunction)right).getParameters().get(0).toString();
  }
 else   if (right instanceof Literal) {
    value=(Literal)right;
  }
 else {
    throw new IllegalArgumentException("Right argument must be a Literal");
  }
  EAttribute eAttribute=eFeatureInfo.eGetAttribute(name);
  if (eAttribute == null) {
    throw new IllegalArgumentException("EAttribute " + name + " not found");
  }
  String comparator=(String)extraData;
  try {
    if (PropertyIsEqualTo.NAME.equals(comparator)) {
      eCondition=new EAttributeValueIsEqual(eAttribute,value);
    }
 else     if (PropertyIsLessThan.NAME.equals(comparator)) {
      eCondition=new EAttributeValueIsEqual(eAttribute,value);
    }
 else     if (PropertyIsLessThanOrEqualTo.NAME.equals(comparator)) {
      eCondition=new EAttributeValueIsEqual(eAttribute,value);
    }
 else     if (PropertyIsGreaterThan.NAME.equals(comparator)) {
      eCondition=new EAttributeValueIsEqual(eAttribute,value);
    }
 else     if (PropertyIsGreaterThanOrEqualTo.NAME.equals(comparator)) {
      eCondition=new EAttributeValueIsEqual(eAttribute,value);
    }
 else     if (PropertyIsNotEqualTo.NAME.equals(comparator)) {
      eCondition=new EAttributeValueIsEqual(eAttribute,value);
    }
 else {
      throw new IllegalArgumentException("Comparator " + comparator + " not supported");
    }
  }
 catch (  EFeatureEncoderException e) {
    String msg="Failed to create " + "EObjectCondition (" + comparator + ")";
    LOGGER.warning(msg);
    throw new IllegalArgumentException(msg,e);
  }
  eConditionStack.push(eCondition);
  return eCondition;
}
