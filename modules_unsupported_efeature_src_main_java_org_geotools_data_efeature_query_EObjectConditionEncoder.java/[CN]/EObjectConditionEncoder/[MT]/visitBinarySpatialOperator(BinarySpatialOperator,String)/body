{
  if (filter == null) {
    throw new NullPointerException("Filter to be encoded cannot be null");
  }
  Literal geometry;
  PropertyName property;
  boolean swapped=false;
  BinaryComparisonOperator op=(BinaryComparisonOperator)filter;
  if (op.getExpression1() instanceof PropertyName && op.getExpression2() instanceof Literal) {
    property=(PropertyName)op.getExpression1();
    geometry=(Literal)op.getExpression2();
    swapped=true;
  }
 else   if (op.getExpression2() instanceof PropertyName && op.getExpression1() instanceof Literal) {
    property=(PropertyName)op.getExpression2();
    geometry=(Literal)op.getExpression1();
  }
 else {
    throw new IllegalArgumentException("Can only encode spatial filters that do " + "compare a property name and a geometry");
  }
  EAttribute eAttribute=eFeatureInfo.eGetAttribute(property.getPropertyName());
  AttributeDescriptor descriptor=(AttributeDescriptor)property.evaluate(featureType);
  if (descriptor instanceof GeometryDescriptor) {
    return visitBinarySpatialOperator(filter,name,eAttribute,(GeometryDescriptor)descriptor,geometry,swapped);
  }
 else   if (descriptor == null) {
    throw new IllegalArgumentException("Attribute '" + property.getPropertyName() + "' not found in '"+ featureType.getTypeName()+ "'");
  }
 else {
    throw new IllegalArgumentException("Attribute '" + property.getPropertyName() + "' is not a geometry in "+ featureType.getTypeName()+ "'");
  }
}
