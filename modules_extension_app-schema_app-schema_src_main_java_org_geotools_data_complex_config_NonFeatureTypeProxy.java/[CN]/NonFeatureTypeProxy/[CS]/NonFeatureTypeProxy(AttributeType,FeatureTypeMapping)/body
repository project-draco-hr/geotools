{
  super(type.getName(),null);
  subject=type;
  AttributeDescriptor originalTarget=mapping.getTargetFeature();
  int maxOccurs=originalTarget.getMaxOccurs();
  int minOccurs=originalTarget.getMinOccurs();
  boolean nillable=originalTarget.isNillable();
  Object defaultValue=originalTarget.getDefaultValue();
  Name name=originalTarget.getName();
  ComplexFeatureTypeFactoryImpl typeFactory=new ComplexFeatureTypeFactoryImpl();
  AttributeDescriptor descriptor=typeFactory.createAttributeDescriptor(this,name,minOccurs,maxOccurs,nillable,defaultValue);
  descriptor.getUserData().putAll(originalTarget.getUserData());
  mapping.setTargetFeature(descriptor);
  descriptors=new ArrayList<PropertyDescriptor>(){
{
      add(ComplexFeatureConstants.FEATURE_CHAINING_LINK);
    }
  }
;
  if (subject instanceof ComplexType) {
    descriptors.addAll(((ComplexType)subject).getDescriptors());
  }
}
