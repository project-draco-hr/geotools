{
  try {
    @SuppressWarnings("unused") Class<?> cl=Class.forName(KAKADU_SPI);
    Class<?> utilityClass=Class.forName("it.geosolutions.util.KakaduUtilities");
    final Method method=utilityClass.getDeclaredMethod("isKakaduAvailable",(Class[])null);
    if (method != null) {
      Boolean isAvailable=(Boolean)method.invoke(null,null);
      return isAvailable.booleanValue();
    }
  }
 catch (  ClassNotFoundException e) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,"Unable to load kakadu JPEG2000 reader spi",e);
  }
catch (  SecurityException e) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,"Unable to load kakadu JPEG2000 reader spi",e);
  }
catch (  NoSuchMethodException e) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,"Unable to load kakadu JPEG2000 reader spi",e);
  }
catch (  IllegalArgumentException e) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,"Unable to load kakadu JPEG2000 reader spi",e);
  }
catch (  IllegalAccessException e) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,"Unable to load kakadu JPEG2000 reader spi",e);
  }
catch (  InvocationTargetException e) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,"Unable to load kakadu JPEG2000 reader spi",e);
  }
  return false;
}
