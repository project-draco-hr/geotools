{
  StringBuffer sb=new StringBuffer(Classes.getShortClassName(this));
  sb.append(" ");
  sb.append(getName());
  if (isAbstract()) {
    sb.append(" abstract");
  }
  if (isIdentified()) {
    sb.append(" identified");
  }
  if (superType != null) {
    sb.append(" extends ");
    sb.append(superType.getName().getLocalPart());
  }
  if (List.class.isAssignableFrom(binding)) {
    sb.append("[");
  }
 else {
    sb.append("(");
  }
  boolean first=true;
  for (  PropertyDescriptor property : getDescriptors()) {
    if (first) {
      first=false;
    }
 else {
      sb.append(",");
    }
    sb.append(property.getName().getLocalPart());
    sb.append(":");
    sb.append(property.getType().getName().getLocalPart());
  }
  if (List.class.isAssignableFrom(binding)) {
    sb.append("]");
  }
 else {
    sb.append(")");
  }
  if (description != null) {
    sb.append("\n\tdescription=");
    sb.append(description);
  }
  if (restrictions != null && !restrictions.isEmpty()) {
    sb.append("\nrestrictions=");
    first=true;
    for (    Filter filter : restrictions) {
      if (first) {
        first=false;
      }
 else {
        sb.append(" AND ");
      }
      sb.append(filter);
    }
  }
  return sb.toString();
}
