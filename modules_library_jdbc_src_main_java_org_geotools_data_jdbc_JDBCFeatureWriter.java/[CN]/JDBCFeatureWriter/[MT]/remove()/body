{
  if (closed) {
    throw new IOException("FeatureWriter has been closed");
  }
  if (current == null) {
    throw new IOException("No feature available to remove");
  }
  if (live != null) {
    LOGGER.fine("Removing " + live);
    ReferencedEnvelope bounds=ReferencedEnvelope.reference(live.getBounds());
    live=null;
    current=null;
    Transaction transaction=queryData.getTransaction();
    try {
      queryData.deleteCurrentRow();
      queryData.fireChangeRemoved(bounds,false);
    }
 catch (    SQLException sqle) {
      String message="problem deleting row";
      if (transaction != Transaction.AUTO_COMMIT) {
        transaction.rollback();
        message+="(transaction canceled)";
      }
      throw new DataSourceException(message,sqle);
    }
  }
 else {
    current=null;
  }
}
