{
  FileInputStream is=new FileInputStream(indexFile);
  ObjectInputStream ois=new ObjectInputStream(is);
  try {
    this.page_size=ois.readInt();
    this.nextPage=ois.readInt();
    this.emptyPages=(TreeSet<Integer>)ois.readObject();
    this.pageIndex=(HashMap<NodeIdentifier,Entry>)ois.readObject();
    this.bounds=(ReferencedEnvelope)ois.readObject();
    int featuretypesize=ois.readInt();
    this.featureTypes=new HashSet<FeatureType>();
    for (int i=0; i < featuretypesize; i++) {
      String name=(String)ois.readObject();
      String rep=(String)ois.readObject();
      try {
        FeatureType ft=DataUtilities.createType(name,rep);
        featureTypes.add(ft);
      }
 catch (      SchemaException e) {
        logger.log(Level.WARNING,"Error initializing feature types from store.",e);
      }
    }
  }
 catch (  ClassNotFoundException e) {
    throw (IOException)new IOException().initCause(e);
  }
 finally {
    ois.close();
    is.close();
  }
}
