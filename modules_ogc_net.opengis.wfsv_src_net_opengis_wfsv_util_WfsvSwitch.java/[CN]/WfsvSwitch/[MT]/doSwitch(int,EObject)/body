{
switch (classifierID) {
case WfsvPackage.ABSTRACT_VERSIONED_FEATURE_TYPE:
{
      AbstractVersionedFeatureType abstractVersionedFeatureType=(AbstractVersionedFeatureType)theEObject;
      Object result=caseAbstractVersionedFeatureType(abstractVersionedFeatureType);
      if (result == null)       result=defaultCase(theEObject);
      return result;
    }
case WfsvPackage.DESCRIBE_VERSIONED_FEATURE_TYPE_TYPE:
{
    DescribeVersionedFeatureTypeType describeVersionedFeatureTypeType=(DescribeVersionedFeatureTypeType)theEObject;
    Object result=caseDescribeVersionedFeatureTypeType(describeVersionedFeatureTypeType);
    if (result == null)     result=caseDescribeFeatureTypeType(describeVersionedFeatureTypeType);
    if (result == null)     result=caseBaseRequestType(describeVersionedFeatureTypeType);
    if (result == null)     result=defaultCase(theEObject);
    return result;
  }
case WfsvPackage.DIFFERENCE_QUERY_TYPE:
{
  DifferenceQueryType differenceQueryType=(DifferenceQueryType)theEObject;
  Object result=caseDifferenceQueryType(differenceQueryType);
  if (result == null)   result=defaultCase(theEObject);
  return result;
}
case WfsvPackage.DOCUMENT_ROOT:
{
DocumentRoot documentRoot=(DocumentRoot)theEObject;
Object result=caseDocumentRoot(documentRoot);
if (result == null) result=defaultCase(theEObject);
return result;
}
case WfsvPackage.GET_DIFF_TYPE:
{
GetDiffType getDiffType=(GetDiffType)theEObject;
Object result=caseGetDiffType(getDiffType);
if (result == null) result=caseBaseRequestType(getDiffType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case WfsvPackage.GET_LOG_TYPE:
{
GetLogType getLogType=(GetLogType)theEObject;
Object result=caseGetLogType(getLogType);
if (result == null) result=caseBaseRequestType(getLogType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case WfsvPackage.GET_VERSIONED_FEATURE_TYPE:
{
GetVersionedFeatureType getVersionedFeatureType=(GetVersionedFeatureType)theEObject;
Object result=caseGetVersionedFeatureType(getVersionedFeatureType);
if (result == null) result=caseGetFeatureType(getVersionedFeatureType);
if (result == null) result=caseBaseRequestType(getVersionedFeatureType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case WfsvPackage.ROLLBACK_TYPE:
{
RollbackType rollbackType=(RollbackType)theEObject;
Object result=caseRollbackType(rollbackType);
if (result == null) result=caseNativeType(rollbackType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case WfsvPackage.VERSIONED_DELETE_ELEMENT_TYPE:
{
VersionedDeleteElementType versionedDeleteElementType=(VersionedDeleteElementType)theEObject;
Object result=caseVersionedDeleteElementType(versionedDeleteElementType);
if (result == null) result=caseDeleteElementType(versionedDeleteElementType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case WfsvPackage.VERSIONED_FEATURE_COLLECTION_TYPE:
{
VersionedFeatureCollectionType versionedFeatureCollectionType=(VersionedFeatureCollectionType)theEObject;
Object result=caseVersionedFeatureCollectionType(versionedFeatureCollectionType);
if (result == null) result=caseFeatureCollectionType(versionedFeatureCollectionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case WfsvPackage.VERSIONED_UPDATE_ELEMENT_TYPE:
{
VersionedUpdateElementType versionedUpdateElementType=(VersionedUpdateElementType)theEObject;
Object result=caseVersionedUpdateElementType(versionedUpdateElementType);
if (result == null) result=caseUpdateElementType(versionedUpdateElementType);
if (result == null) result=defaultCase(theEObject);
return result;
}
default :
return defaultCase(theEObject);
}
}
