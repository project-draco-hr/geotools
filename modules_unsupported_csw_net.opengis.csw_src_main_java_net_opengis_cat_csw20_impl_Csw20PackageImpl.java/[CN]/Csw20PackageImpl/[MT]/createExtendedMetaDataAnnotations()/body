{
  String source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData";
  addAnnotation(abstractQueryTypeEClass,source,new String[]{"name","AbstractQueryType","kind","empty"});
  addAnnotation(abstractRecordTypeEClass,source,new String[]{"name","AbstractRecordType","kind","empty"});
  addAnnotation(acknowledgementTypeEClass,source,new String[]{"name","AcknowledgementType","kind","elementOnly"});
  addAnnotation(getAcknowledgementType_EchoedRequest(),source,new String[]{"kind","element","name","EchoedRequest","namespace","##targetNamespace"});
  addAnnotation(getAcknowledgementType_RequestId(),source,new String[]{"kind","element","name","RequestId","namespace","##targetNamespace"});
  addAnnotation(briefRecordTypeEClass,source,new String[]{"name","BriefRecordType","kind","elementOnly"});
  addAnnotation(getBriefRecordType_BoundingBox(),source,new String[]{"kind","element","name","BoundingBox","namespace","http://www.opengis.net/ows","group","http://www.opengis.net/ows#BoundingBox:group"});
  addAnnotation(capabilitiesTypeEClass,source,new String[]{"name","CapabilitiesType","kind","elementOnly"});
  addAnnotation(getCapabilitiesType_FilterCapabilities(),source,new String[]{"kind","element","name","Filter_Capabilities","namespace","http://www.opengis.net/ogc"});
  addAnnotation(conceptualSchemeTypeEClass,source,new String[]{"name","ConceptualSchemeType","kind","elementOnly"});
  addAnnotation(getConceptualSchemeType_Name(),source,new String[]{"kind","element","name","Name","namespace","##targetNamespace"});
  addAnnotation(getConceptualSchemeType_Document(),source,new String[]{"kind","element","name","Document","namespace","##targetNamespace"});
  addAnnotation(getConceptualSchemeType_Authority(),source,new String[]{"kind","element","name","Authority","namespace","##targetNamespace"});
  addAnnotation(deleteTypeEClass,source,new String[]{"name","DeleteType","kind","elementOnly"});
  addAnnotation(getDeleteType_Constraint(),source,new String[]{"kind","element","name","Constraint","namespace","##targetNamespace"});
  addAnnotation(getDeleteType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(getDeleteType_TypeName(),source,new String[]{"kind","attribute","name","typeName"});
  addAnnotation(describeRecordResponseTypeEClass,source,new String[]{"name","DescribeRecordResponseType","kind","elementOnly"});
  addAnnotation(getDescribeRecordResponseType_SchemaComponent(),source,new String[]{"kind","element","name","SchemaComponent","namespace","##targetNamespace"});
  addAnnotation(describeRecordTypeEClass,source,new String[]{"name","DescribeRecordType","kind","elementOnly"});
  addAnnotation(getDescribeRecordType_TypeName(),source,new String[]{"kind","element","name","TypeName","namespace","##targetNamespace"});
  addAnnotation(getDescribeRecordType_OutputFormat(),source,new String[]{"kind","attribute","name","outputFormat"});
  addAnnotation(getDescribeRecordType_SchemaLanguage(),source,new String[]{"kind","attribute","name","schemaLanguage"});
  addAnnotation(distributedSearchTypeEClass,source,new String[]{"name","DistributedSearchType","kind","empty"});
  addAnnotation(getDistributedSearchType_HopCount(),source,new String[]{"kind","attribute","name","hopCount"});
  addAnnotation(domainValuesTypeEClass,source,new String[]{"name","DomainValuesType","kind","elementOnly"});
  addAnnotation(getDomainValuesType_PropertyName(),source,new String[]{"kind","element","name","PropertyName","namespace","##targetNamespace"});
  addAnnotation(getDomainValuesType_ParameterName(),source,new String[]{"kind","element","name","ParameterName","namespace","##targetNamespace"});
  addAnnotation(getDomainValuesType_ListOfValues(),source,new String[]{"kind","element","name","ListOfValues","namespace","##targetNamespace"});
  addAnnotation(getDomainValuesType_ConceptualScheme(),source,new String[]{"kind","element","name","ConceptualScheme","namespace","##targetNamespace"});
  addAnnotation(getDomainValuesType_RangeOfValues(),source,new String[]{"kind","element","name","RangeOfValues","namespace","##targetNamespace"});
  addAnnotation(getDomainValuesType_Type(),source,new String[]{"kind","attribute","name","type"});
  addAnnotation(getDomainValuesType_Uom(),source,new String[]{"kind","attribute","name","uom"});
  addAnnotation(echoedRequestTypeEClass,source,new String[]{"name","EchoedRequestType","kind","elementOnly"});
  addAnnotation(getEchoedRequestType_Any(),source,new String[]{"kind","elementWildcard","wildcards","##any","name",":0","processing","lax"});
  addAnnotation(elementSetNameTypeEClass,source,new String[]{"name","ElementSetNameType","kind","simple"});
  addAnnotation(getElementSetNameType_Value(),source,new String[]{"name",":0","kind","simple"});
  addAnnotation(getElementSetNameType_TypeNames(),source,new String[]{"kind","attribute","name","typeNames"});
  addAnnotation(emptyTypeEClass,source,new String[]{"name","EmptyType","kind","empty"});
  addAnnotation(getCapabilitiesTypeEClass,source,new String[]{"name","GetCapabilitiesType","kind","elementOnly"});
  addAnnotation(getGetCapabilitiesType_Service(),source,new String[]{"kind","attribute","name","service"});
  addAnnotation(getDomainResponseTypeEClass,source,new String[]{"name","GetDomainResponseType","kind","elementOnly"});
  addAnnotation(getGetDomainResponseType_DomainValues(),source,new String[]{"kind","element","name","DomainValues","namespace","##targetNamespace"});
  addAnnotation(getDomainTypeEClass,source,new String[]{"name","GetDomainType","kind","elementOnly"});
  addAnnotation(getGetDomainType_PropertyName(),source,new String[]{"kind","element","name","PropertyName","namespace","##targetNamespace"});
  addAnnotation(getGetDomainType_ParameterName(),source,new String[]{"kind","element","name","ParameterName","namespace","##targetNamespace"});
  addAnnotation(getRecordByIdTypeEClass,source,new String[]{"name","GetRecordByIdType","kind","elementOnly"});
  addAnnotation(getGetRecordByIdType_ElementSetName(),source,new String[]{"kind","element","name","ElementSetName","namespace","##targetNamespace"});
  addAnnotation(getGetRecordByIdType_OutputFormat(),source,new String[]{"kind","attribute","name","outputFormat"});
  addAnnotation(getGetRecordByIdType_OutputSchema(),source,new String[]{"kind","attribute","name","outputSchema"});
  addAnnotation(getRecordsResponseTypeEClass,source,new String[]{"name","GetRecordsResponseType","kind","elementOnly"});
  addAnnotation(getGetRecordsResponseType_RequestId(),source,new String[]{"kind","element","name","RequestId","namespace","##targetNamespace"});
  addAnnotation(getGetRecordsResponseType_SearchStatus(),source,new String[]{"kind","element","name","SearchStatus","namespace","##targetNamespace"});
  addAnnotation(getGetRecordsResponseType_SearchResults(),source,new String[]{"kind","element","name","SearchResults","namespace","##targetNamespace"});
  addAnnotation(getGetRecordsResponseType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(getRecordsTypeEClass,source,new String[]{"name","GetRecordsType","kind","elementOnly"});
  addAnnotation(getGetRecordsType_DistributedSearch(),source,new String[]{"kind","element","name","DistributedSearch","namespace","##targetNamespace"});
  addAnnotation(getGetRecordsType_ResponseHandler(),source,new String[]{"kind","element","name","ResponseHandler","namespace","##targetNamespace"});
  addAnnotation(getGetRecordsType_Any(),source,new String[]{"kind","elementWildcard","wildcards","##other","name",":6","processing","strict"});
  addAnnotation(getGetRecordsType_MaxRecords(),source,new String[]{"kind","attribute","name","maxRecords"});
  addAnnotation(getGetRecordsType_OutputFormat(),source,new String[]{"kind","attribute","name","outputFormat"});
  addAnnotation(getGetRecordsType_OutputSchema(),source,new String[]{"kind","attribute","name","outputSchema"});
  addAnnotation(getGetRecordsType_RequestId(),source,new String[]{"kind","attribute","name","requestId"});
  addAnnotation(getGetRecordsType_ResultType(),source,new String[]{"kind","attribute","name","resultType"});
  addAnnotation(getGetRecordsType_StartPosition(),source,new String[]{"kind","attribute","name","startPosition"});
  addAnnotation(harvestResponseTypeEClass,source,new String[]{"name","HarvestResponseType","kind","elementOnly"});
  addAnnotation(getHarvestResponseType_Acknowledgement(),source,new String[]{"kind","element","name","Acknowledgement","namespace","##targetNamespace"});
  addAnnotation(getHarvestResponseType_TransactionResponse(),source,new String[]{"kind","element","name","TransactionResponse","namespace","##targetNamespace"});
  addAnnotation(harvestTypeEClass,source,new String[]{"name","HarvestType","kind","elementOnly"});
  addAnnotation(getHarvestType_Source(),source,new String[]{"kind","element","name","Source","namespace","##targetNamespace"});
  addAnnotation(getHarvestType_ResourceType(),source,new String[]{"kind","element","name","ResourceType","namespace","##targetNamespace"});
  addAnnotation(getHarvestType_ResourceFormat(),source,new String[]{"kind","element","name","ResourceFormat","namespace","##targetNamespace"});
  addAnnotation(getHarvestType_HarvestInterval(),source,new String[]{"kind","element","name","HarvestInterval","namespace","##targetNamespace"});
  addAnnotation(getHarvestType_ResponseHandler(),source,new String[]{"kind","element","name","ResponseHandler","namespace","##targetNamespace"});
  addAnnotation(insertResultTypeEClass,source,new String[]{"name","InsertResultType","kind","elementOnly"});
  addAnnotation(getInsertResultType_BriefRecord(),source,new String[]{"kind","element","name","BriefRecord","namespace","##targetNamespace"});
  addAnnotation(getInsertResultType_HandleRef(),source,new String[]{"kind","attribute","name","handleRef"});
  addAnnotation(insertTypeEClass,source,new String[]{"name","InsertType","kind","elementOnly"});
  addAnnotation(getInsertType_Any(),source,new String[]{"kind","elementWildcard","wildcards","##other","name",":0","processing","strict"});
  addAnnotation(getInsertType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(getInsertType_TypeName(),source,new String[]{"kind","attribute","name","typeName"});
  addAnnotation(listOfValuesTypeEClass,source,new String[]{"name","ListOfValuesType","kind","elementOnly"});
  addAnnotation(getListOfValuesType_Value(),source,new String[]{"kind","element","name","Value","namespace","##targetNamespace"});
  addAnnotation(queryConstraintTypeEClass,source,new String[]{"name","QueryConstraintType","kind","elementOnly"});
  addAnnotation(getQueryConstraintType_Filter(),source,new String[]{"kind","element","name","Filter","namespace","http://www.opengis.net/ogc"});
  addAnnotation(getQueryConstraintType_CqlText(),source,new String[]{"kind","element","name","CqlText","namespace","##targetNamespace"});
  addAnnotation(getQueryConstraintType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(queryTypeEClass,source,new String[]{"name","QueryType","kind","elementOnly"});
  addAnnotation(getQueryType_ElementSetName(),source,new String[]{"kind","element","name","ElementSetName","namespace","##targetNamespace"});
  addAnnotation(getQueryType_ElementName(),source,new String[]{"kind","element","name","ElementName","namespace","##targetNamespace"});
  addAnnotation(getQueryType_Constraint(),source,new String[]{"kind","element","name","Constraint","namespace","##targetNamespace"});
  addAnnotation(getQueryType_SortBy(),source,new String[]{"kind","element","name","SortBy","namespace","http://www.opengis.net/ogc"});
  addAnnotation(getQueryType_TypeNames(),source,new String[]{"kind","attribute","name","typeNames"});
  addAnnotation(rangeOfValuesTypeEClass,source,new String[]{"name","RangeOfValuesType","kind","elementOnly"});
  addAnnotation(getRangeOfValuesType_MinValue(),source,new String[]{"kind","element","name","MinValue","namespace","##targetNamespace"});
  addAnnotation(getRangeOfValuesType_MaxValue(),source,new String[]{"kind","element","name","MaxValue","namespace","##targetNamespace"});
  addAnnotation(recordPropertyTypeEClass,source,new String[]{"name","RecordPropertyType","kind","elementOnly"});
  addAnnotation(getRecordPropertyType_Name(),source,new String[]{"kind","element","name","Name","namespace","##targetNamespace"});
  addAnnotation(getRecordPropertyType_Value(),source,new String[]{"kind","element","name","Value","namespace","##targetNamespace"});
  addAnnotation(requestBaseTypeEClass,source,new String[]{"name","RequestBaseType","kind","empty"});
  addAnnotation(getRequestBaseType_Service(),source,new String[]{"kind","attribute","name","service"});
  addAnnotation(getRequestBaseType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(requestStatusTypeEClass,source,new String[]{"name","RequestStatusType","kind","empty"});
  addAnnotation(getRequestStatusType_Timestamp(),source,new String[]{"kind","attribute","name","timestamp"});
  addAnnotation(schemaComponentTypeEClass,source,new String[]{"name","SchemaComponentType","kind","mixed"});
  addAnnotation(getSchemaComponentType_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getSchemaComponentType_Any(),source,new String[]{"kind","elementWildcard","wildcards","##any","name",":1","processing","lax"});
  addAnnotation(getSchemaComponentType_ParentSchema(),source,new String[]{"kind","attribute","name","parentSchema"});
  addAnnotation(getSchemaComponentType_SchemaLanguage(),source,new String[]{"kind","attribute","name","schemaLanguage"});
  addAnnotation(getSchemaComponentType_TargetNamespace(),source,new String[]{"kind","attribute","name","targetNamespace"});
  addAnnotation(searchResultsTypeEClass,source,new String[]{"name","SearchResultsType","kind","elementOnly"});
  addAnnotation(getSearchResultsType_AbstractRecordGroup(),source,new String[]{"kind","group","name","AbstractRecord:group","namespace","##targetNamespace"});
  addAnnotation(getSearchResultsType_AbstractRecord(),source,new String[]{"kind","element","name","AbstractRecord","namespace","##targetNamespace","group","AbstractRecord:group"});
  addAnnotation(getSearchResultsType_Any(),source,new String[]{"kind","elementWildcard","wildcards","##other","name",":2","processing","strict"});
  addAnnotation(getSearchResultsType_ElementSet(),source,new String[]{"kind","attribute","name","elementSet"});
  addAnnotation(getSearchResultsType_Expires(),source,new String[]{"kind","attribute","name","expires"});
  addAnnotation(getSearchResultsType_NextRecord(),source,new String[]{"kind","attribute","name","nextRecord"});
  addAnnotation(getSearchResultsType_NumberOfRecordsMatched(),source,new String[]{"kind","attribute","name","numberOfRecordsMatched"});
  addAnnotation(getSearchResultsType_NumberOfRecordsReturned(),source,new String[]{"kind","attribute","name","numberOfRecordsReturned"});
  addAnnotation(getSearchResultsType_RecordSchema(),source,new String[]{"kind","attribute","name","recordSchema"});
  addAnnotation(getSearchResultsType_ResultSetId(),source,new String[]{"kind","attribute","name","resultSetId"});
  addAnnotation(transactionResponseTypeEClass,source,new String[]{"name","TransactionResponseType","kind","elementOnly"});
  addAnnotation(getTransactionResponseType_TransactionSummary(),source,new String[]{"kind","element","name","TransactionSummary","namespace","##targetNamespace"});
  addAnnotation(getTransactionResponseType_InsertResult(),source,new String[]{"kind","element","name","InsertResult","namespace","##targetNamespace"});
  addAnnotation(getTransactionResponseType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(transactionSummaryTypeEClass,source,new String[]{"name","TransactionSummaryType","kind","elementOnly"});
  addAnnotation(getTransactionSummaryType_TotalInserted(),source,new String[]{"kind","element","name","totalInserted","namespace","##targetNamespace"});
  addAnnotation(getTransactionSummaryType_TotalUpdated(),source,new String[]{"kind","element","name","totalUpdated","namespace","##targetNamespace"});
  addAnnotation(getTransactionSummaryType_TotalDeleted(),source,new String[]{"kind","element","name","totalDeleted","namespace","##targetNamespace"});
  addAnnotation(getTransactionSummaryType_RequestId(),source,new String[]{"kind","attribute","name","requestId"});
  addAnnotation(transactionTypeEClass,source,new String[]{"name","TransactionType","kind","elementOnly"});
  addAnnotation(getTransactionType_Group(),source,new String[]{"kind","group","name","group:2"});
  addAnnotation(getTransactionType_Insert(),source,new String[]{"kind","element","name","Insert","namespace","##targetNamespace","group","#group:2"});
  addAnnotation(getTransactionType_Update(),source,new String[]{"kind","element","name","Update","namespace","##targetNamespace","group","#group:2"});
  addAnnotation(getTransactionType_Delete(),source,new String[]{"kind","element","name","Delete","namespace","##targetNamespace","group","#group:2"});
  addAnnotation(getTransactionType_RequestId(),source,new String[]{"kind","attribute","name","requestId"});
  addAnnotation(getTransactionType_VerboseResponse(),source,new String[]{"kind","attribute","name","verboseResponse"});
  addAnnotation(updateTypeEClass,source,new String[]{"name","UpdateType","kind","elementOnly"});
  addAnnotation(getUpdateType_Any(),source,new String[]{"kind","elementWildcard","wildcards","##other","name",":0","processing","strict"});
  addAnnotation(getUpdateType_RecordProperty(),source,new String[]{"kind","element","name","RecordProperty","namespace","##targetNamespace"});
  addAnnotation(getUpdateType_Constraint(),source,new String[]{"kind","element","name","Constraint","namespace","##targetNamespace"});
  addAnnotation(getUpdateType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(dcmiRecordTypeEClass,source,new String[]{"name","DCMIRecordType","kind","elementOnly"});
  addAnnotation(getDCMIRecordType_DCElement(),source,new String[]{"kind","element","name","DC-element","namespace","http://purl.org/dc/elements/1.1/","group","http://purl.org/dc/elements/1.1/#DC-element:group"});
  addAnnotation(recordTypeEClass,source,new String[]{"name","RecordType","kind","elementOnly"});
  addAnnotation(getRecordType_AnyText(),source,new String[]{"kind","element","name","AnyText","namespace","##targetNamespace"});
  addAnnotation(getRecordType_BoundingBox(),source,new String[]{"kind","element","name","BoundingBox","namespace","http://www.opengis.net/ows","group","http://www.opengis.net/ows#BoundingBox:group"});
  addAnnotation(simpleLiteralEClass,source,new String[]{"name","SimpleLiteral","kind","elementOnly"});
  addAnnotation(getSimpleLiteral_Scheme(),source,new String[]{"kind","attribute","name","scheme"});
  addAnnotation(summaryRecordTypeEClass,source,new String[]{"name","SummaryRecordType","kind","elementOnly"});
  addAnnotation(getSummaryRecordType_Identifier(),source,new String[]{"kind","element","name","identifier","namespace","http://purl.org/dc/elements/1.1/","group","http://purl.org/dc/elements/1.1/#identifier:group"});
  addAnnotation(getSummaryRecordType_Title(),source,new String[]{"kind","element","name","title","namespace","http://purl.org/dc/elements/1.1/","group","http://purl.org/dc/elements/1.1/#title:group"});
  addAnnotation(getSummaryRecordType_Type(),source,new String[]{"kind","element","name","type","namespace","http://purl.org/dc/elements/1.1/"});
  addAnnotation(getSummaryRecordType_Subject(),source,new String[]{"kind","element","name","subject","namespace","http://purl.org/dc/elements/1.1/"});
  addAnnotation(getSummaryRecordType_Format(),source,new String[]{"kind","element","name","format","namespace","http://purl.org/dc/elements/1.1/","group","http://purl.org/dc/elements/1.1/#format:group"});
  addAnnotation(getSummaryRecordType_Relation(),source,new String[]{"kind","element","name","relation","namespace","http://purl.org/dc/elements/1.1/","group","http://purl.org/dc/elements/1.1/#relation:group"});
  addAnnotation(getSummaryRecordType_Modified(),source,new String[]{"kind","element","name","modified","namespace","http://purl.org/dc/terms/"});
  addAnnotation(getSummaryRecordType_Abstract(),source,new String[]{"kind","element","name","abstract","namespace","http://purl.org/dc/terms/"});
  addAnnotation(getSummaryRecordType_Spatial(),source,new String[]{"kind","element","name","spatial","namespace","http://purl.org/dc/terms/"});
  addAnnotation(getSummaryRecordType_BoundingBox(),source,new String[]{"kind","element","name","BoundingBox","namespace","http://www.opengis.net/ows","group","http://www.opengis.net/ows#BoundingBox:group"});
  addAnnotation(elementSetTypeEEnum,source,new String[]{"name","ElementSetType"});
  addAnnotation(resultTypeEEnum,source,new String[]{"name","ResultType"});
}
