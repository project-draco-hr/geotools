{
  final int PRIME=37;
  int result=17;
  if (perpendicularOffset != null) {
    result=(result * PRIME) + perpendicularOffset.hashCode();
  }
  if (gap != null) {
    result=(result * PRIME) + gap.hashCode();
  }
  if (initialGap != null) {
    result=(result * PRIME) + initialGap.hashCode();
  }
  result=(result * PRIME) + new Boolean(generalized).hashCode();
  result=(result * PRIME) + new Boolean(aligned).hashCode();
  result=(result * PRIME) + new Boolean(repeated).hashCode();
  return result;
}
