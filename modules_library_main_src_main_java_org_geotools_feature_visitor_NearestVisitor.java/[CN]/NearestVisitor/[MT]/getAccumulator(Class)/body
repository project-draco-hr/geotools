{
  if (Number.class.isAssignableFrom(attributeClass)) {
    Double convertedTarget=Converters.convert(valueToMatch,Double.class);
    return new NumberAccumulator(convertedTarget);
  }
 else   if (Date.class.isAssignableFrom(attributeClass)) {
    Date convertedTarget=Converters.convert(valueToMatch,Date.class);
    return new DateAccumulator(convertedTarget);
  }
 else   if (Geometry.class.isAssignableFrom(attributeClass)) {
    Geometry convertedTarget=Converters.convert(valueToMatch,Geometry.class);
    return new GeometryAccumulator(convertedTarget);
  }
 else   if (Comparable.class.isAssignableFrom(attributeClass)) {
    Comparable convertedTarget=(Comparable)Converters.convert(valueToMatch,attributeClass);
    return new ComparableAccumulator(convertedTarget);
  }
  throw new IllegalArgumentException("Don't know how to compute nearest for target class " + attributeClass);
}
