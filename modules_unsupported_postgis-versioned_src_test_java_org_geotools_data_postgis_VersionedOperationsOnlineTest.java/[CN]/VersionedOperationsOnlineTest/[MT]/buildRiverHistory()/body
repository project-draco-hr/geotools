{
  VersionedPostgisDataStore ds=getDataStore();
  ds.setVersioned("river",true,"mambo","version enabling stuff");
  Transaction t=createTransaction("lamb","first change");
  FeatureWriter<SimpleFeatureType,SimpleFeature> fw=ds.getFeatureWriter("river",Filter.INCLUDE,t);
  while (fw.hasNext()) {
    SimpleFeature f=fw.next();
    if (f.getID().equals("river.rv1")) {
      f.setAttribute("river","rv1 v2");
      f.setAttribute("flow",new Double(9.6));
    }
 else {
      f.setAttribute("river","rv2 v2");
      f.setAttribute("geom",lines(new int[][]{{100,100,120,120}}));
    }
    fw.write();
  }
  fw.close();
  t.commit();
  t.close();
  t=createTransaction("trout","second change");
  fw=ds.getFeatureWriter("river",Filter.INCLUDE,t);
  while (fw.hasNext()) {
    SimpleFeature f=fw.next();
    if (f.getID().equals("river.rv2")) {
      f.setAttribute("river","rv2 v3");
      f.setAttribute("geom",lines(new int[][]{{200,200,120,120}}));
    }
    fw.write();
  }
  fw.close();
  t.commit();
  t.close();
  t=createTransaction("lamb","third change");
  fw=ds.getFeatureWriterAppend("river",t);
  SimpleFeature f=fw.next();
  f.setAttribute("id",new Integer(3));
  f.setAttribute("geom",lines(new int[][]{{300,300,301,301}}));
  f.setAttribute("river","rv2 v3");
  f.setAttribute("flow",new Double(12.2));
  fw.write();
  String newId=f.getID();
  fw.close();
  t.commit();
  t.close();
  t=createTransaction("trout","fourth change");
  fw=ds.getFeatureWriter("river",Filter.INCLUDE,t);
  while (fw.hasNext()) {
    f=fw.next();
    if (f.getID().equals("river.rv2")) {
      fw.remove();
    }
 else {
      fw.write();
    }
  }
  fw.close();
  t.commit();
  t.close();
  return newId;
}
