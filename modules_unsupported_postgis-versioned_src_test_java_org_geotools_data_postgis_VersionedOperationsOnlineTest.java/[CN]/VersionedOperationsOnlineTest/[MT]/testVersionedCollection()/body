{
  VersionedPostgisDataStore ds=getDataStore();
  buildRiverHistory();
  VersioningFeatureSource fs=(VersioningFeatureSource)ds.getFeatureSource("river");
  SimpleFeatureCollection vfc=fs.getVersionedFeatures();
  SimpleFeatureCollection fc=fs.getFeatures();
  assertEquals(vfc.size(),fc.size());
  final int vfcAttributesCount=vfc.getSchema().getAttributeCount();
  assertEquals(fc.getSchema().getAttributeCount() + 8,vfcAttributesCount);
  assertEquals("creationVersion",vfc.getSchema().getDescriptor(0).getLocalName());
  assertEquals("createdBy",vfc.getSchema().getDescriptor(1).getLocalName());
  assertEquals("creationDate",vfc.getSchema().getDescriptor(2).getLocalName());
  assertEquals("creationMessage",vfc.getSchema().getDescriptor(3).getLocalName());
  assertEquals("lastUpdateVersion",vfc.getSchema().getDescriptor(4).getLocalName());
  assertEquals("lastUpdatedBy",vfc.getSchema().getDescriptor(5).getLocalName());
  assertEquals("lastUpdateDate",vfc.getSchema().getDescriptor(6).getLocalName());
  assertEquals("lastUpdateMessage",vfc.getSchema().getDescriptor(7).getLocalName());
  final SimpleFeatureIterator vfr=vfc.features();
  final SimpleFeatureIterator fr=fc.features();
  final SimpleFeature vf=vfr.next();
  final SimpleFeature f=fr.next();
  vfr.close();
  fr.close();
  assertEquals(fc.getSchema().getTypeName(),vfc.getSchema().getTypeName());
  assertEquals(f.getFeatureType().getTypeName(),vf.getFeatureType().getTypeName());
  assertEquals(vfcAttributesCount,vfc.getSchema().getAttributeCount());
  assertEquals(f.getID(),vf.getID());
  for (int i=0; i < f.getFeatureType().getAttributeCount(); i++) {
    assertTrue(DataUtilities.attributesEqual(f.getAttribute(i),vf.getAttribute(i + 8)));
  }
}
