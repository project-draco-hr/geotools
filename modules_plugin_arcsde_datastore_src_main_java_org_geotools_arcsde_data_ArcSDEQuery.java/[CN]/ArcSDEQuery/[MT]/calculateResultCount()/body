{
  final SimpleFeatureType schema=this.schema;
  final String colName;
{
    String fidAtt;
    if (fidReader.getFidColumn() == null) {
      fidAtt=schema.getDescriptor(0).getLocalName();
    }
 else {
      fidAtt=fidReader.getFidColumn();
    }
    colName=filters.getSqlEncoder().getColumnDefinition(fidAtt);
  }
  final SeQueryInfo qInfo=filters.getQueryInfo(new String[]{colName});
  final SeFilter[] spatialFilters=filters.getSpatialFilters();
  final Command<Integer> countCmd=new Command<Integer>(){
    @Override public Integer execute(    ISession session,    SeConnection connection) throws SeException, IOException {
      final SeQueryInfo queryInfo=qInfo;
      SeQuery query=new SeQuery(connection);
      try {
        versioningHandler.setUpStream(session,query);
        if (spatialFilters != null && spatialFilters.length > 0) {
          final boolean calcMasks=true;
          final short searchOrder=SeQuery.SE_OPTIMIZE;
          query.setSpatialConstraints(searchOrder,calcMasks,spatialFilters);
          final SeDBMSInfo dbmsInfo=connection.getDBMSInfo();
          final boolean unsupported=versioningHandler != ArcSdeVersionHandler.NONVERSIONED_HANDLER && dbmsInfo.dbmsId == SeDBMSInfo.SE_DBMS_IS_ORACLE;
          if (unsupported) {
            LOGGER.fine("ArcSDE on Oracle can't calculate count statistics " + "on versioned layers with spatial filters");
          }
          query.prepareQueryInfo(queryInfo);
          query.execute();
          int count=0;
          while (query.fetch() != null) {
            count++;
          }
          return count;
        }
        final int defaultMaxDistinctValues=0;
        final SeTable.SeTableStats tableStats;
        tableStats=query.calculateTableStatistics(colName,SeTable.SeTableStats.SE_COUNT_STATS,queryInfo,defaultMaxDistinctValues);
        int actualCount=tableStats.getCount();
        return new Integer(actualCount);
      }
  finally {
        query.close();
      }
    }
  }
;
  final Integer count=session.issue(countCmd);
  return count.intValue();
}
