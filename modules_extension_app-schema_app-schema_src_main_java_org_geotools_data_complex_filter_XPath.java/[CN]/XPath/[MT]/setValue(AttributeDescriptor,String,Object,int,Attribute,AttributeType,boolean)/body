{
  Object convertedValue=null;
  Map<Object,Object> simpleContentProperties=null;
  if (isFeatureChainedSimpleContent(descriptor,value)) {
    List<Property> nestedPropList=getSimpleContentList(value);
    if (!nestedPropList.isEmpty()) {
      Property nestedProp=nestedPropList.iterator().next();
      if (Types.isGeometryType(descriptor.getType()) || nestedProp.getName().equals(descriptor.getName())) {
        convertedValue=nestedProp.getValue();
      }
 else {
        convertedValue=nestedPropList;
      }
      simpleContentProperties=nestedProp.getUserData();
    }
  }
 else {
    convertedValue=convertValue(descriptor,value);
  }
  Attribute leafAttribute=null;
  final Name attributeName=descriptor.getName();
  if (!isXlinkRef) {
    if (parent instanceof ComplexAttribute) {
      Object currStepValue=((ComplexAttribute)parent).getProperties(attributeName);
      if (currStepValue instanceof Collection) {
        List<Attribute> values=new ArrayList((Collection)currStepValue);
        if (!values.isEmpty()) {
          if (isEmpty(convertedValue)) {
            if (index > -1) {
              int valueIndex=1;
              for (              Attribute stepValue : values) {
                Object mappedIndex=stepValue.getUserData().get(ComplexFeatureConstants.MAPPED_ATTRIBUTE_INDEX);
                if (mappedIndex == null) {
                  mappedIndex=valueIndex;
                }
                if (index == Integer.parseInt(String.valueOf(mappedIndex))) {
                  leafAttribute=stepValue;
                }
                valueIndex++;
              }
            }
 else {
              leafAttribute=values.get(values.size() - 1);
            }
          }
 else {
            for (            Attribute stepValue : values) {
              boolean sameIndex=true;
              if (index > -1) {
                if (stepValue.getUserData().containsKey(ComplexFeatureConstants.MAPPED_ATTRIBUTE_INDEX)) {
                  sameIndex=(index == Integer.parseInt(String.valueOf(stepValue.getUserData().get(ComplexFeatureConstants.MAPPED_ATTRIBUTE_INDEX))));
                }
              }
              if (sameIndex && stepValue.getValue().equals(convertedValue)) {
                leafAttribute=stepValue;
              }
            }
          }
        }
      }
 else       if (currStepValue instanceof Attribute) {
        leafAttribute=(Attribute)currStepValue;
      }
 else       if (currStepValue != null) {
        throw new IllegalStateException("Unknown addressed object. Xpath:" + attributeName + ", addressed: "+ currStepValue.getClass().getName()+ " ["+ currStepValue.toString()+ "]");
      }
    }
  }
  if (leafAttribute == null || (descriptor.getMaxOccurs() > 1 && leafAttribute.getUserData().containsKey(Attributes.class) && ((Map<Object,Object>)leafAttribute.getUserData().get(Attributes.class)).containsKey(AbstractMappingFeatureIterator.XLINK_HREF_NAME))) {
    AppSchemaAttributeBuilder builder=new AppSchemaAttributeBuilder(featureFactory);
    if (crs != null) {
      builder.setCRS(crs);
    }
    builder.setDescriptor(parent.getDescriptor());
    builder.setType(parent.getType());
    if (targetNodeType != null) {
      if (parent.getType().getName().equals(XSSchema.ANYTYPE_TYPE.getName())) {
        leafAttribute=builder.addAnyTypeValue(convertedValue,targetNodeType,descriptor,id);
      }
 else {
        leafAttribute=builder.add(id,convertedValue,attributeName,targetNodeType);
      }
    }
 else     if (descriptor.getType().getName().equals(XSSchema.ANYTYPE_TYPE.getName()) && (value == null || (value instanceof Collection && ((Collection)value).isEmpty()))) {
      leafAttribute=builder.addComplexAnyTypeAttribute(convertedValue,descriptor,id);
    }
 else {
      leafAttribute=builder.add(id,convertedValue,attributeName);
    }
    if (index > -1) {
      leafAttribute.getUserData().put(ComplexFeatureConstants.MAPPED_ATTRIBUTE_INDEX,index);
    }
    List newValue=new ArrayList();
    newValue.addAll((Collection)parent.getValue());
    newValue.add(leafAttribute);
    parent.setValue(newValue);
  }
  if (!isEmpty(convertedValue)) {
    leafAttribute.setValue(convertedValue);
  }
  if (simpleContentProperties != null) {
    mergeClientProperties(leafAttribute,simpleContentProperties);
  }
  return leafAttribute;
}
