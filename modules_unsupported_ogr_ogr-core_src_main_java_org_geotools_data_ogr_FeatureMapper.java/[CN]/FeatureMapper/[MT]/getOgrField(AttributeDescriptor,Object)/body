{
  if (ad instanceof GeometryDescriptor) {
    Object ogrGeometry=ogr.FeatureGetGeometry(ogrFeature);
    return fixGeometryType(geomMapper.parseOgrGeometry(ogrGeometry),ad);
  }
  Integer idx=attributeIndexes.get(ad.getLocalName());
  if (idx == null || !ogr.FeatureIsFieldSet(ogrFeature,idx)) {
    return null;
  }
  Class clazz=ad.getType().getBinding();
  if (clazz.equals(String.class)) {
    return ogr.FeatureGetFieldAsString(ogrFeature,idx);
  }
 else   if (clazz.equals(Byte.class)) {
    return (byte)ogr.FeatureGetFieldAsInteger(ogrFeature,idx);
  }
 else   if (clazz.equals(Short.class)) {
    return (short)ogr.FeatureGetFieldAsInteger(ogrFeature,idx);
  }
 else   if (clazz.equals(Integer.class)) {
    return ogr.FeatureGetFieldAsInteger(ogrFeature,idx);
  }
 else   if (clazz.equals(Long.class)) {
    String value=ogr.FeatureGetFieldAsString(ogrFeature,idx);
    return new Long(value);
  }
 else   if (clazz.equals(BigInteger.class)) {
    String value=ogr.FeatureGetFieldAsString(ogrFeature,idx);
    return new BigInteger(value);
  }
 else   if (clazz.equals(Double.class)) {
    return ogr.FeatureGetFieldAsDouble(ogrFeature,idx);
  }
 else   if (clazz.equals(Float.class)) {
    return (float)ogr.FeatureGetFieldAsDouble(ogrFeature,idx);
  }
 else   if (clazz.equals(BigDecimal.class)) {
    String value=ogr.FeatureGetFieldAsString(ogrFeature,idx).trim();
    char separator=DECIMAL_SYMBOLS.getDecimalSeparator();
    if (separator != '.') {
      value=value.replace(separator,'.');
    }
    return new BigDecimal(value);
  }
 else   if (clazz.equals(java.sql.Date.class)) {
    Calendar cal=getDateField(ogrFeature,idx);
    cal.clear(Calendar.HOUR_OF_DAY);
    cal.clear(Calendar.MINUTE);
    cal.clear(Calendar.SECOND);
    return new java.sql.Date(cal.getTimeInMillis());
  }
 else   if (clazz.equals(java.sql.Time.class)) {
    Calendar cal=getDateField(ogrFeature,idx);
    cal.clear(Calendar.YEAR);
    cal.clear(Calendar.MONTH);
    cal.clear(Calendar.DAY_OF_MONTH);
    return new java.sql.Time(cal.getTimeInMillis());
  }
 else   if (clazz.equals(java.sql.Timestamp.class)) {
    Calendar cal=getDateField(ogrFeature,idx);
    return new java.sql.Time(cal.getTimeInMillis());
  }
 else   if (clazz.equals(java.util.Date.class)) {
    Calendar cal=getDateField(ogrFeature,idx);
    return cal.getTime();
  }
 else {
    throw new IllegalArgumentException("Don't know how to read " + clazz.getName() + " fields");
  }
}
