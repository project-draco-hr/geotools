{
  int[] bounds={120,50,50};
  TableViewerColumn col=createTableViewerColumn(titles[0],bounds[0],0);
  col.setLabelProvider(new ColumnLabelProvider(){
    @Override public Image getImage(    Object element){
      if (element instanceof Layer) {
        Layer p=(Layer)element;
        if (Utils.isGridLayer(p)) {
          return ImageCache.getInstance().getImage(ImageCache.GRID);
        }
        return ImageCache.getInstance().getImage(ImageCache.FEATURE);
      }
      return null;
    }
    @Override public String getText(    Object element){
      if (element instanceof Layer) {
        Layer p=(Layer)element;
        String title=p.getTitle();
        if (title == null || title.length() == 0) {
          @SuppressWarnings("rawtypes") FeatureSource featureSource=p.getFeatureSource();
          if (featureSource != null) {
            title=featureSource.getName().getLocalPart().toString();
          }
        }
        return title;
      }
      return null;
    }
  }
);
  col=createTableViewerColumn(titles[1],bounds[1],1);
  col.setLabelProvider(new ColumnLabelProvider(){
    @Override public Image getImage(    Object element){
      if (element instanceof Layer) {
        Layer p=(Layer)element;
        if (p.isVisible()) {
          return ImageCache.getInstance().getImage(ImageCache.CHECKED);
        }
        return ImageCache.getInstance().getImage(ImageCache.UNCHECKED);
      }
      return null;
    }
    @Override public String getText(    Object element){
      return null;
    }
  }
);
  col=createTableViewerColumn(titles[2],bounds[2],2);
  col.setLabelProvider(new ColumnLabelProvider(){
    public Image getImage(    Object element){
      return ImageCache.getInstance().getImage(ImageCache.STYLE);
    }
    @Override public String getText(    Object element){
      return null;
    }
  }
);
}
