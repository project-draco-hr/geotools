{
  Iterator itr=m_edge.getOutRelated();
  OptDirectedEdge de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge);
  assertTrue(!itr.hasNext());
  addSame();
  itr=m_edge.getOutRelated();
  de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge);
  assertTrue(!itr.hasNext());
  addSame2();
  itr=m_edge.getOutRelated();
  de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge);
  assertTrue(!itr.hasNext());
  addOpp();
  itr=m_edge.getOutRelated();
  de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge || de == m_opp);
  de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge || de == m_opp);
  assertTrue(!itr.hasNext());
  addOpp2();
  itr=m_edge.getOutRelated();
  de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge || de == m_opp || de == m_opp2);
  de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge || de == m_opp || de == m_opp2);
  de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge || de == m_opp || de == m_opp2);
  assertTrue(!itr.hasNext());
  addLoops();
  itr=m_edge.getOutRelated();
  de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge || de == m_outloop);
  de=(OptDirectedEdge)itr.next();
  assertTrue(de == m_outEdge || de == m_outloop);
  assertTrue(!itr.hasNext());
}
