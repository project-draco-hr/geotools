{
  m_inNode=new OptDirectedNode();
  m_inNode.setInDegree(1);
  m_inNode.setOutDegree(1);
  m_outNode=new OptDirectedNode();
  m_outNode.setInDegree(1);
  m_outNode.setOutDegree(1);
  m_edge=new OptDirectedEdge(m_inNode,m_outNode);
  m_inNode.addOut(m_edge);
  m_outNode.addIn(m_edge);
  m_otherInNode=new OptDirectedNode();
  m_otherInNode.setInDegree(0);
  m_otherInNode.setOutDegree(1);
  m_otherOutNode=new OptDirectedNode();
  m_otherOutNode.setInDegree(1);
  m_otherOutNode.setOutDegree(0);
  m_inEdge=new OptDirectedEdge(m_otherInNode,m_inNode);
  m_otherInNode.addOut(m_inEdge);
  m_inNode.addIn(m_inEdge);
  m_outEdge=new OptDirectedEdge(m_outNode,m_otherOutNode);
  m_outNode.addOut(m_outEdge);
  m_otherOutNode.addIn(m_outEdge);
  m_same=new OptDirectedEdge(m_inNode,m_outNode);
  m_same2=new OptDirectedEdge(m_inNode,m_outNode);
  m_opp=new OptDirectedEdge(m_outNode,m_inNode);
  m_opp2=new OptDirectedEdge(m_outNode,m_inNode);
  m_inloop=new OptDirectedEdge(m_inNode,m_inNode);
  m_outloop=new OptDirectedEdge(m_outNode,m_outNode);
  m_inoutEdge=new OptDirectedEdge(m_inNode,m_otherInNode);
  m_outinEdge=new OptDirectedEdge(m_otherOutNode,m_outNode);
}
