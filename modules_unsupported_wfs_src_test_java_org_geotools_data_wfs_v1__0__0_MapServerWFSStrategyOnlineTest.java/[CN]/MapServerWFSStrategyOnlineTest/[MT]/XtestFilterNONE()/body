{
  final String TYPE_NAME="hospitals";
  WFS_1_0_0_DataStore ds;
  int totalFeatures;
  URL host=new URL("http://mapserver.refractions.net/cgi-bin/mapserv48?map=/home/www/mapserv/maps/victoria-wms.map&SERVICE=WFS&VERSION=1.0.0&REQUEST=GetCapabilities");
  WFSDataStoreFactory dsfac=new WFSDataStoreFactory();
  Map params=new HashMap();
  params.put(WFSDataStoreFactory.URL.key,host);
  params.put(WFSDataStoreFactory.TIMEOUT.key,10000);
  params.put(WFSDataStoreFactory.BUFFER_SIZE.key,100);
  params.put(WFSDataStoreFactory.TRY_GZIP.key,Boolean.TRUE);
  params.put(WFSDataStoreFactory.LENIENT.key,Boolean.TRUE);
  ds=(WFS_1_0_0_DataStore)dsfac.createDataStore(params);
  assertTrue(ds.strategy instanceof MapServerWFSStrategy);
  FilterFactory2 ff=CommonFactoryFinder.getFilterFactory2();
  String attName=ds.getSchema(TYPE_NAME).getGeometryDescriptor().getLocalName();
  ReferencedEnvelope bounds=ds.getBounds(new Query(TYPE_NAME));
  BBOX filter=ff.bbox(ff.property(attName),bounds);
  Query query=new Query(TYPE_NAME,filter);
  SimpleFeatureCollection features=ds.getFeatureSource(TYPE_NAME).getFeatures(query);
  SimpleFeatureIterator iter=features.features();
  try {
    int count=0;
    while (iter.hasNext()) {
      iter.next();
      count++;
    }
    totalFeatures=count;
  }
  finally {
    iter.close();
  }
  SimpleFeatureSource source=ds.getFeatureSource(TYPE_NAME);
  SimpleFeatureCollection reader=source.getFeatures(Query.ALL);
  assertCorrectSize(reader,totalFeatures);
  reader=source.getFeatures(Filter.INCLUDE);
  assertCorrectSize(reader,totalFeatures);
  reader=source.getFeatures(new Query(TYPE_NAME,Filter.INCLUDE));
  assertCorrectSize(reader,totalFeatures);
}
