{
  double[] background=this.background;
  if (images != null && images.length > 0) {
    ColorModel cmref=images[0].getColorModel();
    Color backgroundColor=getBackgroundColor();
    if (cmref instanceof IndexColorModel && (cmref.getTransparency() != IndexColorModel.OPAQUE || images[0].getProperty("ROI") instanceof ROI) && backgroundColor != null) {
      IndexColorModel icm=(IndexColorModel)cmref;
      int index=ColorUtilities.getColorIndex(icm,backgroundColor,-1);
      Color color;
      if (icm.hasAlpha()) {
        color=new Color(icm.getRed(index),icm.getGreen(index),icm.getBlue(index));
      }
 else {
        color=new Color(icm.getRed(index),icm.getGreen(index),icm.getBlue(index),icm.getAlpha(index));
      }
      if (color.equals(backgroundColor)) {
        background=new double[]{index};
      }
 else {
        for (int i=0; i < images.length; i++) {
          images[i]=new ImageWorker(images[i]).forceComponentColorModel().getRenderedImage();
        }
      }
    }
  }
  ParameterBlock pb=new ParameterBlock();
  int srcNum=0;
  if (images != null && images.length > 0) {
    for (int i=0; i < images.length; i++) {
      if (images[i] != null) {
        pb.addSource(images[i]);
        srcNum++;
      }
    }
  }
  ROI[] roisNew=null;
  if (rois != null && srcNum > 0) {
    roisNew=new ROI[srcNum];
    System.arraycopy(rois,0,roisNew,0,rois.length);
  }
  PlanarImage[] alphasNew=null;
  if (alphas != null && srcNum > 0) {
    alphasNew=new PlanarImage[srcNum];
    System.arraycopy(alphas,0,alphasNew,0,alphas.length);
  }
  Range[] nodataNew=null;
  boolean noInternalNoData=true;
  if (nodata != null && srcNum > 0) {
    nodataNew=new Range[srcNum];
    System.arraycopy(nodata,0,nodataNew,0,nodata.length);
  }
 else {
    nodataNew=new Range[srcNum];
    for (int i=0; i < srcNum; i++) {
      RenderedImage img=pb.getRenderedSource(i);
      Range nodProp=extractNoDataProperty(img);
      noInternalNoData&=(nodProp == null);
      nodataNew[i]=nodProp;
    }
  }
  if (noInternalNoData && thresholds != null) {
    nodataNew=handleMosaicThresholds(thresholds,srcNum);
  }
  pb.add(type);
  pb.add(alphasNew);
  pb.add(roisNew);
  pb.add(thresholds);
  pb.add(background);
  pb.add(nodataNew);
  image=JAI.create("Mosaic",pb,getRenderingHints());
  if (background == null) {
    if (roisNew != null) {
      ROI finalROI=mosaicROIs(pb.getSources(),roisNew);
      setROI(finalROI);
    }
  }
 else {
    setROI(null);
  }
  return this;
}
