{
  tileCacheEnabled(false);
  binarize();
  tileCacheEnabled(true);
  final LookupTable table;
  final int min=Math.min(value0,value1);
  if (min >= 0) {
    final int max=Math.max(value0,value1);
    if (max < 256) {
      table=LookupTableFactory.create(new byte[]{(byte)value0,(byte)value1},DataBuffer.TYPE_BYTE);
    }
 else     if (max < 65536) {
      table=LookupTableFactory.create(new short[]{(short)value0,(short)value1},true);
    }
 else {
      table=LookupTableFactory.create(new int[]{value0,value1});
    }
  }
 else {
    table=LookupTableFactory.create(new int[]{value0,value1},DataBuffer.TYPE_BYTE);
  }
  ParameterBlock pb=new ParameterBlock();
  pb.setSource(image,0);
  pb.set(table,0);
  pb.set(roi,2);
  pb.set(nodata,3);
  if (isNoDataNeeded()) {
    if (background != null && background.length > 0) {
      pb.set(background[0],1);
    }
  }
  image=JAI.create("Lookup",pb,getRenderingHints());
  invalidateStatistics();
  return this;
}
