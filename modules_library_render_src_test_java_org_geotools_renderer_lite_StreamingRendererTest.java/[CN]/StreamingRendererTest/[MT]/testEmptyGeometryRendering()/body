{
  MapContent mc=new MapContent();
  File dir=new File(TestData.getResource(this,"empty-geom-rendering.properties").toURI());
  PropertyDataStore dataStore=new PropertyDataStore(dir.getParentFile()){
    @Override protected ContentFeatureSource createFeatureSource(    ContentEntry entry) throws IOException {
      return new PropertyFeatureSource(entry,Query.ALL){
        @Override protected boolean canFilter(){
          return true;
        }
      }
;
    }
  }
;
  StyleBuilder sb=new StyleBuilder();
  Style style=sb.createStyle(sb.createPolygonSymbolizer());
  Layer layer=new FeatureLayer(dataStore.getFeatureSource("empty-geom-rendering"),style);
  mc.addLayer(layer);
  StreamingRenderer sr=new StreamingRenderer();
  sr.setMapContent(mc);
  BufferedImage img=new BufferedImage(40,40,BufferedImage.TYPE_INT_ARGB);
  Graphics2D graphics=img.createGraphics();
  Rectangle paintArea=new Rectangle(40,40);
  double minx=-8929252.1;
  double maxx=-8708634.6;
  double miny=-491855.7;
  double maxy=-271204.3;
  ReferencedEnvelope referencedEnvelope=new ReferencedEnvelope(new Rectangle2D.Double(minx,miny,maxx - minx,maxy - miny),CRS.decode("EPSG:3857"));
  sr.addRenderListener(new RenderListener(){
    public void featureRenderer(    SimpleFeature feature){
    }
    public void errorOccurred(    Exception e){
      errors++;
    }
  }
);
  errors=0;
  sr.paint(graphics,paintArea,referencedEnvelope);
  assertTrue(errors == 0);
}
