{
  List<BrewerPalette> palettes=new ArrayList<BrewerPalette>();
  Object[] entry=this.palettes.keySet().toArray();
  for (int i=0; i < entry.length; i++) {
    BrewerPalette pal=(BrewerPalette)getPalette(entry[i].toString());
    boolean match=true;
    if (numClasses > -1) {
      if (pal.getMaxColors() < numClasses) {
        match=false;
      }
    }
    if (!pal.getType().isMatch(type)) {
      match=false;
    }
    int[] suitability=pal.getPaletteSuitability().getSuitability(numClasses);
    if (isSet(PaletteSuitability.VIEWER_COLORBLIND,requiredViewers) && (suitability[PaletteSuitability.VIEWER_COLORBLIND] != PaletteSuitability.QUALITY_GOOD)) {
      match=false;
    }
 else     if (isSet(PaletteSuitability.VIEWER_CRT,requiredViewers) && (suitability[PaletteSuitability.VIEWER_CRT] != PaletteSuitability.QUALITY_GOOD)) {
      match=false;
    }
 else     if (isSet(PaletteSuitability.VIEWER_LCD,requiredViewers) && (suitability[PaletteSuitability.VIEWER_LCD] != PaletteSuitability.QUALITY_GOOD)) {
      match=false;
    }
 else     if (isSet(PaletteSuitability.VIEWER_PHOTOCOPY,requiredViewers) && (suitability[PaletteSuitability.VIEWER_PHOTOCOPY] != PaletteSuitability.QUALITY_GOOD)) {
      match=false;
    }
 else     if (isSet(PaletteSuitability.VIEWER_PRINT,requiredViewers) && (suitability[PaletteSuitability.VIEWER_PRINT] != PaletteSuitability.QUALITY_GOOD)) {
      match=false;
    }
 else     if (isSet(PaletteSuitability.VIEWER_PROJECTOR,requiredViewers) && (suitability[PaletteSuitability.VIEWER_PROJECTOR] != PaletteSuitability.QUALITY_GOOD)) {
      match=false;
    }
    if (match) {
      palettes.add(pal);
    }
  }
  return (BrewerPalette[])palettes.toArray(new BrewerPalette[palettes.size()]);
}
