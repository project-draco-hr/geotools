{
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_1BIT,2,null);
  assertDetermineNoDataValue(1,0,1,TYPE_1BIT,2,null);
  assertDetermineNoDataValue(1,0,0,TYPE_1BIT,2,"1BIT no-data should have been set to 2, " + "regardless of the dataset not containing set pixels");
  assertDetermineNoDataValue(1,0,15,TYPE_4BIT,16,null);
  assertDetermineNoDataValue(1,0,3,TYPE_4BIT,16,"4BIT no-data should have been set to 16, " + "regardless of the dataset used values");
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_4BIT,16,null);
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_8BIT_U,256,null);
  assertDetermineNoDataValue(1,0,255,TYPE_8BIT_U,256,null);
  assertDetermineNoDataValue(1,0,254,TYPE_8BIT_U,255,null);
  assertDetermineNoDataValue(1,1,254,TYPE_8BIT_U,0,null);
  assertDetermineNoDataValue(3,Double.NaN,Double.NaN,TYPE_8BIT_U,255,null);
  assertDetermineNoDataValue(3,0,255,TYPE_8BIT_U,255,null);
  assertDetermineNoDataValue(3,0,254,TYPE_8BIT_U,255,null);
  assertDetermineNoDataValue(3,1,254,TYPE_8BIT_U,255,null);
  assertDetermineNoDataValue(4,Double.NaN,Double.NaN,TYPE_8BIT_U,255,null);
  assertDetermineNoDataValue(4,0,255,TYPE_8BIT_U,255,null);
  assertDetermineNoDataValue(4,0,254,TYPE_8BIT_U,255,null);
  assertDetermineNoDataValue(4,1,254,TYPE_8BIT_U,255,null);
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_8BIT_S,-129,null);
  assertDetermineNoDataValue(1,-128,127,TYPE_8BIT_S,Byte.MIN_VALUE - 1,null);
  assertDetermineNoDataValue(1,-128,126,TYPE_8BIT_S,127,null);
  assertDetermineNoDataValue(1,-127,127,TYPE_8BIT_S,-128,null);
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_16BIT_U,65536,null);
  assertDetermineNoDataValue(1,0,65535,TYPE_16BIT_U,65536,null);
  assertDetermineNoDataValue(1,1,65535,TYPE_16BIT_U,0,null);
  assertDetermineNoDataValue(1,0,65534,TYPE_16BIT_U,65535,null);
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_16BIT_S,Short.MIN_VALUE - 1,null);
  assertDetermineNoDataValue(1,Short.MIN_VALUE,Short.MAX_VALUE,TYPE_16BIT_S,Short.MIN_VALUE - 1,null);
  assertDetermineNoDataValue(1,Short.MIN_VALUE,Short.MAX_VALUE - 1,TYPE_16BIT_S,Short.MAX_VALUE,null);
  assertDetermineNoDataValue(1,Short.MIN_VALUE + 1,Short.MAX_VALUE,TYPE_16BIT_S,Short.MIN_VALUE,null);
  double max32bitU=TYPE_32BIT_U.getSampleValueRange().getMaximum();
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_32BIT_U,max32bitU + 1,null);
  assertDetermineNoDataValue(1,0,max32bitU,TYPE_32BIT_U,max32bitU + 1,null);
  assertDetermineNoDataValue(1,1,max32bitU,TYPE_32BIT_U,0,null);
  assertDetermineNoDataValue(1,0,max32bitU - 1,TYPE_32BIT_U,max32bitU,null);
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_32BIT_S,Integer.MIN_VALUE - 1L,null);
  assertDetermineNoDataValue(1,Integer.MIN_VALUE,Integer.MAX_VALUE,TYPE_32BIT_S,(long)Integer.MIN_VALUE - 1,null);
  assertDetermineNoDataValue(1,1,Integer.MAX_VALUE,TYPE_32BIT_S,0,null);
  assertDetermineNoDataValue(1,Integer.MIN_VALUE,Integer.MAX_VALUE - 1L,TYPE_32BIT_S,Integer.MAX_VALUE,null);
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_32BIT_REAL,Float.NaN,null);
  assertDetermineNoDataValue(1,Float.MIN_VALUE,Float.MAX_VALUE,TYPE_32BIT_REAL,Float.NaN,null);
  assertDetermineNoDataValue(1,Float.MIN_VALUE + 1,Float.MAX_VALUE,TYPE_32BIT_REAL,Float.NaN,null);
  assertDetermineNoDataValue(1,Float.MIN_VALUE,Float.MAX_VALUE - 1L,TYPE_32BIT_REAL,Float.NaN,null);
  assertDetermineNoDataValue(1,Double.NaN,Double.NaN,TYPE_64BIT_REAL,Double.NaN,null);
  assertDetermineNoDataValue(1,Double.MIN_VALUE,Double.MAX_VALUE,TYPE_64BIT_REAL,Double.NaN,null);
  assertDetermineNoDataValue(1,Double.MIN_VALUE + 1,Double.MAX_VALUE,TYPE_64BIT_REAL,Double.NaN,null);
  assertDetermineNoDataValue(1,Double.MIN_VALUE,Double.MAX_VALUE - 1L,TYPE_64BIT_REAL,Double.NaN,null);
}
