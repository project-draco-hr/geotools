{
  Geometry arg0;
  Geometry arg1;
  double arg2;
  try {
    arg0=getExpression(0).evaluate(feature,Geometry.class);
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Filter Function problem for function equalsExactTolerance argument #0 - expected type Geometry");
  }
  try {
    arg1=getExpression(1).evaluate(feature,Geometry.class);
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Filter Function problem for function equalsExactTolerance argument #1 - expected type Geometry");
  }
  try {
    arg2=(getExpression(2).evaluate(feature,Double.class)).doubleValue();
  }
 catch (  Exception e) {
    throw new IllegalArgumentException("Filter Function problem for function equalsExactTolerance argument #2 - expected type double");
  }
  return new Boolean(StaticGeometry.equalsExactTolerance(arg0,arg1,arg2));
}
