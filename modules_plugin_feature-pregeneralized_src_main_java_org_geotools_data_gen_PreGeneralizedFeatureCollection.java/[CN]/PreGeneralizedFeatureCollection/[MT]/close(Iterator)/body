{
  if (it == null)   return;
  try {
    Method closeMethod=it.getClass().getMethod("close",new Class[]{});
    if (closeMethod != null) {
      int mod=closeMethod.getModifiers();
      if (Modifier.isPublic(mod) && (Modifier.isStatic(mod) == false))       closeMethod.invoke(it,new Object[]{});
    }
  }
 catch (  SecurityException e) {
    return;
  }
catch (  NoSuchMethodException e) {
    return;
  }
catch (  Exception e) {
    throw new RuntimeException("Error calling close method for " + it.getClass().getName());
  }
}
