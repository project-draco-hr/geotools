{
  pathName=cPathName;
  inputStream=new RandomAccessFile(cPathName,ACCESS_MODE);
  readHeader();
  VPFColumn column=null;
  String geometryName=null;
  Iterator<VPFColumn> iter=columns.iterator();
  while (iter.hasNext()) {
    column=(VPFColumn)iter.next();
    if (column.isGeometry()) {
      geometryName=column.getName();
      break;
    }
  }
  SimpleFeatureType superType=null;
  if (pathName.endsWith(TEXT_PRIMITIVE)) {
    superType=AnnotationFeatureType.ANNOTATION;
  }
  SimpleFeatureTypeBuilder b=new SimpleFeatureTypeBuilder();
  b.setName(cPathName);
  b.setDescription(Text.text(description));
  b.setNamespaceURI("VPF");
  b.setSuperType(superType);
  if (columns != null) {
    for (    VPFColumn ad : columns) {
      b.add(ad.getDescriptor());
    }
  }
  b.setDefaultGeometry(geometryName);
  featureType=b.buildFeatureType();
  featureType.getUserData().put(VPFFile.class,this);
}
