{
  pathName=cPathName;
  inputStream=new RandomAccessFile(cPathName,ACCESS_MODE);
  readHeader();
  GeometryDescriptor gat=null;
  VPFColumn geometryColumn=null;
  Iterator<VPFColumn> iter=columns.iterator();
  while (iter.hasNext()) {
    geometryColumn=(VPFColumn)iter.next();
    if (geometryColumn.isGeometry()) {
      gat=geometryColumn.getGeometryAttributeType();
      break;
    }
  }
  SimpleFeatureType superType=null;
  if (pathName.endsWith(TEXT_PRIMITIVE)) {
    superType=AnnotationFeatureType.ANNOTATION;
  }
  SimpleFeatureTypeBuilder b=new SimpleFeatureTypeBuilder();
  b.setName(cPathName);
  b.setDescription(Text.text(description));
  b.setNamespaceURI("VPF");
  b.setSuperType(superType);
  if (columns != null) {
    for (    VPFColumn ad : columns) {
      b.add((AttributeDescriptor)ad);
    }
  }
  b.setDefaultGeometry(gat.getLocalName());
  featureType=b.buildFeatureType();
}
