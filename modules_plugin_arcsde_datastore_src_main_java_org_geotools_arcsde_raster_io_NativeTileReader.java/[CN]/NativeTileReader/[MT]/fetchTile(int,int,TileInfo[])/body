{
  SeRasterTile[] seTile=null;
  if (isConsecutive(tileX,tileY)) {
    while (lastTileX != tileX || lastTileY != tileY) {
      seTile=nextTile();
    }
  }
 else {
    if (nonConsecutiveCallCount == RANDOM_THRESHOLD) {
      nonConsecutiveCallCount=0;
      if (LOGGER.isLoggable(Level.FINEST)) {
        LOGGER.info("Number of random (non consecutive) tile request exceeded" + " predefined threshold. Rewind by executing original request again");
      }
      dispose();
      fetchTile(tileX,tileY,target);
      return;
    }
 else {
      nonConsecutiveCallCount++;
      seTile=fetchSingleTile(tileX,tileY);
    }
  }
  if (lastTileX == getMaxTileX() && lastTileY == getMaxTileY()) {
    dispose();
  }
  extractTile(seTile,target);
}
