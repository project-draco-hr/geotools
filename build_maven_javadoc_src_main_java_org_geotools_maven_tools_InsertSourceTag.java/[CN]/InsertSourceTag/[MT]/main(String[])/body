{
  if (args.length == 0) {
    System.out.println("usage: InsertSourceTag {options} fileOrDirName");
    System.out.println("options:");
    System.out.println("   " + REPLACE_OPTION + ": Replaces existing source tags (default no replacement)");
    System.out.println("   " + SVN_OPTION + ": Add the svn URL keyword (omitted by default)");
    System.out.println("   " + ANY_CLASS_OPTION + ": Process any class (default is only public classes)");
    return;
  }
  File inputPath=null;
  InsertSourceTag me=new InsertSourceTag();
  for (  String s : args) {
    s=s.trim();
    if (s.startsWith("--")) {
      if (REPLACE_OPTION.equals(s)) {
        me.optionReplace=true;
      }
 else       if (SVN_OPTION.equals(s)) {
        me.optionSVNDelims=true;
      }
 else       if (ANY_CLASS_OPTION.equals(s)) {
        me.optionAnyClass=true;
      }
 else       if (FIX_BROKEN_TAGS.equals(s)) {
        me.optionFixBreaks=true;
      }
 else {
        System.out.println("Unrecognized option: " + s);
        return;
      }
    }
 else {
      if (inputPath == null) {
        inputPath=new File(s);
        if (!inputPath.exists()) {
          System.out.println("Can't find " + inputPath);
          return;
        }
      }
 else {
        System.out.println("Two input paths ?");
        System.out.println("   " + inputPath);
        System.out.println("   " + s);
        return;
      }
    }
  }
  me.process(inputPath);
}
