{
  SimpleFeatureType schema=getFeatureType();
  List<Object> relaxedAttrs=Arrays.asList(new Object[schema.getAttributeCount()]);
  boolean inValid=false;
  for (int i=0; i < newAtts.size(); i++) {
    Object object=newAtts.get(i);
    boolean found=false;
    if (object == null)     continue;
    Class realClass=object.getClass();
    for (int j=0; j < schema.getAttributeCount(); j++) {
      AttributeDescriptor att=schema.getDescriptor(j);
      Class requiredClass=att.getType().getBinding();
      if (relaxedAttrs.get(j) == null && requiredClass.isAssignableFrom(realClass)) {
        relaxedAttrs.set(j,object);
        found=true;
        break;
      }
    }
    if (!found) {
      inValid=true;
    }
  }
  newAtts=relaxedAttrs;
  if (inValid) {
    StringBuffer buf=new StringBuffer();
    buf.append("WFSFeatureType#setAttributes(Object[]):");
    buf.append("\nAttributes were not correct for the feature Type:");
    buf.append(schema.getTypeName());
    buf.append(".  Made best guess:\n Recieved: ");
    for (int i=0; i < newAtts.size(); i++) {
      Object object=newAtts.get(i);
      buf.append(object == null ? "null" : object.toString());
      buf.append(",");
    }
    buf.append("\nBest Guess: \n");
    for (int i=0; i < relaxedAttrs.size(); i++) {
      Object object=relaxedAttrs.get(i);
      buf.append(object == null ? "null" : object.toString());
      buf.append(",");
    }
    LOGGER.warning(buf.toString());
  }
  return relaxedAttrs;
}
