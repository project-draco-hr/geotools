{
  if (isDisposed) {
    return failure(this,eNsURI,"Is disposed");
  }
  invalidate(false);
  if (!isCached(eContextID)) {
    return failure(this,eNsURI,"EFeatureContext with ID: " + eContextID + " not found");
  }
  EFeatureContext eContext=eContext(false);
  EPackage ePackage=eContext.eGetPackage(eNsURI);
  if (!this.eNsURI.equals(ePackage.getNsURI())) {
    return failure(this,eNsURI,"Package mismatch: namespace (" + ePackage + ")");
  }
  EFeatureStatus s;
  for (  String eName : eGetFolderNames(null)) {
    EFeatureFolderInfo eInfo=eFolderInfoMap.get(eName);
    if (eInfo != null) {
      if (!(s=eInfo.validate(ePackage)).isSuccess()) {
        return s;
      }
    }
 else {
      return failure(this,eNsURI,"Package mismatch: Folder " + eName + " not found");
    }
  }
  return structureIsValid(eNsURI());
}
