{
  final double cosphi=cos(y);
  final double coslam=cos(x);
  final double sinphi=sin(y);
  if (sinphi0 * sinphi + cosphi0 * cosphi * coslam < -EPSILON) {
    throw new ProjectionException(ErrorKeys.POINT_OUTSIDE_HEMISPHERE);
  }
  y=cosphi0 * sinphi - sinphi0 * cosphi * coslam;
  x=cosphi * sin(x);
  if (ptDst != null) {
    ptDst.setLocation(x,y);
    return ptDst;
  }
  return new Point2D.Double(x,y);
}
