{
  Point2D pts[]=new Point2D[n()];
  pts=this.getPoints();
  Point2D p0=new Point2D.Double();
  Point2D p1=new Point2D.Double();
  Point2D p2=new Point2D.Double();
  p0=pts[0];
  p1=pts[1];
  p2=pts[2];
  Point2D pm=new Point2D.Double(((0.5 * p1.getX()) + (0.5 * p0.getX())),((0.5 * p1.getY()) + (0.5 * p0.getY())));
  double c=Math.sqrt((pm.getX() * pm.getX()) - (2 * (pm.getX() * p2.getX())) + (p2.getX() * p2.getX()) + (pm.getY() * pm.getY()) - (2 * (pm.getY() * p2.getY())) + (p2.getY() * p2.getY()));
  double l=2 * Math.sqrt((pm.getX() * pm.getX()) - (2 * (pm.getX() * p0.getX())) + (p0.getX() * p0.getX()) + (pm.getY() * pm.getY()) - (2 * (pm.getY() * p0.getY())) + (p0.getY() * p0.getY()));
  Point2D p0_1=AlgoPoint2D.subtract(p0,pm);
  Point2D p1_1=AlgoPoint2D.subtract(p1,pm);
  Point2D p2_1=AlgoPoint2D.subtract(p2,pm);
  Point2D p0_2=new Point2D.Double((-0.5 * l),0);
  Point2D p1_2=new Point2D.Double((0.5 * l),0);
  double angle=Math.acos(((p0_1.getX() * p0_2.getX()) / (Math.sqrt(Math.pow(p0_1.getX(),2) + Math.pow(p0_1.getY(),2)) * Math.sqrt((p0_2.getX() * p0_2.getX())))));
  if (p1_1.getY() > 0) {
    angle=((2 * Math.PI) - angle);
  }
  Point2D p2_2=new Point2D.Double((Math.cos(angle) * (p2.getX() - pm.getX())) - (Math.sin(angle) * (p2.getY() - pm.getY())),(Math.sin(angle) * (p2.getX() - pm.getX())) + (Math.cos(angle) * (p2.getY() - pm.getY())));
  double b=(1 / (2 * p2_2.getY())) * ((c * c) - ((l * l) / 4));
  return ((Math.sqrt((4 * (b * b)) + (l * l))) / 2);
}
