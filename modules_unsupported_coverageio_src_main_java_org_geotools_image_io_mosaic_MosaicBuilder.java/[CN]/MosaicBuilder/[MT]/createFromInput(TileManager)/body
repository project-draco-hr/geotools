{
  tileReaderSpi=getTileReaderSpi();
  if (tileReaderSpi == null) {
    throw new IllegalStateException(Errors.format(ErrorKeys.NO_IMAGE_READER));
  }
  untiledBounds=getUntiledImageBounds();
  if (untiledBounds == null) {
    throw new IllegalStateException(Errors.format(ErrorKeys.UNSPECIFIED_IMAGE_SIZE));
  }
  tileSize=getTileSize();
  if (tileSize == null) {
    tileSize=ImageUtilities.toTileSize(untiledBounds.getSize());
  }
  formatter.initialize(tileReaderSpi);
  final TileManager output;
  boolean constantArea=false;
switch (layout) {
case CONSTANT_GEOGRAPHIC_AREA:
{
      constantArea=true;
    }
case CONSTANT_TILE_SIZE:
{
    output=createFromInput(constantArea,canUsePattern(),input);
    break;
  }
default :
{
  throw new IllegalStateException(layout.toString());
}
}
if (mosaicEnvelope != null && !mosaicEnvelope.isNull()) {
final GridToEnvelopeMapper mapper=createGridToEnvelopeMapper(output);
mapper.setGridRange(new GridEnvelope2D(untiledBounds));
mapper.setEnvelope(mosaicEnvelope);
output.setGridToCRS((AffineTransform)mapper.createTransform());
}
return output;
}
