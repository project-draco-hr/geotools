{
  final Class type=ad.getType().getBinding();
  final Object def;
  final String name=ad.getLocalName();
  if (Boolean.class.equals(type)) {
    def=ogr.CreateStringField(name);
    ogr.FieldSetWidth(def,5);
  }
 else   if (Byte.class.equals(type)) {
    def=ogr.CreateIntegerField(name);
    ogr.FieldSetWidth(def,3);
    ogr.FieldSetJustifyRight(def);
  }
 else   if (Short.class.equals(type)) {
    def=ogr.CreateIntegerField(name);
    ogr.FieldSetWidth(def,5);
    ogr.FieldSetJustifyRight(def);
  }
 else   if (Integer.class.equals(type)) {
    def=ogr.CreateIntegerField(name);
    ogr.FieldSetWidth(def,9);
    ogr.FieldSetJustifyRight(def);
  }
 else   if (Long.class.equals(type)) {
    def=ogr.CreateIntegerField(name);
    ogr.FieldSetWidth(def,19);
    ogr.FieldSetJustifyRight(def);
  }
 else   if (BigInteger.class.equals(type)) {
    def=ogr.CreateIntegerField(name);
    ogr.FieldSetWidth(def,32);
    ogr.FieldSetJustifyRight(def);
  }
 else   if (BigDecimal.class.equals(type)) {
    def=ogr.CreateRealField(name);
    ogr.FieldSetWidth(def,32);
    ogr.FieldSetPrecision(def,15);
    ogr.FieldSetJustifyRight(def);
  }
 else   if (Float.class.equals(type)) {
    def=ogr.CreateRealField(name);
    ogr.FieldSetWidth(def,12);
    ogr.FieldSetPrecision(def,7);
    ogr.FieldSetJustifyRight(def);
  }
 else   if (Double.class.equals(type) || Number.class.isAssignableFrom(type)) {
    def=ogr.CreateRealField(name);
    ogr.FieldSetWidth(def,22);
    ogr.FieldSetPrecision(def,16);
    ogr.FieldSetJustifyRight(def);
  }
 else   if (String.class.equals(type)) {
    def=ogr.CreateStringField(name);
    int length=FeatureTypes.getFieldLength(ad);
    if (length <= 0) {
      length=255;
    }
    ogr.FieldSetWidth(def,length);
  }
 else   if (byte[].class.equals(type)) {
    def=ogr.CreateBinaryField(name);
  }
 else   if (java.sql.Date.class.isAssignableFrom(type)) {
    def=ogr.CreateDateField(name);
  }
 else   if (java.sql.Time.class.isAssignableFrom(type)) {
    def=ogr.CreateTimeField(name);
  }
 else   if (java.util.Date.class.isAssignableFrom(type)) {
    def=ogr.CreateDateTimeField(name);
  }
 else {
    throw new IOException("Cannot map " + type + " to an OGR type");
  }
  return def;
}
