{
  Object definition=null;
  try {
    SimpleFeatureTypeBuilder tb=new SimpleFeatureTypeBuilder();
    tb.setName(typeName);
    tb.setNamespaceURI(namespaceURI);
    if (tb.getNamespaceURI() == null) {
      tb.setNamespaceURI(BasicFeatureTypes.DEFAULT_NAMESPACE);
    }
    definition=ogr.LayerGetLayerDefn(layer);
    Class<? extends Geometry> geometryBinding=getGeometryBinding(definition);
    if (geometryBinding != null) {
      CoordinateReferenceSystem crs=getCRS(layer);
      tb.add("the_geom",geometryBinding,crs);
    }
    final int count=ogr.LayerGetFieldCount(definition);
    for (int i=0; i < count; i++) {
      Object field=ogr.LayerGetFieldDefn(definition,i);
      String name=ogr.FieldGetName(field);
      Class binding=getBinding(field);
      int width=ogr.FieldGetWidth(field);
      if (width > 0) {
        tb.length(width);
      }
      tb.add(name,binding);
    }
    if ((geometryBinding == Point.class) || (geometryBinding == MultiPoint.class)) {
      tb.setSuperType(BasicFeatureTypes.POINT);
    }
 else     if ((geometryBinding == Polygon.class) || (geometryBinding == MultiPolygon.class)) {
      tb.setSuperType(BasicFeatureTypes.POLYGON);
    }
 else     if ((geometryBinding == LineString.class) || (geometryBinding == MultiLineString.class)) {
      tb.setSuperType(BasicFeatureTypes.LINE);
    }
    return tb.buildFeatureType();
  }
  finally {
    ogr.LayerReleaseLayerDefn(definition);
  }
}
