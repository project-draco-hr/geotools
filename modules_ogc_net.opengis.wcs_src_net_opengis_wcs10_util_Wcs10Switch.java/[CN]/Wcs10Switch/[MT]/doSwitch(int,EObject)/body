{
switch (classifierID) {
case Wcs10Package.ABSTRACT_DESCRIPTION_BASE_TYPE:
{
      AbstractDescriptionBaseType abstractDescriptionBaseType=(AbstractDescriptionBaseType)theEObject;
      Object result=caseAbstractDescriptionBaseType(abstractDescriptionBaseType);
      if (result == null)       result=caseAbstractGMLType(abstractDescriptionBaseType);
      if (result == null)       result=defaultCase(theEObject);
      return result;
    }
case Wcs10Package.ABSTRACT_DESCRIPTION_TYPE:
{
    AbstractDescriptionType abstractDescriptionType=(AbstractDescriptionType)theEObject;
    Object result=caseAbstractDescriptionType(abstractDescriptionType);
    if (result == null)     result=caseAbstractDescriptionBaseType(abstractDescriptionType);
    if (result == null)     result=caseAbstractGMLType(abstractDescriptionType);
    if (result == null)     result=defaultCase(theEObject);
    return result;
  }
case Wcs10Package.ADDRESS_TYPE:
{
  AddressType addressType=(AddressType)theEObject;
  Object result=caseAddressType(addressType);
  if (result == null)   result=defaultCase(theEObject);
  return result;
}
case Wcs10Package.AXIS_DESCRIPTION_TYPE:
{
AxisDescriptionType axisDescriptionType=(AxisDescriptionType)theEObject;
Object result=caseAxisDescriptionType(axisDescriptionType);
if (result == null) result=caseAbstractDescriptionType(axisDescriptionType);
if (result == null) result=caseAbstractDescriptionBaseType(axisDescriptionType);
if (result == null) result=caseAbstractGMLType(axisDescriptionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.AXIS_DESCRIPTION_TYPE1:
{
AxisDescriptionType1 axisDescriptionType1=(AxisDescriptionType1)theEObject;
Object result=caseAxisDescriptionType1(axisDescriptionType1);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.AXIS_SUBSET_TYPE:
{
AxisSubsetType axisSubsetType=(AxisSubsetType)theEObject;
Object result=caseAxisSubsetType(axisSubsetType);
if (result == null) result=caseValueEnumBaseType(axisSubsetType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.CONTACT_TYPE:
{
ContactType contactType=(ContactType)theEObject;
Object result=caseContactType(contactType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.CONTENT_METADATA_TYPE:
{
ContentMetadataType contentMetadataType=(ContentMetadataType)theEObject;
Object result=caseContentMetadataType(contentMetadataType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.COVERAGE_DESCRIPTION_TYPE:
{
CoverageDescriptionType coverageDescriptionType=(CoverageDescriptionType)theEObject;
Object result=caseCoverageDescriptionType(coverageDescriptionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.COVERAGE_OFFERING_BRIEF_TYPE:
{
CoverageOfferingBriefType coverageOfferingBriefType=(CoverageOfferingBriefType)theEObject;
Object result=caseCoverageOfferingBriefType(coverageOfferingBriefType);
if (result == null) result=caseAbstractDescriptionType(coverageOfferingBriefType);
if (result == null) result=caseAbstractDescriptionBaseType(coverageOfferingBriefType);
if (result == null) result=caseAbstractGMLType(coverageOfferingBriefType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.COVERAGE_OFFERING_TYPE:
{
CoverageOfferingType coverageOfferingType=(CoverageOfferingType)theEObject;
Object result=caseCoverageOfferingType(coverageOfferingType);
if (result == null) result=caseCoverageOfferingBriefType(coverageOfferingType);
if (result == null) result=caseAbstractDescriptionType(coverageOfferingType);
if (result == null) result=caseAbstractDescriptionBaseType(coverageOfferingType);
if (result == null) result=caseAbstractGMLType(coverageOfferingType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.DCP_TYPE_TYPE:
{
DCPTypeType dcpTypeType=(DCPTypeType)theEObject;
Object result=caseDCPTypeType(dcpTypeType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.DESCRIBE_COVERAGE_TYPE:
{
DescribeCoverageType describeCoverageType=(DescribeCoverageType)theEObject;
Object result=caseDescribeCoverageType(describeCoverageType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.DESCRIBE_COVERAGE_TYPE1:
{
DescribeCoverageType1 describeCoverageType1=(DescribeCoverageType1)theEObject;
Object result=caseDescribeCoverageType1(describeCoverageType1);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.DOCUMENT_ROOT:
{
DocumentRoot documentRoot=(DocumentRoot)theEObject;
Object result=caseDocumentRoot(documentRoot);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.DOMAIN_SET_TYPE:
{
DomainSetType domainSetType=(DomainSetType)theEObject;
Object result=caseDomainSetType(domainSetType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.DOMAIN_SUBSET_TYPE:
{
DomainSubsetType domainSubsetType=(DomainSubsetType)theEObject;
Object result=caseDomainSubsetType(domainSubsetType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.EXCEPTION_TYPE:
{
ExceptionType exceptionType=(ExceptionType)theEObject;
Object result=caseExceptionType(exceptionType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.GET_CAPABILITIES_TYPE:
{
GetCapabilitiesType getCapabilitiesType=(GetCapabilitiesType)theEObject;
Object result=caseGetCapabilitiesType(getCapabilitiesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.GET_CAPABILITIES_TYPE1:
{
GetCapabilitiesType1 getCapabilitiesType1=(GetCapabilitiesType1)theEObject;
Object result=caseGetCapabilitiesType1(getCapabilitiesType1);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.GET_COVERAGE_TYPE:
{
GetCoverageType getCoverageType=(GetCoverageType)theEObject;
Object result=caseGetCoverageType(getCoverageType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.GET_COVERAGE_TYPE1:
{
GetCoverageType1 getCoverageType1=(GetCoverageType1)theEObject;
Object result=caseGetCoverageType1(getCoverageType1);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.GET_TYPE:
{
GetType getType=(GetType)theEObject;
Object result=caseGetType(getType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.HTTP_TYPE:
{
HTTPType httpType=(HTTPType)theEObject;
Object result=caseHTTPType(httpType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.INTERVAL_TYPE:
{
IntervalType intervalType=(IntervalType)theEObject;
Object result=caseIntervalType(intervalType);
if (result == null) result=caseValueRangeType(intervalType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.KEYWORDS_TYPE:
{
KeywordsType keywordsType=(KeywordsType)theEObject;
Object result=caseKeywordsType(keywordsType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.LON_LAT_ENVELOPE_BASE_TYPE:
{
LonLatEnvelopeBaseType lonLatEnvelopeBaseType=(LonLatEnvelopeBaseType)theEObject;
Object result=caseLonLatEnvelopeBaseType(lonLatEnvelopeBaseType);
if (result == null) result=caseEnvelopeType(lonLatEnvelopeBaseType);
if (result == null) result=caseAbstractGeometryType(lonLatEnvelopeBaseType);
if (result == null) result=caseAbstractGeometryBaseType(lonLatEnvelopeBaseType);
if (result == null) result=caseAbstractGMLType(lonLatEnvelopeBaseType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.LON_LAT_ENVELOPE_TYPE:
{
LonLatEnvelopeType lonLatEnvelopeType=(LonLatEnvelopeType)theEObject;
Object result=caseLonLatEnvelopeType(lonLatEnvelopeType);
if (result == null) result=caseLonLatEnvelopeBaseType(lonLatEnvelopeType);
if (result == null) result=caseEnvelopeType(lonLatEnvelopeType);
if (result == null) result=caseAbstractGeometryType(lonLatEnvelopeType);
if (result == null) result=caseAbstractGeometryBaseType(lonLatEnvelopeType);
if (result == null) result=caseAbstractGMLType(lonLatEnvelopeType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.METADATA_ASSOCIATION_TYPE:
{
MetadataAssociationType metadataAssociationType=(MetadataAssociationType)theEObject;
Object result=caseMetadataAssociationType(metadataAssociationType);
if (result == null) result=caseMetaDataPropertyType(metadataAssociationType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.METADATA_LINK_TYPE:
{
MetadataLinkType metadataLinkType=(MetadataLinkType)theEObject;
Object result=caseMetadataLinkType(metadataLinkType);
if (result == null) result=caseMetadataAssociationType(metadataLinkType);
if (result == null) result=caseMetaDataPropertyType(metadataLinkType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.ONLINE_RESOURCE_TYPE:
{
OnlineResourceType onlineResourceType=(OnlineResourceType)theEObject;
Object result=caseOnlineResourceType(onlineResourceType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.OUTPUT_TYPE:
{
OutputType outputType=(OutputType)theEObject;
Object result=caseOutputType(outputType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.POST_TYPE:
{
PostType postType=(PostType)theEObject;
Object result=casePostType(postType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.RANGE_SET_TYPE:
{
RangeSetType rangeSetType=(RangeSetType)theEObject;
Object result=caseRangeSetType(rangeSetType);
if (result == null) result=caseAbstractDescriptionType(rangeSetType);
if (result == null) result=caseAbstractDescriptionBaseType(rangeSetType);
if (result == null) result=caseAbstractGMLType(rangeSetType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.RANGE_SET_TYPE1:
{
RangeSetType1 rangeSetType1=(RangeSetType1)theEObject;
Object result=caseRangeSetType1(rangeSetType1);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.RANGE_SUBSET_TYPE:
{
RangeSubsetType rangeSubsetType=(RangeSubsetType)theEObject;
Object result=caseRangeSubsetType(rangeSubsetType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.REQUEST_TYPE:
{
RequestType requestType=(RequestType)theEObject;
Object result=caseRequestType(requestType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.RESPONSIBLE_PARTY_TYPE:
{
ResponsiblePartyType responsiblePartyType=(ResponsiblePartyType)theEObject;
Object result=caseResponsiblePartyType(responsiblePartyType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.SERVICE_TYPE:
{
ServiceType serviceType=(ServiceType)theEObject;
Object result=caseServiceType(serviceType);
if (result == null) result=caseAbstractDescriptionType(serviceType);
if (result == null) result=caseAbstractDescriptionBaseType(serviceType);
if (result == null) result=caseAbstractGMLType(serviceType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.SPATIAL_DOMAIN_TYPE:
{
SpatialDomainType spatialDomainType=(SpatialDomainType)theEObject;
Object result=caseSpatialDomainType(spatialDomainType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.SPATIAL_SUBSET_TYPE:
{
SpatialSubsetType spatialSubsetType=(SpatialSubsetType)theEObject;
Object result=caseSpatialSubsetType(spatialSubsetType);
if (result == null) result=caseSpatialDomainType(spatialSubsetType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.SUPPORTED_CR_SS_TYPE:
{
SupportedCRSsType supportedCRSsType=(SupportedCRSsType)theEObject;
Object result=caseSupportedCRSsType(supportedCRSsType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.SUPPORTED_FORMATS_TYPE:
{
SupportedFormatsType supportedFormatsType=(SupportedFormatsType)theEObject;
Object result=caseSupportedFormatsType(supportedFormatsType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.SUPPORTED_INTERPOLATIONS_TYPE:
{
SupportedInterpolationsType supportedInterpolationsType=(SupportedInterpolationsType)theEObject;
Object result=caseSupportedInterpolationsType(supportedInterpolationsType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.TELEPHONE_TYPE:
{
TelephoneType telephoneType=(TelephoneType)theEObject;
Object result=caseTelephoneType(telephoneType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.TIME_PERIOD_TYPE:
{
TimePeriodType timePeriodType=(TimePeriodType)theEObject;
Object result=caseTimePeriodType(timePeriodType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.TIME_SEQUENCE_TYPE:
{
TimeSequenceType timeSequenceType=(TimeSequenceType)theEObject;
Object result=caseTimeSequenceType(timeSequenceType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.TYPED_LITERAL_TYPE:
{
TypedLiteralType typedLiteralType=(TypedLiteralType)theEObject;
Object result=caseTypedLiteralType(typedLiteralType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.VALUE_ENUM_BASE_TYPE:
{
ValueEnumBaseType valueEnumBaseType=(ValueEnumBaseType)theEObject;
Object result=caseValueEnumBaseType(valueEnumBaseType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.VALUE_ENUM_TYPE:
{
ValueEnumType valueEnumType=(ValueEnumType)theEObject;
Object result=caseValueEnumType(valueEnumType);
if (result == null) result=caseValueEnumBaseType(valueEnumType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.VALUE_RANGE_TYPE:
{
ValueRangeType valueRangeType=(ValueRangeType)theEObject;
Object result=caseValueRangeType(valueRangeType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.VALUES_TYPE:
{
ValuesType valuesType=(ValuesType)theEObject;
Object result=caseValuesType(valuesType);
if (result == null) result=caseValueEnumType(valuesType);
if (result == null) result=caseValueEnumBaseType(valuesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.VENDOR_SPECIFIC_CAPABILITIES_TYPE:
{
VendorSpecificCapabilitiesType vendorSpecificCapabilitiesType=(VendorSpecificCapabilitiesType)theEObject;
Object result=caseVendorSpecificCapabilitiesType(vendorSpecificCapabilitiesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.WCS_CAPABILITIES_TYPE:
{
WCSCapabilitiesType wcsCapabilitiesType=(WCSCapabilitiesType)theEObject;
Object result=caseWCSCapabilitiesType(wcsCapabilitiesType);
if (result == null) result=defaultCase(theEObject);
return result;
}
case Wcs10Package.WCS_CAPABILITY_TYPE:
{
WCSCapabilityType wcsCapabilityType=(WCSCapabilityType)theEObject;
Object result=caseWCSCapabilityType(wcsCapabilityType);
if (result == null) result=defaultCase(theEObject);
return result;
}
default :
return defaultCase(theEObject);
}
}
