{
  final Coordinate base=new Coordinate(0d,0d);
  final int n=100;
  for (int i=1; i <= n; i++) {
    Edge e=(Edge)generator().add(new LineSegment(new Coordinate(base.x + (i - 1),base.y + (i - 1)),new Coordinate(base.x + i,base.y + i)));
    e.setID(i - 1);
    e.getNodeA().setID(i - 1);
    e.getNodeB().setID(i);
  }
  Graph built=generator().getGraph();
  assertTrue(built.getEdges().size() == n);
  assertTrue(built.getNodes().size() == n + 1);
  GraphVisitor visitor=new GraphVisitor(){
    public int visit(    Graphable component){
      Node node=(Node)component;
      Coordinate c=(Coordinate)node.getObject();
      if (node.getDegree() == 1) {
        assertTrue(node.getID() == 0 || node.getID() == n);
      }
 else {
        assertTrue(node.getDegree() == 2);
      }
      assertTrue(c.x == base.x + node.getID() && c.y == base.y + node.getID());
      return (0);
    }
  }
;
  built.visitNodes(visitor);
  visitor=new GraphVisitor(){
    public int visit(    Graphable component){
      Edge edge=(Edge)component;
      LineSegment line=(LineSegment)edge.getObject();
      assertTrue(line.p1.x == line.p0.x + 1 && line.p1.y == line.p0.y + 1);
      return (0);
    }
  }
;
  built.visitEdges(visitor);
}
