{
  String source="http:///org/eclipse/emf/ecore/util/ExtendedMetaData";
  addAnnotation(actionTypeEClass,source,new String[]{"name","ActionType","kind","elementOnly"});
  addAnnotation(getActionType_Message(),source,new String[]{"kind","element","name","Message","namespace","##targetNamespace"});
  addAnnotation(getActionType_Code(),source,new String[]{"kind","attribute","name","code"});
  addAnnotation(getActionType_Locator(),source,new String[]{"kind","attribute","name","locator"});
  addAnnotation(baseRequestTypeEClass,source,new String[]{"name","BaseRequestType","kind","empty"});
  addAnnotation(getBaseRequestType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(getBaseRequestType_Service(),source,new String[]{"kind","attribute","name","service"});
  addAnnotation(getBaseRequestType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(deleteElementTypeEClass,source,new String[]{"name","DeleteElementType","kind","elementOnly"});
  addAnnotation(getDeleteElementType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(describeFeatureTypeTypeEClass,source,new String[]{"name","DescribeFeatureTypeType","kind","elementOnly"});
  addAnnotation(getDescribeFeatureTypeType_OutputFormat(),source,new String[]{"kind","attribute","name","outputFormat"});
  addAnnotation(documentRootEClass,source,new String[]{"name","","kind","mixed"});
  addAnnotation(getDocumentRoot_Mixed(),source,new String[]{"kind","elementWildcard","name",":mixed"});
  addAnnotation(getDocumentRoot_XMLNSPrefixMap(),source,new String[]{"kind","attribute","name","xmlns:prefix"});
  addAnnotation(getDocumentRoot_XSISchemaLocation(),source,new String[]{"kind","attribute","name","xsi:schemaLocation"});
  addAnnotation(getDocumentRoot_Delete(),source,new String[]{"kind","element","name","Delete","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_DescribeFeatureType(),source,new String[]{"kind","element","name","DescribeFeatureType","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_FeatureCollection(),source,new String[]{"kind","element","name","FeatureCollection","namespace","##targetNamespace","affiliation","http://www.opengis.net/gml#_FeatureCollection"});
  addAnnotation(getDocumentRoot_FeatureTypeList(),source,new String[]{"kind","element","name","FeatureTypeList","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_GetCapabilities(),source,new String[]{"kind","element","name","GetCapabilities","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_GetFeature(),source,new String[]{"kind","element","name","GetFeature","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_GetFeatureWithLock(),source,new String[]{"kind","element","name","GetFeatureWithLock","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_GetGmlObject(),source,new String[]{"kind","element","name","GetGmlObject","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Insert(),source,new String[]{"kind","element","name","Insert","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_LockFeature(),source,new String[]{"kind","element","name","LockFeature","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_LockFeatureResponse(),source,new String[]{"kind","element","name","LockFeatureResponse","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_LockId(),source,new String[]{"kind","element","name","LockId","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Native(),source,new String[]{"kind","element","name","Native","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Property(),source,new String[]{"kind","element","name","Property","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_PropertyName(),source,new String[]{"kind","element","name","PropertyName","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Query(),source,new String[]{"kind","element","name","Query","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_ServesGMLObjectTypeList(),source,new String[]{"kind","element","name","ServesGMLObjectTypeList","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_SupportsGMLObjectTypeList(),source,new String[]{"kind","element","name","SupportsGMLObjectTypeList","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Transaction(),source,new String[]{"kind","element","name","Transaction","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_TransactionResponse(),source,new String[]{"kind","element","name","TransactionResponse","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_Update(),source,new String[]{"kind","element","name","Update","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_WfsCapabilities(),source,new String[]{"kind","element","name","WFS_Capabilities","namespace","##targetNamespace"});
  addAnnotation(getDocumentRoot_XlinkPropertyName(),source,new String[]{"kind","element","name","XlinkPropertyName","namespace","##targetNamespace"});
  addAnnotation(featureCollectionTypeEClass,source,new String[]{"name","FeatureCollectionType","kind","empty"});
  addAnnotation(featureTypeListTypeEClass,source,new String[]{"name","FeatureTypeListType","kind","elementOnly"});
  addAnnotation(getFeatureTypeListType_Operations(),source,new String[]{"kind","element","name","Operations","namespace","##targetNamespace"});
  addAnnotation(getFeatureTypeListType_FeatureType(),source,new String[]{"kind","element","name","FeatureType","namespace","##targetNamespace"});
  addAnnotation(featureTypeTypeEClass,source,new String[]{"name","FeatureTypeType","kind","elementOnly"});
  addAnnotation(getFeatureTypeType_Title(),source,new String[]{"kind","element","name","Title","namespace","##targetNamespace"});
  addAnnotation(getFeatureTypeType_Abstract(),source,new String[]{"kind","element","name","Abstract","namespace","##targetNamespace"});
  addAnnotation(getFeatureTypeType_Keywords(),source,new String[]{"kind","element","name","Keywords","namespace","http://www.opengis.net/ows"});
  addAnnotation(getFeatureTypeType_DefaultSRS(),source,new String[]{"kind","element","name","DefaultSRS","namespace","##targetNamespace"});
  addAnnotation(getFeatureTypeType_OtherSRS(),source,new String[]{"kind","element","name","OtherSRS","namespace","##targetNamespace"});
  addAnnotation(getFeatureTypeType_NoSRS(),source,new String[]{"kind","element","name","NoSRS","namespace","##targetNamespace"});
  addAnnotation(getFeatureTypeType_Operations(),source,new String[]{"kind","element","name","Operations","namespace","##targetNamespace"});
  addAnnotation(getFeatureTypeType_OutputFormats(),source,new String[]{"kind","element","name","OutputFormats","namespace","##targetNamespace"});
  addAnnotation(getFeatureTypeType_WGS84BoundingBox(),source,new String[]{"kind","element","name","WGS84BoundingBox","namespace","http://www.opengis.net/ows"});
  addAnnotation(getFeatureTypeType_MetadataURL(),source,new String[]{"kind","element","name","MetadataURL","namespace","##targetNamespace"});
  addAnnotation(featuresLockedTypeEClass,source,new String[]{"name","FeaturesLockedType","kind","elementOnly"});
  addAnnotation(getFeaturesLockedType_Group(),source,new String[]{"kind","group","name","group:0"});
  addAnnotation(featuresNotLockedTypeEClass,source,new String[]{"name","FeaturesNotLockedType","kind","elementOnly"});
  addAnnotation(getFeaturesNotLockedType_Group(),source,new String[]{"kind","group","name","group:0"});
  addAnnotation(gmlObjectTypeListTypeEClass,source,new String[]{"name","GMLObjectTypeListType","kind","elementOnly"});
  addAnnotation(getGMLObjectTypeListType_GMLObjectType(),source,new String[]{"kind","element","name","GMLObjectType","namespace","##targetNamespace"});
  addAnnotation(gmlObjectTypeTypeEClass,source,new String[]{"name","GMLObjectTypeType","kind","elementOnly"});
  addAnnotation(getGMLObjectTypeType_Title(),source,new String[]{"kind","element","name","Title","namespace","##targetNamespace"});
  addAnnotation(getGMLObjectTypeType_Abstract(),source,new String[]{"kind","element","name","Abstract","namespace","##targetNamespace"});
  addAnnotation(getGMLObjectTypeType_Keywords(),source,new String[]{"kind","element","name","Keywords","namespace","http://www.opengis.net/ows"});
  addAnnotation(getGMLObjectTypeType_OutputFormats(),source,new String[]{"kind","element","name","OutputFormats","namespace","##targetNamespace"});
  addAnnotation(getCapabilitiesTypeEClass,source,new String[]{"name","GetCapabilitiesType","kind","elementOnly"});
  addAnnotation(getGetCapabilitiesType_Service(),source,new String[]{"kind","attribute","name","service"});
  addAnnotation(getFeatureTypeEClass,source,new String[]{"name","GetFeatureType","kind","elementOnly"});
  addAnnotation(getGetFeatureType_Query(),source,new String[]{"kind","element","name","Query","namespace","##targetNamespace"});
  addAnnotation(getGetFeatureType_MaxFeatures(),source,new String[]{"kind","attribute","name","maxFeatures"});
  addAnnotation(getGetFeatureType_OutputFormat(),source,new String[]{"kind","attribute","name","outputFormat"});
  addAnnotation(getGetFeatureType_ResultType(),source,new String[]{"kind","attribute","name","resultType"});
  addAnnotation(getGetFeatureType_TraverseXlinkDepth(),source,new String[]{"kind","attribute","name","traverseXlinkDepth"});
  addAnnotation(getGetFeatureType_TraverseXlinkExpiry(),source,new String[]{"kind","attribute","name","traverseXlinkExpiry"});
  addAnnotation(getFeatureWithLockTypeEClass,source,new String[]{"name","GetFeatureWithLockType","kind","elementOnly"});
  addAnnotation(getGetFeatureWithLockType_Expiry(),source,new String[]{"kind","attribute","name","expiry"});
  addAnnotation(getGmlObjectTypeEClass,source,new String[]{"name","GetGmlObjectType","kind","elementOnly"});
  addAnnotation(getGetGmlObjectType_GmlObjectId(),source,new String[]{"kind","element","name","GmlObjectId","namespace","http://www.opengis.net/ogc"});
  addAnnotation(getGetGmlObjectType_OutputFormat(),source,new String[]{"kind","attribute","name","outputFormat"});
  addAnnotation(getGetGmlObjectType_TraverseXlinkDepth(),source,new String[]{"kind","attribute","name","traverseXlinkDepth"});
  addAnnotation(getGetGmlObjectType_TraverseXlinkExpiry(),source,new String[]{"kind","attribute","name","traverseXlinkExpiry"});
  addAnnotation(insertElementTypeEClass,source,new String[]{"name","InsertElementType","kind","elementOnly"});
  addAnnotation(getInsertElementType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(getInsertElementType_Idgen(),source,new String[]{"kind","attribute","name","idgen"});
  addAnnotation(getInsertElementType_InputFormat(),source,new String[]{"kind","attribute","name","inputFormat"});
  addAnnotation(insertResultsTypeEClass,source,new String[]{"name","InsertResultsType","kind","elementOnly"});
  addAnnotation(getInsertResultsType_Feature(),source,new String[]{"kind","element","name","Feature","namespace","##targetNamespace"});
  addAnnotation(insertedFeatureTypeEClass,source,new String[]{"name","InsertedFeatureType","kind","elementOnly"});
  addAnnotation(getInsertedFeatureType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(lockFeatureResponseTypeEClass,source,new String[]{"name","LockFeatureResponseType","kind","elementOnly"});
  addAnnotation(getLockFeatureResponseType_LockId(),source,new String[]{"kind","element","name","LockId","namespace","##targetNamespace"});
  addAnnotation(getLockFeatureResponseType_FeaturesLocked(),source,new String[]{"kind","element","name","FeaturesLocked","namespace","##targetNamespace"});
  addAnnotation(getLockFeatureResponseType_FeaturesNotLocked(),source,new String[]{"kind","element","name","FeaturesNotLocked","namespace","##targetNamespace"});
  addAnnotation(lockFeatureTypeEClass,source,new String[]{"name","LockFeatureType","kind","elementOnly"});
  addAnnotation(getLockFeatureType_Lock(),source,new String[]{"kind","element","name","Lock","namespace","##targetNamespace"});
  addAnnotation(getLockFeatureType_Expiry(),source,new String[]{"kind","attribute","name","expiry"});
  addAnnotation(getLockFeatureType_LockAction(),source,new String[]{"kind","attribute","name","lockAction"});
  addAnnotation(lockTypeEClass,source,new String[]{"name","LockType","kind","elementOnly"});
  addAnnotation(getLockType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(metadataURLTypeEClass,source,new String[]{"name","MetadataURLType","kind","simple"});
  addAnnotation(getMetadataURLType_Value(),source,new String[]{"name",":0","kind","simple"});
  addAnnotation(getMetadataURLType_Format(),source,new String[]{"kind","attribute","name","format"});
  addAnnotation(getMetadataURLType_Type(),source,new String[]{"kind","attribute","name","type"});
  addAnnotation(nativeTypeEClass,source,new String[]{"name","NativeType","kind","empty"});
  addAnnotation(getNativeType_SafeToIgnore(),source,new String[]{"kind","attribute","name","safeToIgnore"});
  addAnnotation(getNativeType_VendorId(),source,new String[]{"kind","attribute","name","vendorId"});
  addAnnotation(noSRSTypeEClass,source,new String[]{"name","NoSRS_._type","kind","empty"});
  addAnnotation(operationsTypeEClass,source,new String[]{"name","OperationsType","kind","elementOnly"});
  addAnnotation(getOperationsType_Operation(),source,new String[]{"kind","element","name","Operation","namespace","##targetNamespace"});
  addAnnotation(outputFormatListTypeEClass,source,new String[]{"name","OutputFormatListType","kind","elementOnly"});
  addAnnotation(getOutputFormatListType_Group(),source,new String[]{"kind","group","name","group:0"});
  addAnnotation(getOutputFormatListType_Format(),source,new String[]{"kind","element","name","Format","namespace","##targetNamespace","group","#group:0"});
  addAnnotation(propertyTypeEClass,source,new String[]{"name","PropertyType","kind","elementOnly"});
  addAnnotation(queryTypeEClass,source,new String[]{"name","QueryType","kind","elementOnly"});
  addAnnotation(getQueryType_Group(),source,new String[]{"kind","group","name","group:0"});
  addAnnotation(getQueryType_XlinkPropertyName(),source,new String[]{"kind","element","name","XlinkPropertyName","namespace","##targetNamespace","group","#group:0"});
  addAnnotation(getQueryType_FeatureVersion(),source,new String[]{"kind","attribute","name","featureVersion"});
  addAnnotation(getQueryType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(getQueryType_TypeName(),source,new String[]{"kind","attribute","name","typeName"});
  addAnnotation(transactionResponseTypeEClass,source,new String[]{"name","TransactionResponseType","kind","elementOnly"});
  addAnnotation(getTransactionResponseType_TransactionSummary(),source,new String[]{"kind","element","name","TransactionSummary","namespace","##targetNamespace"});
  addAnnotation(getTransactionResponseType_TransactionResults(),source,new String[]{"kind","element","name","TransactionResults","namespace","##targetNamespace"});
  addAnnotation(getTransactionResponseType_InsertResults(),source,new String[]{"kind","element","name","InsertResults","namespace","##targetNamespace"});
  addAnnotation(getTransactionResponseType_Version(),source,new String[]{"kind","attribute","name","version"});
  addAnnotation(transactionResultsTypeEClass,source,new String[]{"name","TransactionResultsType","kind","elementOnly"});
  addAnnotation(getTransactionResultsType_Action(),source,new String[]{"kind","element","name","Action","namespace","##targetNamespace"});
  addAnnotation(transactionSummaryTypeEClass,source,new String[]{"name","TransactionSummaryType","kind","elementOnly"});
  addAnnotation(getTransactionSummaryType_TotalInserted(),source,new String[]{"kind","element","name","totalInserted","namespace","##targetNamespace"});
  addAnnotation(getTransactionSummaryType_TotalUpdated(),source,new String[]{"kind","element","name","totalUpdated","namespace","##targetNamespace"});
  addAnnotation(getTransactionSummaryType_TotalDeleted(),source,new String[]{"kind","element","name","totalDeleted","namespace","##targetNamespace"});
  addAnnotation(transactionTypeEClass,source,new String[]{"name","TransactionType","kind","elementOnly"});
  addAnnotation(getTransactionType_LockId(),source,new String[]{"kind","element","name","LockId","namespace","##targetNamespace"});
  addAnnotation(getTransactionType_Group(),source,new String[]{"kind","group","name","group:4"});
  addAnnotation(getTransactionType_Insert(),source,new String[]{"kind","element","name","Insert","namespace","##targetNamespace","group","#group:4"});
  addAnnotation(getTransactionType_Update(),source,new String[]{"kind","element","name","Update","namespace","##targetNamespace","group","#group:4"});
  addAnnotation(getTransactionType_Delete(),source,new String[]{"kind","element","name","Delete","namespace","##targetNamespace","group","#group:4"});
  addAnnotation(getTransactionType_Native(),source,new String[]{"kind","element","name","Native","namespace","##targetNamespace","group","#group:4"});
  addAnnotation(getTransactionType_ReleaseAction(),source,new String[]{"kind","attribute","name","releaseAction"});
  addAnnotation(updateElementTypeEClass,source,new String[]{"name","UpdateElementType","kind","elementOnly"});
  addAnnotation(getUpdateElementType_Property(),source,new String[]{"kind","element","name","Property","namespace","##targetNamespace"});
  addAnnotation(getUpdateElementType_Handle(),source,new String[]{"kind","attribute","name","handle"});
  addAnnotation(getUpdateElementType_InputFormat(),source,new String[]{"kind","attribute","name","inputFormat"});
  addAnnotation(wfsCapabilitiesTypeEClass,source,new String[]{"name","WFS_CapabilitiesType","kind","elementOnly"});
  addAnnotation(getWFSCapabilitiesType_FeatureTypeList(),source,new String[]{"kind","element","name","FeatureTypeList","namespace","##targetNamespace"});
  addAnnotation(getWFSCapabilitiesType_ServesGMLObjectTypeList(),source,new String[]{"kind","element","name","ServesGMLObjectTypeList","namespace","##targetNamespace"});
  addAnnotation(getWFSCapabilitiesType_SupportsGMLObjectTypeList(),source,new String[]{"kind","element","name","SupportsGMLObjectTypeList","namespace","##targetNamespace"});
  addAnnotation(getWFSCapabilitiesType_FilterCapabilities(),source,new String[]{"kind","element","name","Filter_Capabilities","namespace","http://www.opengis.net/ogc"});
  addAnnotation(xlinkPropertyNameTypeEClass,source,new String[]{"name","XlinkPropertyName_._type","kind","simple"});
  addAnnotation(getXlinkPropertyNameType_Value(),source,new String[]{"name",":0","kind","simple"});
  addAnnotation(getXlinkPropertyNameType_TraverseXlinkDepth(),source,new String[]{"kind","attribute","name","traverseXlinkDepth"});
  addAnnotation(getXlinkPropertyNameType_TraverseXlinkExpiry(),source,new String[]{"kind","attribute","name","traverseXlinkExpiry"});
}
