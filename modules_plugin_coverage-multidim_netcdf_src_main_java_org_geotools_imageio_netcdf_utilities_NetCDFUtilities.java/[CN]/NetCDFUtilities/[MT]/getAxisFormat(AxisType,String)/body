{
  if (!type.equals(AxisType.Time) && !(type.equals(AxisType.RunTime))) {
    return NumberFormat.getNumberInstance(Locale.CANADA);
  }
  char dateSeparator='-';
  boolean twoDigitYear=false;
  boolean yearLast=false;
  boolean namedMonth=false;
  boolean monthFirst=false;
  boolean addT=false;
  boolean appendZ=false;
  int dateLength=0;
  if (prototype != null) {
    int field=1;
    int digitCount=0;
    final int length=prototype.length();
    for (int i=0; i < length; i++) {
      final char c=prototype.charAt(i);
      if (Character.isWhitespace(c)) {
        if (monthFirst && field == 1) {
          dateLength++;
        }
 else {
          break;
        }
      }
 else       if (Character.isDigit(c)) {
        digitCount++;
        dateLength++;
        continue;
      }
 else       if (Character.isLetter(c) && field <= 2) {
        if (field == 1) {
          yearLast=true;
          monthFirst=true;
        }
        namedMonth=true;
        dateLength++;
        continue;
      }
 else       if (field == 1 || monthFirst && field == 2) {
        dateSeparator=c;
        dateLength++;
      }
 else       if (c == dateSeparator) {
        dateLength++;
      }
 else       if (c == 'T') {
        addT=true;
      }
 else       if (c == 'Z' && i == length - 1) {
        appendZ=true;
      }
      if ((field == 1 || yearLast && field == 3) && digitCount <= 2) {
        twoDigitYear=true;
      }
      digitCount=0;
      field++;
    }
    if (digitCount >= 4) {
      yearLast=true;
      twoDigitYear=false;
    }
  }
  String pattern=null;
  if (yearLast) {
    pattern=(monthFirst ? "MMM dd-" : "dd-" + (namedMonth ? "MMM-" : "MM-")) + (twoDigitYear ? "yy" : "yyyy");
  }
 else {
    pattern=(twoDigitYear ? "yy-" : "yyyy-") + (namedMonth ? "MMM-" : "MM-") + "dd";
    if (dateLength < pattern.length()) {
      pattern=pattern.substring(0,dateLength);
    }
  }
  pattern=pattern.replace('-',dateSeparator);
  int lastColon=prototype.lastIndexOf(":");
  if (lastColon != -1) {
    pattern+=addT ? "'T'" : " ";
    pattern+=prototype != null && lastColon >= 16 ? "HH:mm:ss" : "HH:mm";
  }
  pattern+=appendZ ? "'Z'" : "";
  final DateFormat format=new SimpleDateFormat(pattern,Locale.CANADA);
  format.setTimeZone(TimeZone.getTimeZone("UTC"));
  return format;
}
