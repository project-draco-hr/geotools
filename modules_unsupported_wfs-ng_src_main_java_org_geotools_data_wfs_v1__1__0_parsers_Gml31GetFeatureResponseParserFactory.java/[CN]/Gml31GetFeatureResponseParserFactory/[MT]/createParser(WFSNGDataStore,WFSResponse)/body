{
  final WFSResponseParser parser;
  final String contentType=response.getContentType();
  if (isSupportedOutputFormat(contentType)) {
    parser=new FeatureCollectionParser();
  }
 else {
    final int buffSize=256;
    PushbackInputStream pushbackIn=new PushbackInputStream(response.getInputStream(),buffSize);
    byte[] buff=new byte[buffSize];
    int readCount=0;
    int r;
    while ((r=pushbackIn.read(buff,readCount,buffSize - readCount)) != -1) {
      readCount+=r;
      if (readCount == buffSize) {
        break;
      }
    }
    BufferedReader reader=new BufferedReader(new InputStreamReader(new ByteArrayInputStream(buff),response.getCharacterEncoding()));
    StringBuilder sb=new StringBuilder();
    String line;
    while ((line=reader.readLine()) != null) {
      sb.append(line).append('\n');
    }
    String head=sb.toString();
    LOGGER.fine("response head: " + head);
    pushbackIn.unread(buff,0,readCount);
    response.setInputStream(pushbackIn);
    if (head.contains("FeatureCollection")) {
      parser=new FeatureCollectionParser();
    }
 else     if (head.contains("ExceptionReport")) {
      parser=new ExceptionReportParser();
    }
 else {
      throw new IllegalStateException("Unkown server response: " + head);
    }
  }
  return parser;
}
