{
  Graphic copy=null;
  Displacement displacementCopy=null;
  if (gr.getDisplacement() != null) {
    gr.getDisplacement().accept(this);
    displacementCopy=(Displacement)pages.pop();
  }
  ExternalGraphic[] externalGraphics=gr.getExternalGraphics();
  ExternalGraphic[] externalGraphicsCopy=new ExternalGraphic[externalGraphics.length];
  int length=externalGraphics.length;
  for (int i=0; i < length; i++) {
    externalGraphicsCopy[i]=copy(externalGraphics[i]);
  }
  Mark[] marks=gr.getMarks();
  Mark[] marksCopy=new Mark[marks.length];
  length=marks.length;
  for (int i=0; i < length; i++) {
    marksCopy[i]=copy(marks[i]);
  }
  Expression opacityCopy=copy(gr.getOpacity());
  Expression rotationCopy=copy(gr.getRotation());
  Expression sizeCopy=rescaleGraphicSize(gr);
  Symbol[] symbols=gr.getSymbols();
  length=symbols.length;
  Symbol[] symbolCopys=new Symbol[length];
  for (int i=0; i < length; i++) {
    symbolCopys[i]=copy(symbols[i]);
  }
  copy=sf.createDefaultGraphic();
  copy.setDisplacement(displacementCopy);
  copy.setExternalGraphics(externalGraphicsCopy);
  copy.setMarks(marksCopy);
  copy.setOpacity((Expression)opacityCopy);
  copy.setRotation((Expression)rotationCopy);
  copy.setSize((Expression)sizeCopy);
  copy.setSymbols(symbolCopys);
  pages.push(copy);
}
