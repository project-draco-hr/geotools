{
  if (dto.getClientProperties().size() == 0) {
    return Collections.EMPTY_MAP;
  }
  Map clientProperties=new HashMap();
  for (Iterator it=dto.getClientProperties().entrySet().iterator(); it.hasNext(); ) {
    Map.Entry entry=(Map.Entry)it.next();
    String name=(String)entry.getKey();
    Name qName=Types.degloseName(name,namespaces);
    String cqlExpression=(String)entry.getValue();
    final Expression expression;
    if (inputXPath == null) {
      expression=parseOgcCqlExpression(cqlExpression);
    }
 else     if (cqlExpression.startsWith("'")) {
      expression=ff.literal(cqlExpression);
    }
 else {
      expression=new AttributeExpressionImpl(cqlExpression,new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT,this.namespaces));
    }
    clientProperties.put(qName,expression);
  }
  return clientProperties;
}
