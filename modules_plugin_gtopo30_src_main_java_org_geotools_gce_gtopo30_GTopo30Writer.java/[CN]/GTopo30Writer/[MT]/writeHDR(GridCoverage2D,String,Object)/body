{
  final double noData=-9999.0;
  final AffineTransform gridToWorld=(AffineTransform)gc.getGridGeometry().getGridToCRS2D();
  boolean lonFirst=(XAffineTransform.getSwapXY(gridToWorld) != -1);
  final double geospatialDx=Math.abs((lonFirst) ? gridToWorld.getScaleX() : gridToWorld.getShearY());
  final double geospatialDy=Math.abs((lonFirst) ? gridToWorld.getScaleY() : gridToWorld.getShearX());
  final double xUpperLeft=lonFirst ? gridToWorld.getTranslateX() : gridToWorld.getTranslateY();
  final double yUpperLeft=lonFirst ? gridToWorld.getTranslateY() : gridToWorld.getTranslateX();
  final int geometryWidth=gc.getGridGeometry().getGridRange().getSpan(0);
  final int geometryHeight=gc.getGridGeometry().getGridRange().getSpan(1);
  if (dest instanceof File) {
    final PrintWriter out=new PrintWriter(new BufferedOutputStream(new FileOutputStream(new File((File)dest,new StringBuffer(name).append(".HDR").toString()))));
    out.print("BYTEORDER");
    out.print(" ");
    out.println("M");
    out.print("LAYOUT");
    out.print(" ");
    out.println("BIL");
    out.print("NROWS");
    out.print(" ");
    out.println(geometryHeight);
    out.print("NCOLS");
    out.print(" ");
    out.println(geometryWidth);
    out.print("NBANDS");
    out.print(" ");
    out.println("1");
    out.print("NBITS");
    out.print(" ");
    out.println("16");
    out.print("BANDROWBYTES");
    out.print(" ");
    out.println(geometryWidth * 2);
    out.print("TOTALROWBYTES");
    out.print(" ");
    out.println(geometryWidth * 2);
    out.print("BANDGAPBYTES");
    out.print(" ");
    out.println(0);
    out.print("NODATA");
    out.print(" ");
    out.println((int)noData);
    out.print("ULXMAP");
    out.print(" ");
    out.println(xUpperLeft);
    out.print("ULYMAP");
    out.print(" ");
    out.println(yUpperLeft);
    out.print("XDIM");
    out.print(" ");
    out.println(geospatialDx);
    out.print("YDIM");
    out.print(" ");
    out.println(geospatialDy);
    out.flush();
    out.close();
  }
 else {
    final ZipOutputStream outZ=(ZipOutputStream)dest;
    final ZipEntry e=new ZipEntry(gc.getName().toString() + ".HDR");
    outZ.putNextEntry(e);
    outZ.write("BYTEORDER".getBytes());
    outZ.write(" ".getBytes());
    outZ.write("M".getBytes());
    outZ.write("\n".getBytes());
    outZ.write("LAYoutZ".getBytes());
    outZ.write(" ".getBytes());
    outZ.write("BIL".getBytes());
    outZ.write("\n".getBytes());
    outZ.write("NROWS".getBytes());
    outZ.write(" ".getBytes());
    outZ.write(Integer.toString(geometryHeight).getBytes());
    outZ.write("\n".getBytes());
    outZ.write("NCOLS".getBytes());
    outZ.write(" ".getBytes());
    outZ.write(Integer.toString(geometryWidth).getBytes());
    outZ.write("\n".getBytes());
    outZ.write("NBANDS".getBytes());
    outZ.write(" ".getBytes());
    outZ.write("1".getBytes());
    outZ.write("\n".getBytes());
    outZ.write("NBITS".getBytes());
    outZ.write(" ".getBytes());
    outZ.write("16".getBytes());
    outZ.write("\n".getBytes());
    outZ.write("BANDROWBYTES".getBytes());
    outZ.write(" ".getBytes());
    outZ.write(Integer.toString(geometryWidth * 2).getBytes());
    outZ.write("\n".getBytes());
    outZ.write("TOTALROWBYTES".getBytes());
    outZ.write(" ".getBytes());
    outZ.write(Integer.toString(geometryWidth * 2).getBytes());
    outZ.write("\n".getBytes());
    outZ.write("BANDGAPBYTES".getBytes());
    outZ.write(" ".getBytes());
    outZ.write("0".getBytes());
    outZ.write("\n".getBytes());
    outZ.write("NODATA".getBytes());
    outZ.write(" ".getBytes());
    outZ.write(Integer.toString((int)noData).getBytes());
    outZ.write("\n".getBytes());
    outZ.write("ULXMAP".getBytes());
    outZ.write(" ".getBytes());
    outZ.write(Double.toString(xUpperLeft + (geospatialDx / 2)).getBytes());
    outZ.write("\n".getBytes());
    outZ.write("ULYMAP".getBytes());
    outZ.write(" ".getBytes());
    outZ.write(Double.toString(yUpperLeft - (geospatialDy / 2)).getBytes());
    outZ.write("\n".getBytes());
    outZ.write("XDIM".getBytes());
    outZ.write(" ".getBytes());
    outZ.write(Double.toString(geospatialDx).getBytes());
    outZ.write("\n".getBytes());
    outZ.write("YDIM".getBytes());
    outZ.write(" ".getBytes());
    outZ.write(Double.toString(geospatialDy).toString().getBytes());
    outZ.write("\n".getBytes());
    outZ.closeEntry();
    ((ZipOutputStream)dest).closeEntry();
  }
}
