{
  if (!testingEnabled()) {
    return;
  }
  File file=null;
  try {
    file=TestData.file(this,fileName);
  }
 catch (  FileNotFoundException fnfe) {
    LOGGER.warning("test-data not found: " + fileName + "\nTests are skipped");
    return;
  }
catch (  IOException ioe) {
    LOGGER.warning("test-data not found: " + fileName + "\nTests are skipped");
    return;
  }
  final ImageLayout l=new ImageLayout();
  l.setTileGridXOffset(0).setTileGridYOffset(0).setTileHeight(512).setTileWidth(512);
  Hints hints=new Hints();
  hints.add(new RenderingHints(JAI.KEY_IMAGE_LAYOUT,l));
  final URL url=file.toURI().toURL();
  final Object source=url;
  final BaseGDALGridCoverage2DReader reader=new EnviHdrReader(source,hints);
  Assert.assertEquals(reader.getSource(),source);
  GridCoverage2D gc=(GridCoverage2D)reader.read(null);
  forceDataLoading(gc);
  final double cropFactor=2.0;
  final int oldW=gc.getRenderedImage().getWidth();
  final int oldH=gc.getRenderedImage().getHeight();
  final Rectangle range=((GridEnvelope2D)reader.getOriginalGridRange());
  final GeneralEnvelope oldEnvelope=reader.getOriginalEnvelope();
  final GeneralEnvelope cropEnvelope=new GeneralEnvelope(new double[]{oldEnvelope.getLowerCorner().getOrdinate(0) + (oldEnvelope.getLength(0) / cropFactor),oldEnvelope.getLowerCorner().getOrdinate(1) + (oldEnvelope.getLength(1) / cropFactor)},new double[]{oldEnvelope.getUpperCorner().getOrdinate(0),oldEnvelope.getUpperCorner().getOrdinate(1)});
  cropEnvelope.setCoordinateReferenceSystem(reader.getCrs());
  final ParameterValue gg=(ParameterValue)((AbstractGridFormat)reader.getFormat()).READ_GRIDGEOMETRY2D.createValue();
  gg.setValue(new GridGeometry2D(new GridEnvelope2D(new Rectangle(0,0,(int)(range.width / 4.0 / cropFactor),(int)(range.height / 4.0 / cropFactor))),cropEnvelope));
  gc=(GridCoverage2D)reader.read(new GeneralParameterValue[]{gg});
  Assert.assertNotNull(gc);
  Assert.assertTrue(cropEnvelope.equals(gc.getEnvelope(),XAffineTransform.getScale(((AffineTransform)((GridGeometry2D)gc.getGridGeometry()).getGridToCRS2D())) / 2,true));
  forceDataLoading(gc);
}
