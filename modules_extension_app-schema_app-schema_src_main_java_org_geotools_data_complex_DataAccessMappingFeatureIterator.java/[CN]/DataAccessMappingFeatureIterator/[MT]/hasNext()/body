{
  if (isHasNextCalled()) {
    return !isNextSourceFeatureNull();
  }
  setHasNextCalled(true);
  boolean exists=false;
  if (featureCounter < maxFeatures) {
    if (isNextFeatureSet()) {
      flagNextFeature(false);
      return curSrcFeature != null;
    }
    if (getSourceFeatureIterator() != null && getSourceFeatureIterator().hasNext()) {
      this.curSrcFeature=getSourceFeatureIterator().next();
      exists=true;
    }
    if (exists && filteredFeatures != null) {
      while (exists && filteredFeatures.contains(extractIdForFeature(this.curSrcFeature))) {
        if (getSourceFeatureIterator() != null && getSourceFeatureIterator().hasNext()) {
          this.curSrcFeature=getSourceFeatureIterator().next();
          exists=true;
        }
 else {
          exists=false;
        }
      }
      if (!exists) {
        curSrcFeature=null;
      }
    }
  }
  if (!exists) {
    LOGGER.finest("no more features, produced " + featureCounter);
    close();
    curSrcFeature=null;
  }
  flagNextFeature(false);
  return exists;
}
