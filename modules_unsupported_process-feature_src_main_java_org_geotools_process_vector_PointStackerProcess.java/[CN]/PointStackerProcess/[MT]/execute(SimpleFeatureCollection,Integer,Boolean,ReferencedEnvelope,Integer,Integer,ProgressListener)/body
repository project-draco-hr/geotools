{
  CoordinateReferenceSystem srcCRS=data.getSchema().getCoordinateReferenceSystem();
  CoordinateReferenceSystem dstCRS=outputEnv.getCoordinateReferenceSystem();
  MathTransform crsTransform=null;
  MathTransform invTransform=null;
  try {
    crsTransform=CRS.findMathTransform(srcCRS,dstCRS);
    invTransform=crsTransform.inverse();
  }
 catch (  FactoryException e) {
    throw new ProcessException(e);
  }
  boolean stretch=false;
  if (argStretch != null) {
    stretch=argStretch;
  }
  double cellSizeSrc=cellSize * outputEnv.getWidth() / outputWidth;
  Collection<StackedPoint> stackedPts=stackPoints(data,crsTransform,cellSizeSrc,outputEnv.getMinX(),outputEnv.getMinY());
  SimpleFeatureType schema=createType(srcCRS,stretch);
  ListFeatureCollection result=new ListFeatureCollection(schema);
  SimpleFeatureBuilder fb=new SimpleFeatureBuilder(schema);
  GeometryFactory factory=new GeometryFactory(new PackedCoordinateSequenceFactory());
  double[] srcPt=new double[2];
  double[] dstPt=new double[2];
  int maxCount=0;
  int maxCountUnique=0;
  if (stretch) {
    for (    StackedPoint sp : stackedPts) {
      if (maxCount < sp.getCount())       maxCount=sp.getCount();
      if (maxCountUnique < sp.getCount())       maxCountUnique=sp.getCountUnique();
    }
  }
  for (  StackedPoint sp : stackedPts) {
    Coordinate pt=sp.getLocation();
    srcPt[0]=pt.x;
    srcPt[1]=pt.y;
    invTransform.transform(srcPt,0,dstPt,0,1);
    Coordinate psrc=new Coordinate(dstPt[0],dstPt[1]);
    Geometry point=factory.createPoint(psrc);
    fb.add(point);
    fb.add(sp.getCount());
    fb.add(sp.getCountUnique());
    if (stretch) {
      fb.add(((float)sp.getCount()) / maxCount);
      fb.add(((float)sp.getCountUnique()) / maxCountUnique);
    }
    result.add(fb.buildFeature(null));
  }
  return result;
}
