{
  ResultSet tableInfo=null;
  ResultSet pkInfo=null;
  boolean pkMetadataFound=false;
  try {
    DatabaseMetaData dbMetaData=conn.getMetaData();
    Map pkMap=new LinkedHashMap();
    pkInfo=dbMetaData.getPrimaryKeys(catalog,schema,typeName);
    pkMetadataFound=true;
    while (pkInfo.next()) {
      ColumnInfo ci=new ColumnInfo();
      ci.colName=pkInfo.getString("COLUMN_NAME");
      ci.keySeq=pkInfo.getInt("KEY_SEQ");
      pkMap.put(ci.colName,ci);
    }
    tableInfo=dbMetaData.getColumns(catalog,schema,typeName,"%");
    boolean tableInfoFound=false;
    while (tableInfo.next()) {
      tableInfoFound=true;
      String columnName=tableInfo.getString("COLUMN_NAME");
      ColumnInfo ci=(ColumnInfo)pkMap.get(columnName);
      if (ci != null) {
        ci.dataType=tableInfo.getInt("DATA_TYPE");
        ci.typeName=tableInfo.getString("TYPE_NAME");
        ci.size=tableInfo.getInt("COLUMN_SIZE");
        ci.decimalDigits=tableInfo.getInt("DECIMAL_DIGITS");
        ci.autoIncrement=isAutoIncrement(catalog,schema,typeName,conn,tableInfo,columnName,ci.dataType);
      }
    }
    if (!tableInfoFound) {
      throw new SchemaNotFoundException(typeName);
    }
    Collection columnInfos=pkMap.values();
    return (ColumnInfo[])columnInfos.toArray(new ColumnInfo[columnInfos.size()]);
  }
 catch (  SQLException sqlException) {
    JDBCUtils.close(conn,Transaction.AUTO_COMMIT,sqlException);
    conn=null;
    if (pkMetadataFound) {
      throw new DataSourceException("SQL Error building FeatureType for " + typeName + " "+ sqlException.getMessage(),sqlException);
    }
 else {
      throw new SchemaNotFoundException(typeName,sqlException);
    }
  }
 finally {
    JDBCUtils.close(tableInfo);
  }
}
