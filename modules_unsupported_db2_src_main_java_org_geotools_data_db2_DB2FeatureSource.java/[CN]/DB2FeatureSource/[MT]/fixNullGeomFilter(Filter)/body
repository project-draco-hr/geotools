{
  BinarySpatialOperator operator=(BinarySpatialOperator)inFilter;
  Filter filter=(Filter)inFilter;
  Class filterClass=inFilter.getClass();
  double xmin=0, ymin=0, xmax=0, ymax=0;
  if (operator.getExpression1() == null) {
    String attName=null;
    GeometryDescriptor dg=getSchema().getGeometryDescriptor();
    if (dg != null)     attName=dg.getLocalName();
    if (attName != null) {
      FilterFactory2 ff=(FilterFactory2)CommonFactoryFinder.getFilterFactory(null);
      if (filterClass == Intersects.class) {
        Intersects intersects=(Intersects)inFilter;
        Literal geomLiteral=(Literal)intersects.getExpression2();
        Geometry geom=(Geometry)geomLiteral.getValue();
        Envelope envelope=geom.getEnvelopeInternal();
        xmin=envelope.getMinX();
        ymin=envelope.getMinY();
        xmax=envelope.getMaxX();
        ymax=envelope.getMaxY();
        PropertyName name=ff.property(attName);
        filter=ff.intersects(name,geomLiteral);
      }
 else       if (filterClass == BBOX.class) {
        BBOX bbox=(BBOX)inFilter;
        xmin=bbox.getMinX();
        ymin=bbox.getMinY();
        xmax=bbox.getMaxX();
        ymax=bbox.getMaxY();
      }
      filter=ff.bbox(attName,xmin,ymin,xmax,ymax,"");
    }
  }
  return filter;
}
