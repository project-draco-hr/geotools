{
  final File workDir=new File(TestData.file(this,"."),tempFolderName4);
  assertTrue(workDir.mkdir());
  FileUtils.copyFile(TestData.file(this,"watertemp.zip"),new File(workDir,"watertemp.zip"));
  TestData.unzipFile(this,tempFolderName4 + "/watertemp.zip");
  final URL timeElevURL=TestData.url(this,tempFolderName4);
  FileWriter out=null;
  try {
    out=new FileWriter(new File(TestData.file(this,"."),tempFolderName4 + "/datastore.properties"));
    final Set<Object> keyset=fixture.keySet();
    for (    Object key : keyset) {
      final String key_=(String)key;
      String value=fixture.getProperty(key_);
      if (key_.equalsIgnoreCase("database")) {
        value="samplecreate2";
      }
      out.write(key_.replace(" ","\\ ") + "=" + value.replace(" ","\\ ")+ "\n");
    }
    out.flush();
  }
  finally {
    if (out != null) {
      IOUtils.closeQuietly(out);
    }
  }
  final AbstractGridFormat format=TestUtils.getFormat(timeElevURL);
  assertNotNull(format);
  ImageMosaicReader reader=TestUtils.getReader(timeElevURL,format);
  assertNotNull(reader);
  reader.delete(true);
  boolean dropSuccessfull=false;
  try {
    dropTables(new String[]{tempFolderName4},"samplecreate2");
    dropSuccessfull=true;
  }
 catch (  SQLException E) {
    assertFalse(dropSuccessfull);
  }
}
