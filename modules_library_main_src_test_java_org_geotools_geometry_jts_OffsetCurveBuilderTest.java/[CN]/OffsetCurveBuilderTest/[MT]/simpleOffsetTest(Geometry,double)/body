{
  Geometry offset=offset(geom,offsetDistance);
  assertTrue(offset.isValid());
  assertTrue(offset.getLength() > 0);
  assertEquals(abs(offsetDistance),offset.distance(geom),EPS * abs(offsetDistance));
  offset.apply(new GeometryComponentFilter(){
    @Override public void filter(    Geometry geom){
      if (geom instanceof LineString) {
        LineString ls=(LineString)geom;
        CoordinateSequence cs=ls.getCoordinateSequence();
        if (cs.size() < 2) {
          return;
        }
        double px=cs.getOrdinate(0,0);
        double py=cs.getOrdinate(0,1);
        for (int i=1; i < cs.size(); i++) {
          double cx=cs.getOrdinate(i,0);
          double cy=cs.getOrdinate(i,1);
          if (cx == px && cy == py) {
            fail("Found two subsequent ordinates with the same value: " + cx + ", "+ py);
          }
          px=cx;
          py=cy;
        }
      }
    }
  }
);
  return offset;
}
