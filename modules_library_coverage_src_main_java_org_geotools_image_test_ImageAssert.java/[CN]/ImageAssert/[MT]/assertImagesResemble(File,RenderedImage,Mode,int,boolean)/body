{
  if (!expectedFile.exists()) {
    boolean useAsReference=actualReferenceFile && INTERACTIVE && ReferenceImageDialog.show(realignImage(actualImage));
    if (useAsReference) {
      try {
        File parent=expectedFile.getParentFile();
        if (!parent.exists() && !parent.mkdirs()) {
          throw new AssertionError("Could not create directory that will contain :" + expectedFile.getParent());
        }
        new ImageWorker(actualImage).writePNG(expectedFile,"FILTERED",0.9f,false,false);
      }
 catch (      IOException e) {
        throw (Error)new AssertionError("Failed to write the image to disk").initCause(e);
      }
    }
 else {
      throw new AssertionError("Reference image is missing: " + expectedFile + ", add -Dorg.geotools.image.test.interactive=true to show a dialog comparing them (requires GUI support)");
    }
  }
 else {
    RenderedImage expectedImage=ImageIO.read(expectedFile);
    ImageComparator comparator=new ImageComparator(mode,expectedImage,actualImage);
    if (comparator.getMismatchCount() > threshold) {
      boolean overwrite=false;
      if (INTERACTIVE) {
        overwrite=CompareImageDialog.show(realignImage(expectedImage),realignImage(actualImage),actualReferenceFile);
      }
 else {
        LOGGER.info("Images are different, add -Dorg.geotools.image.test.interactive=true to show a dialog comparing them (requires GUI support)");
      }
      if (overwrite) {
        ImageIO.write(actualImage,"PNG",expectedFile);
      }
 else {
        throw new AssertionError("Images are visibly different, found " + comparator.getMismatchCount() + " different pixels, against a threshold of "+ threshold+ "\nYou can add -Dorg.geotools.image.test.interactive=true to show a dialog comparing them (requires GUI support)");
      }
    }
 else {
      LOGGER.fine("Images are not visibly different, found " + comparator.getMismatchCount() + " different pixels, against a threshold of "+ threshold);
    }
  }
}
