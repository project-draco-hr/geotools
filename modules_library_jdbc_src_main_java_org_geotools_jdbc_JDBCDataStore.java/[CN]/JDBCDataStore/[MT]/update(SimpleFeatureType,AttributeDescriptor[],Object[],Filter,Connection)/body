{
  if ((attributes == null) || (attributes.length == 0)) {
    LOGGER.warning("Update called with no attributes, doing nothing.");
    return;
  }
  PrimaryKey key=null;
  try {
    key=getPrimaryKey(featureType);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  Set<String> pkColumnNames=getColumnNames(key);
  boolean nonPkeyColumn=false;
  for (  AttributeDescriptor att : attributes) {
    if (!pkColumnNames.contains(att.getLocalName())) {
      nonPkeyColumn=true;
    }
  }
  if (!nonPkeyColumn) {
    throw new IllegalArgumentException("Illegal update, must include at least one non primary key column, " + "all primary key columns are ignored.");
  }
  if (dialect instanceof PreparedStatementSQLDialect) {
    try {
      PreparedStatement ps=updateSQLPS(featureType,attributes,values,filter,pkColumnNames,cx);
      try {
        ((PreparedStatementSQLDialect)dialect).onUpdate(ps,cx,featureType);
        ps.execute();
      }
  finally {
        closeSafe(ps);
      }
    }
 catch (    SQLException e) {
      throw new RuntimeException(e);
    }
  }
 else {
    String sql=updateSQL(featureType,attributes,values,filter,pkColumnNames);
    try {
      Statement st=cx.createStatement();
      try {
        ((BasicSQLDialect)dialect).onUpdate(st,cx,featureType);
        LOGGER.log(Level.FINE,"Updating feature: {0}",sql);
        st.execute(sql);
      }
  finally {
        closeSafe(st);
      }
    }
 catch (    SQLException e) {
      String msg="Error occured updating features";
      throw (IOException)new IOException(msg).initCause(e);
    }
  }
}
