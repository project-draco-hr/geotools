{
  if (FID.startsWith(key.getTableName() + ".")) {
    FID=FID.substring(key.getTableName().length() + 1);
  }
  try {
    FID=URLDecoder.decode(FID,"UTF-8");
  }
 catch (  UnsupportedEncodingException e) {
    throw new RuntimeException(e);
  }
  List values=null;
  if (key.getColumns().size() > 1) {
    String[] split=FID.split("\\.");
    values=new ArrayList(split.length);
    for (int i=0; i < split.length; i++) {
      values.add(split[i]);
    }
  }
 else {
    values=new ArrayList();
    values.add(FID);
  }
  if (values.size() != key.getColumns().size()) {
    throw new IllegalArgumentException("Illegal fid: " + FID + ". Expected "+ key.getColumns().size()+ " values but got "+ values.size());
  }
  for (int i=0; i < values.size(); i++) {
    Object value=values.get(i);
    if (value != null) {
      Class type=key.getColumns().get(i).getType();
      Object converted=Converters.convert(value,type);
      if (converted != null) {
        values.set(i,converted);
      }
      if (strict && !type.isInstance(values.get(i))) {
        throw new IllegalArgumentException("Value " + values.get(i) + " illegal for type "+ type.getName());
      }
    }
  }
  return values;
}
