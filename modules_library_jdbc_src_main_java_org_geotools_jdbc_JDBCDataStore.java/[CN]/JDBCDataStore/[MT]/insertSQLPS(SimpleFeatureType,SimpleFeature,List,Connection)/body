{
  PreparedStatementSQLDialect dialect=(PreparedStatementSQLDialect)getSQLDialect();
  PrimaryKey key=null;
  try {
    key=getPrimaryKey(featureType);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  Set<String> pkColumnNames=getColumnNames(key);
  StringBuffer sql=new StringBuffer();
  sql.append("INSERT INTO ");
  encodeTableName(featureType.getTypeName(),sql,null);
  sql.append(" ( ");
  for (int i=0; i < featureType.getAttributeCount(); i++) {
    String colName=featureType.getDescriptor(i).getLocalName();
    if (pkColumnNames.contains(colName)) {
      continue;
    }
    dialect.encodeColumnName(colName,sql);
    sql.append(",");
  }
  boolean useExisting=Boolean.TRUE.equals(feature.getUserData().get(Hints.USE_PROVIDED_FID));
  for (  PrimaryKeyColumn col : key.getColumns()) {
    if (!(col instanceof AutoGeneratedPrimaryKeyColumn) || useExisting) {
      dialect.encodeColumnName(col.getName(),sql);
      sql.append(",");
    }
  }
  sql.setLength(sql.length() - 1);
  sql.append(" ) VALUES ( ");
  for (  AttributeDescriptor att : featureType.getAttributeDescriptors()) {
    String colName=att.getLocalName();
    if (pkColumnNames.contains(colName)) {
      continue;
    }
    if (att instanceof GeometryDescriptor) {
      Geometry geometry=(Geometry)feature.getAttribute(att.getName());
      dialect.prepareGeometryValue(geometry,getDescriptorSRID(att),att.getType().getBinding(),sql);
    }
 else {
      sql.append("?");
    }
    sql.append(",");
  }
  for (  PrimaryKeyColumn col : key.getColumns()) {
    if (!(col instanceof AutoGeneratedPrimaryKeyColumn) || useExisting) {
      sql.append("?").append(",");
    }
  }
  sql.setLength(sql.length() - 1);
  sql.append(")");
  LOGGER.log(Level.FINE,"Inserting new feature with ps: {0}",sql);
  PreparedStatement ps=cx.prepareStatement(sql.toString());
  int i=1;
  for (  AttributeDescriptor att : featureType.getAttributeDescriptors()) {
    String colName=att.getLocalName();
    if (pkColumnNames.contains(colName)) {
      continue;
    }
    Class binding=att.getType().getBinding();
    Object value=feature.getAttribute(colName);
    if (value == null) {
      if (!att.isNillable()) {
      }
    }
    if (Geometry.class.isAssignableFrom(binding)) {
      Geometry g=(Geometry)value;
      int srid=getGeometrySRID(g,att);
      dialect.setGeometryValue(g,srid,binding,ps,i);
    }
 else {
      dialect.setValue(value,binding,ps,i,cx);
    }
    if (LOGGER.isLoggable(Level.FINE)) {
      LOGGER.fine((i) + " = " + value);
    }
    i++;
  }
  for (int j=0; j < key.getColumns().size(); j++) {
    PrimaryKeyColumn col=key.getColumns().get(j);
    if (!(col instanceof AutoGeneratedPrimaryKeyColumn) || useExisting) {
      Object value=keyValues.get(j);
      dialect.setValue(value,col.getType(),ps,i,cx);
      i++;
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.fine((i) + " = " + value);
      }
    }
  }
  return ps;
}
