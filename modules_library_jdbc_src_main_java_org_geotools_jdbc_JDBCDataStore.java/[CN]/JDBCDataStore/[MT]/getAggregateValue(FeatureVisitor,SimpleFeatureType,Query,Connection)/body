{
  if (isGroupByVisitor(visitor) && !dialect.isGroupBySupported()) {
    return null;
  }
  String function=matchAggregateFunction(visitor);
  if (function == null) {
    return null;
  }
  AttributeDescriptor att=extractAggregateAttribute(visitor,featureType);
  if (att == null && !isCountVisitor(visitor)) {
    return null;
  }
  LimitingVisitor limitingVisitor=null;
  if (visitor instanceof LimitingVisitor) {
    limitingVisitor=(LimitingVisitor)visitor;
  }
  List<AttributeDescriptor> groupByAttributes=extractGroupByAttributes(visitor,featureType);
  try {
    Object result=null;
    List results=new ArrayList();
    Statement st=null;
    ResultSet rs=null;
    try {
      if (dialect instanceof PreparedStatementSQLDialect) {
        st=selectAggregateSQLPS(function,att,groupByAttributes,featureType,query,limitingVisitor,cx);
        rs=((PreparedStatement)st).executeQuery();
      }
 else {
        String sql=selectAggregateSQL(function,att,groupByAttributes,featureType,query,limitingVisitor);
        LOGGER.fine(sql);
        st=cx.createStatement();
        st.setFetchSize(fetchSize);
        rs=st.executeQuery(sql);
      }
      while (rs.next()) {
        if (groupByAttributes == null || groupByAttributes.isEmpty()) {
          Object value=rs.getObject(1);
          result=value;
          results.add(value);
        }
 else {
          results.add(extractValuesFromResultSet(rs,groupByAttributes.size()));
        }
      }
    }
  finally {
      closeSafe(rs);
      closeSafe(st);
    }
    if (setResult(visitor,results.size() > 1 ? results : result)) {
      return result == null ? results : result;
    }
    return null;
  }
 catch (  SQLException e) {
    throw (IOException)new IOException().initCause(e);
  }
}
