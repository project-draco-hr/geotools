{
  String[] columnNames=new String[featureType.getAttributeCount()];
  String[] sqlTypeNames=null;
  Class[] classes=new Class[featureType.getAttributeCount()];
  boolean[] nillable=new boolean[featureType.getAttributeCount()];
  for (int i=0; i < featureType.getAttributeCount(); i++) {
    AttributeDescriptor attributeType=featureType.getDescriptor(i);
    columnNames[i]=attributeType.getLocalName();
    classes[i]=attributeType.getType().getBinding();
    nillable[i]=attributeType.getMinOccurs() <= 0 || attributeType.isNillable();
  }
  sqlTypeNames=getSQLTypeNames(classes,cx);
  for (int i=0; i < sqlTypeNames.length; i++) {
    if (sqlTypeNames[i] == null) {
      String msg="Unable to map " + columnNames[i] + "( "+ classes[i].getName()+ ")";
      throw new RuntimeException(msg);
    }
  }
  return createTableSQL(featureType.getTypeName(),columnNames,sqlTypeNames,nillable,findPrimaryKeyColumnName(featureType),featureType);
}
