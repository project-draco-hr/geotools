{
  toSQL.setSqlNameEscape(dialect.getNameEscape());
  if (featureType != null) {
    final PrimaryKey key;
    try {
      key=getPrimaryKey(featureType);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
    FIDMapper mapper=new FIDMapper(){
      public String createID(      Connection conn,      SimpleFeature feature,      Statement statement) throws IOException {
        return null;
      }
      public int getColumnCount(){
        return key.getColumns().size();
      }
      public int getColumnDecimalDigits(      int colIndex){
        return 0;
      }
      public String getColumnName(      int colIndex){
        return key.getColumns().get(colIndex).getName();
      }
      public int getColumnSize(      int colIndex){
        return 0;
      }
      public int getColumnType(      int colIndex){
        return 0;
      }
      public String getID(      Object[] attributes){
        return null;
      }
      public Object[] getPKAttributes(      String FID) throws IOException {
        return decodeFID(key,FID,false).toArray();
      }
      public boolean hasAutoIncrementColumns(){
        return false;
      }
      public void initSupportStructures(){
      }
      public boolean isAutoIncrement(      int colIndex){
        return false;
      }
      public boolean isVolatile(){
        return false;
      }
      public boolean returnFIDColumnsAsAttributes(){
        return false;
      }
      public boolean isValid(      String fid){
        return true;
      }
    }
;
    toSQL.setFeatureType(featureType);
    toSQL.setPrimaryKey(key);
    toSQL.setFIDMapper(mapper);
    toSQL.setDatabaseSchema(databaseSchema);
  }
  return toSQL;
}
