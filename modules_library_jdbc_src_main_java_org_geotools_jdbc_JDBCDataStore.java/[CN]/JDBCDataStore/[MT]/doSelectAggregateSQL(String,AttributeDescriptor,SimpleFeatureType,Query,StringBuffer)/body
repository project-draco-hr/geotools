{
  JoinInfo join=!query.getJoins().isEmpty() ? JoinInfo.create(query,featureType,this) : null;
  boolean limitOffset=checkLimitOffset(query);
  if (limitOffset) {
    if (join != null) {
      sql.append("SELECT ");
      dialect.encodeColumnName(null,join.getPrimaryAlias(),sql);
      sql.append(".* FROM ");
    }
 else {
      sql.append("SELECT * FROM ");
    }
  }
 else {
    sql.append("SELECT ");
    encodeFunction(function,att,query,sql);
    sql.append(" FROM ");
  }
  if (join != null) {
    encodeTableJoin(featureType,join,query,sql);
  }
 else {
    encodeTableName(featureType.getTypeName(),sql,query.getHints());
  }
  List<FilterToSQL> toSQL=new ArrayList();
  if (join != null) {
    toSQL.addAll(encodeWhereJoin(featureType,join,sql));
  }
 else {
    Filter filter=query.getFilter();
    if (filter != null && !Filter.INCLUDE.equals(filter)) {
      sql.append(" WHERE ");
      toSQL.add(filter(featureType,filter,sql));
    }
  }
  if (limitOffset) {
    applyLimitOffset(sql,query);
    StringBuffer sql2=new StringBuffer("SELECT ");
    encodeFunction(function,att,query,sql2);
    sql2.append(" AS gt_result_");
    sql2.append(" FROM (");
    sql.insert(0,sql2.toString());
    sql.append(") gt_limited_");
  }
  return toSQL;
}
