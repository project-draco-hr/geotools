{
  PrimaryKey key=getPrimaryKey(featureType);
synchronized (this) {
    Statement st=null;
    try {
      if (!(dialect instanceof PreparedStatementSQLDialect)) {
        st=cx.createStatement();
      }
      boolean postInsert=dialect.lookupGeneratedValuesPostInsert() && isGenerated(key);
      for (Iterator f=features.iterator(); f.hasNext(); ) {
        SimpleFeature feature=(SimpleFeature)f.next();
        List<Object> keyValues=null;
        boolean useExisting=Boolean.TRUE.equals(feature.getUserData().get(Hints.USE_PROVIDED_FID));
        if (useExisting) {
          keyValues=decodeFID(key,feature.getID(),true);
        }
 else         if (!postInsert) {
          keyValues=getNextValues(key,cx);
        }
        if (dialect instanceof PreparedStatementSQLDialect) {
          PreparedStatement ps=insertSQLPS(featureType,feature,keyValues,cx);
          try {
            ps.execute();
          }
  finally {
            closeSafe(ps);
          }
        }
 else {
          String sql=insertSQL(featureType,feature,keyValues,cx);
          LOGGER.log(Level.FINE,"Inserting new feature: {0}",sql);
          st.execute(sql);
        }
        if (keyValues == null) {
          keyValues=getLastValues(key,cx);
        }
        String fid=featureType.getTypeName() + "." + encodeFID(keyValues);
        feature.getUserData().put("fid",fid);
      }
    }
 catch (    SQLException e) {
      String msg="Error inserting features";
      throw (IOException)new IOException(msg).initCause(e);
    }
 finally {
      closeSafe(st);
    }
  }
}
