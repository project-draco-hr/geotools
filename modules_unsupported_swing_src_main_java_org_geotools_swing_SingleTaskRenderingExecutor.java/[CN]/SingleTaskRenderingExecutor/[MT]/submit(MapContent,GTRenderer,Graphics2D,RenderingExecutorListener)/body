{
  long rtnValue=RenderingExecutor.TASK_REJECTED;
  if (taskExecutor.isShutdown()) {
    throw new IllegalStateException("Calling submit after the executor has been shutdown");
  }
  if (mapContent == null) {
    throw new IllegalArgumentException("mapContent must not be null");
  }
  if (graphics == null) {
    throw new IllegalArgumentException("graphics must not be null");
  }
  if (mapContent.getViewport().isEmpty()) {
    throw new IllegalArgumentException("The viewport must not be empty");
  }
  if (listener == null) {
    throw new IllegalArgumentException("listener must not be null");
  }
  if (!hasUnfinishedTask()) {
    try {
      cancelLatch.await();
    }
 catch (    InterruptedException ex) {
      throw new RuntimeException(ex);
    }
    task=new RenderingTask(mapContent,renderer,graphics);
    this.listener=listener;
    notifiedStart.set(false);
    taskFuture=taskExecutor.submit(task);
    rtnValue=task.getId();
  }
  return rtnValue;
}
