{
  SpatialIndexFeatureCollection ret=new SpatialIndexFeatureCollection(schema);
  Envelope env=new Envelope();
  env=(Envelope)filter.accept(ExtractBoundsFilterVisitor.BOUNDS_VISITOR,env);
  if (LOGGER.isLoggable(Level.FINEST) && Double.isInfinite(env.getWidth())) {
    LOGGER.fine("Found no spatial element in " + filter);
    LOGGER.fine("Just going to iterate");
  }
  for (Iterator<SimpleFeature> iter=(Iterator<SimpleFeature>)index.query(env).iterator(); iter.hasNext(); ) {
    SimpleFeature sample=iter.next();
    if (LOGGER.isLoggable(Level.FINEST)) {
      LOGGER.finest("Looking at " + sample);
    }
    if (filter.evaluate(sample)) {
      if (LOGGER.isLoggable(Level.FINEST)) {
        LOGGER.finest("accepting " + sample);
      }
      ret.add(sample);
    }
  }
  return ret;
}
