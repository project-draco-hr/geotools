{
  OptNode n1=(OptNode)m_builder.buildNode();
  n1.setDegree(1);
  OptNode n2=(OptNode)m_builder.buildNode();
  n2.setDegree(1);
  OptNode n3=(OptNode)m_builder.buildNode();
  n3.setDegree(1);
  OptNode n4=(OptNode)m_builder.buildNode();
  n4.setDegree(1);
  Edge e1=m_builder.buildEdge(n1,n2);
  Edge e2=m_builder.buildEdge(n3,n4);
  m_builder.addNode(n1);
  m_builder.addNode(n2);
  m_builder.addNode(n3);
  m_builder.addNode(n4);
  m_builder.addEdge(e1);
  m_builder.addEdge(e2);
  List toRemove=new ArrayList();
  toRemove.add(e1);
  toRemove.add(e2);
  assertTrue(m_builder.getEdges().contains(e1));
  assertTrue(m_builder.getEdges().contains(e2));
  try {
    m_builder.removeEdges(toRemove);
    assertTrue(false);
  }
 catch (  UnsupportedOperationException uoe) {
    assertTrue(true);
  }
}
