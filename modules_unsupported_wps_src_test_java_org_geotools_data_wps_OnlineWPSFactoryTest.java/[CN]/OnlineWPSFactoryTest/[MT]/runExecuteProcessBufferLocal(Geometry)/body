{
  if (fixture == null)   return;
  WPSCapabilitiesType capabilities=wps.getCapabilities();
  ProcessOfferingsType processOfferings=capabilities.getProcessOfferings();
  EList processes=processOfferings.getProcess();
  boolean found=false;
  Iterator iterator=processes.iterator();
  while (iterator.hasNext()) {
    ProcessBriefType process=(ProcessBriefType)iterator.next();
    if (process.getIdentifier().getValue().equalsIgnoreCase(processIden)) {
      found=true;
      break;
    }
  }
  if (!found) {
    return;
  }
  DescribeProcessRequest descRequest=wps.createDescribeProcessRequest();
  descRequest.setIdentifier(processIden);
  DescribeProcessResponse descResponse=wps.issueRequest(descRequest);
  ProcessDescriptionsType processDesc=descResponse.getProcessDesc();
  ProcessDescriptionType pdt=(ProcessDescriptionType)processDesc.getProcessDescription().get(0);
  WPSFactory wpsfactory=new WPSFactory(pdt,this.url);
  Process process=wpsfactory.create();
  Map<String,Object> map=new TreeMap<String,Object>();
  map.put("buffer",350);
  map.put("geom1",geom1);
  Map<String,Object> results=process.execute(map,null);
  assertNotNull(results);
  Geometry expected=geom1.buffer(350);
  Geometry result=(Geometry)results.get("result");
  assertNotNull(result);
}
