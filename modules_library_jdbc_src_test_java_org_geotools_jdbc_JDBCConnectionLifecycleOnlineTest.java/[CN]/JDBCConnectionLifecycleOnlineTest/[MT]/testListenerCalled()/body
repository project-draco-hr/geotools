{
  dataStore.getConnectionLifecycleListeners().add(mockListener);
  try (SimpleFeatureIterator fi=featureStore.getFeatures().features()){
    while (fi.hasNext()) {
      fi.next();
    }
  }
   assertTrue(mockListener.onBorrowCalled);
  assertTrue(mockListener.onReleaseCalled);
  assertFalse(mockListener.onCommitCalled);
  assertFalse(mockListener.onRollbackCalled);
  try (Transaction t=new DefaultTransaction()){
    SimpleFeatureBuilder b=new SimpleFeatureBuilder(featureStore.getSchema());
    DefaultFeatureCollection collection=new DefaultFeatureCollection(null,featureStore.getSchema());
    featureStore.setTransaction(t);
    for (int i=3; i < 6; i++) {
      b.set(aname("intProperty"),new Integer(i));
      b.set(aname("geometry"),new GeometryFactory().createPoint(new Coordinate(i,i)));
      collection.add(b.buildFeature(null));
    }
    featureStore.addFeatures((SimpleFeatureCollection)collection);
    t.commit();
    assertTrue(mockListener.onBorrowCalled);
    assertTrue(mockListener.onReleaseCalled);
    assertTrue(mockListener.onCommitCalled);
    assertFalse(mockListener.onRollbackCalled);
    t.rollback();
    assertTrue(mockListener.onRollbackCalled);
  }
 }
