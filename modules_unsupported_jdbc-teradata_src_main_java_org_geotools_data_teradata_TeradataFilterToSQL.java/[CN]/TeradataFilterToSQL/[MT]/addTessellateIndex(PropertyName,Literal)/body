{
  String key=null;
  if (primaryKey != null) {
    List<PrimaryKeyColumn> colsKey=primaryKey.getColumns();
    if (colsKey.size() == 1) {
      PrimaryKeyColumn colKey=colsKey.get(0);
      key=colKey.getName();
    }
  }
  if (key != null) {
    String encodedTableName=(String)currentGeometry.getUserData().get(TeradataGISDialect.TABLE_NAME);
    ;
    String encodedIdxTableName=(String)currentGeometry.getUserData().get(TeradataGISDialect.SPATIAL_INDEX);
    ;
    String propertyName=property.getPropertyName();
    if (propertyName.length() == 0) {
      propertyName="geom";
    }
    StringBuffer sb=new StringBuffer();
    mDialect.encodeColumnName(key,sb);
    String encodedKeyName=sb.toString();
    Envelope env=((Geometry)geometry.getValue()).getEnvelopeInternal();
    out.write(MessageFormat.format("{2} IN (SELECT DISTINCT ti.id " + "FROM {0} ti, TABLE (SYSSPATIAL.tessellate_search(1," + "  {12,number,0.0#}, {13,number,0.0#}, {14,number,0.0#}, {15,number,0.0#}, "+ "  {3,number,0.0#}, {4,number,0.0#}, {5,number,0.0#}, {6,number,0.0#}, "+ "  {7,number,0}, {8,number,0}, {9,number,0}, {10,number,0.0#}, {11,number,0})) AS i "+ "WHERE ti.cellid = i.cellid) AND ",encodedIdxTableName,encodedTableName,encodedKeyName,BasicFeatureTypes.FEATURE.getUserData().get(TeradataDataStoreFactory.U_XMIN),BasicFeatureTypes.FEATURE.getUserData().get(TeradataDataStoreFactory.U_YMIN),BasicFeatureTypes.FEATURE.getUserData().get(TeradataDataStoreFactory.U_XMAX),BasicFeatureTypes.FEATURE.getUserData().get(TeradataDataStoreFactory.U_YMAX),BasicFeatureTypes.FEATURE.getUserData().get(TeradataDataStoreFactory.G_NX),BasicFeatureTypes.FEATURE.getUserData().get(TeradataDataStoreFactory.G_NY),BasicFeatureTypes.FEATURE.getUserData().get(TeradataDataStoreFactory.LEVELS),BasicFeatureTypes.FEATURE.getUserData().get(TeradataDataStoreFactory.SCALE),BasicFeatureTypes.FEATURE.getUserData().get(TeradataDataStoreFactory.SHIFT),env.getMinX(),env.getMinY(),env.getMaxX(),env.getMaxY()));
  }
}
