{
  PropertyDataStoreFactory fact=new PropertyDataStoreFactory();
  File target=new File("target");
  File directory=new File(target,"properties");
  FileUtils.deleteDirectory(directory);
  Map params=new HashedMap();
  params.put(PropertyDataStoreFactory.DIRECTORY.key,directory.getPath());
  params.put(PropertyDataStoreFactory.NAMESPACE.key,sampleNs);
  unversioned=fact.createNewDataStore(params);
  versioned=new DataStoreDecorator(unversioned,repo);
  sampleType=DataUtilities.createType(sampleNs,sampleName,sampleTypeSpec);
  sample1=(SimpleFeature)feature(sampleType,idS1,"Sample String 1",new Integer(1),"POINT (0 1)",new Double(2.34));
  sample1.getUserData().put(Hints.USE_PROVIDED_FID,Boolean.TRUE);
  sample2=(SimpleFeature)feature(sampleType,idS2,"Sample String 2",new Integer(4),"POINT (1 0)",new Double(3380));
  sample2.getUserData().put(Hints.USE_PROVIDED_FID,Boolean.TRUE);
  sample3=(SimpleFeature)feature(sampleType,idS3,"Sample String 3",new Integer(81),"POINT (2 2)",new Double(78.2));
  sample3.getUserData().put(Hints.USE_PROVIDED_FID,Boolean.TRUE);
  LOGGER.info(sample1.toString());
  LOGGER.info(sample2.toString());
  LOGGER.info(sample3.toString());
  testType=DataUtilities.createType(sampleNs,testName,testTypeSpec);
  test1=(SimpleFeature)feature(testType,idT1,"Test String A","LINESTRING(1 0,0 0,0 1)",new Integer(5));
  test1.getUserData().put(Hints.USE_PROVIDED_FID,Boolean.TRUE);
  test2=(SimpleFeature)feature(testType,idT2,"Test String B","LINESTRING(2 6,2 8,3 18)",new Integer(-2));
  test2.getUserData().put(Hints.USE_PROVIDED_FID,Boolean.TRUE);
  test3=(SimpleFeature)feature(testType,idT3,"Test String C","LINESTRING(1 0,0 1,-1 0,0 -1,1 0)",new Integer(37));
  test3.getUserData().put(Hints.USE_PROVIDED_FID,Boolean.TRUE);
  LOGGER.info(test1.toString());
  LOGGER.info(test2.toString());
  LOGGER.info(test3.toString());
  versioned.createSchema(sampleType);
  SimpleFeatureStore store=(SimpleFeatureStore)versioned.getFeatureSource(sampleName);
  Transaction tranny=new DefaultTransaction("DecoratedTestCase.setupInternal()");
  store.setTransaction(tranny);
  DefaultFeatureCollection collection=new DefaultFeatureCollection(sampleName,sampleType);
  collection.add(sample1);
  collection.add(sample2);
  collection.add(sample3);
  List<FeatureId> ids=store.addFeatures(collection);
  assertEquals(3,ids.size());
  sampleFid1=ids.get(0);
  sampleFid2=ids.get(1);
  sampleFid3=ids.get(2);
  tranny.commit();
  tranny.close();
  versioned.createSchema(testType);
  SimpleFeatureStore store2=(SimpleFeatureStore)versioned.getFeatureSource(testName);
  Transaction tranny2=new DefaultTransaction("DecoratedTestCase.setupInternal().2");
  store2.setTransaction(tranny2);
  DefaultFeatureCollection collection2=new DefaultFeatureCollection(testName,testType);
  collection2.add(test1);
  collection2.add(test2);
  collection2.add(test3);
  store2.addFeatures(collection2);
  tranny2.commit();
  tranny2.close();
}
