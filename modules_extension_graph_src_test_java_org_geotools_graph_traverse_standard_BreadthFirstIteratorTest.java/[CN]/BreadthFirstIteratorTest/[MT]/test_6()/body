{
  GraphTestUtil.buildCircular(builder(),100);
  GraphVisitor visitor=new GraphVisitor(){
    public int visit(    Graphable component){
      if (component.getID() == 50)       return (Graph.PASS_AND_CONTINUE);
      return (Graph.FAIL_QUERY);
    }
  }
;
  Node source=(Node)builder().getGraph().queryNodes(visitor).get(0);
  CountingWalker walker=new CountingWalker();
  BreadthFirstIterator iterator=createIterator();
  BasicGraphTraversal traversal=new BasicGraphTraversal(builder().getGraph(),walker,iterator);
  traversal.init();
  iterator.setSource(source);
  traversal.traverse();
  visitor=new GraphVisitor(){
    public int visit(    Graphable component){
      assertTrue(component.isVisited());
      return (0);
    }
  }
;
  builder().getGraph().visitNodes(visitor);
  assertTrue(walker.getCount() == builder().getGraph().getNodes().size());
}
