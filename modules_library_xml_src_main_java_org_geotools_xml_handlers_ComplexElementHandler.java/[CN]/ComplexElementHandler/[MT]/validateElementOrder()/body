{
  if ((elements == null) || (elements.size() == 0)) {
    return;
  }
  int i=0;
  int count=0;
  int[] i2=new int[2];
  int cache=0;
  i2[1]=1;
  while (i < elements.size() && i2[1] == 1) {
    i2[0]=i;
    i2[1]=0;
    cache=i2[0];
    i2=valid(type.getChild(),i);
    if (i2[1] == 0 && i == i2[0]) {
      if (count < type.getChild().getMinOccurs()) {
        StringBuffer buf=new StringBuffer();
        buf.append("Too few elements for ");
        buf.append(elem.getNamespace() + ":" + elem.getName());
        buf.append(" (type = " + type.getName() + ") ");
        buf.append(": ");
        buf.append(count);
        buf.append(" children, ");
        buf.append(type.getChild().getMinOccurs());
        buf.append(" minOccurs");
        throw new SAXException(buf.toString());
      }
    }
 else {
      if (cache == i2[0]) {
        i=i2[0] + 1;
      }
 else {
        i=i2[0];
      }
      count++;
    }
  }
  if (count > type.getChild().getMaxOccurs()) {
    StringBuffer buf=new StringBuffer();
    buf.append("Too many elements for ");
    buf.append(elem.getNamespace() + ":" + elem.getName());
    buf.append(" (type = " + type.getName() + ") ");
    buf.append(": ");
    buf.append(count);
    buf.append(" children, ");
    buf.append(type.getChild().getMaxOccurs());
    buf.append(" maxOccurs");
    throw new SAXException(buf.toString());
  }
  if (i != elements.size()) {
    StringBuffer buf=new StringBuffer();
    buf.append("Invalid Element ordering for ");
    buf.append(elem.getNamespace() + ":" + elem.getName());
    buf.append(" (type = " + type.getName() + ") ");
    buf.append(". There were " + (elements.size() - i) + "elements which were unaccounted for");
    throw new SAXException(buf.toString());
  }
}
