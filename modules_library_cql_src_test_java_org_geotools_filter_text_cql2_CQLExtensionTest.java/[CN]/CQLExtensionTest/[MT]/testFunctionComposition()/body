{
  String cqlExpression;
  Expression expression;
  cqlExpression="strConcat(A, abs(B))";
  expression=CQL.toExpression(cqlExpression);
  cqlExpression="strConcat(A, strConcat(B, strConcat(C, '.')))";
  expression=CQL.toExpression(cqlExpression);
  Assert.assertNotNull(expression);
  Assert.assertTrue(expression instanceof Function);
  Function function=(Function)expression;
  Assert.assertEquals(2,function.getParameters().size());
  Expression propertyName=(Expression)function.getParameters().get(0);
  Assert.assertTrue(propertyName instanceof PropertyName);
  Assert.assertEquals("A",((PropertyName)propertyName).getPropertyName());
  Expression arg2=(Expression)function.getParameters().get(1);
  Assert.assertTrue(arg2 instanceof Function);
  function=(Function)arg2;
  propertyName=(Expression)function.getParameters().get(0);
  Assert.assertTrue(propertyName instanceof PropertyName);
  Assert.assertEquals("B",((PropertyName)propertyName).getPropertyName());
  arg2=(Expression)function.getParameters().get(1);
  Assert.assertTrue(arg2 instanceof Function);
  function=(Function)arg2;
  propertyName=(Expression)function.getParameters().get(0);
  Assert.assertTrue(propertyName instanceof PropertyName);
  Assert.assertEquals("C",((PropertyName)propertyName).getPropertyName());
  arg2=(Expression)function.getParameters().get(1);
  Assert.assertTrue(arg2 instanceof Literal);
  Assert.assertEquals(".",((Literal)arg2).getValue());
}
