{
  SessionTransactionState state;
  if (transaction == Transaction.AUTO_COMMIT) {
    LOGGER.log(Level.SEVERE,"Should not request ArcTransactionState when using AUTO_COMMITback connection");
    return null;
  }
synchronized (SessionTransactionState.class) {
    state=(SessionTransactionState)transaction.getState(pool);
    if (state == null) {
      ISession session;
      try {
        session=pool.getSession(true);
      }
 catch (      UnavailableConnectionException e) {
        throw new RuntimeException("Can't create a transaction state, connection pool exhausted",e);
      }
      try {
        session.startTransaction();
      }
 catch (      IOException e) {
        try {
          session.rollbackTransaction();
        }
  finally {
          session.dispose();
        }
        throw new DataSourceException("Exception initiating transaction on " + session,e);
      }
      state=new SessionTransactionState(session);
      transaction.putState(pool,state);
    }
  }
  return state;
}
