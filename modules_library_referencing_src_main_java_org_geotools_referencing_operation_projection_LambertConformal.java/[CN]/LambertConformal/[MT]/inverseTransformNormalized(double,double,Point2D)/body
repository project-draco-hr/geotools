{
  double theta;
  y=rho0 - y;
  double rho=hypot(x,y);
  if (rho > EPSILON) {
    if (n < 0) {
      rho=-rho;
      x=-x;
      y=-y;
    }
    theta=atan2(x,y);
    if (belgium) {
      theta+=BELGE_A;
    }
    x=theta / n;
    if (isSpherical) {
      y=2.0 * atan(pow(F / rho,1.0 / n)) - PI / 2;
    }
 else {
      y=cphi2(pow(rho / F,1.0 / n));
    }
  }
 else {
    x=0.0;
    y=n < 0 ? -(PI / 2) : (PI / 2);
  }
  if (ptDst != null) {
    ptDst.setLocation(x,y);
    return ptDst;
  }
  return new Point2D.Double(x,y);
}
