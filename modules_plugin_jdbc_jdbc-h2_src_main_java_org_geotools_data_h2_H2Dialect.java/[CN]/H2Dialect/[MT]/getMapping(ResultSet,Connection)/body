{
  String typeName=columnMetaData.getString("TYPE_NAME");
  if ("BLOB".equalsIgnoreCase(typeName)) {
    String schemaName=columnMetaData.getString("TABLE_SCHEM");
    String tableName=columnMetaData.getString("TABLE_NAME");
    String columnName=columnMetaData.getString("COLUMN_NAME");
    StringBuffer sql=new StringBuffer("SELECT type FROM geometry_columns WHERE ");
    if (schemaName != null) {
      sql.append("f_table_schema = '").append(schemaName).append("'").append(" AND ");
    }
    sql.append("f_table_name = '").append(tableName).append("' AND ");
    sql.append("f_geometry_column = '").append(columnName).append("'");
    Statement st=cx.createStatement();
    try {
      LOGGER.fine(sql.toString());
      ResultSet rs=st.executeQuery(sql.toString());
      try {
        if (rs.next()) {
          String type=rs.getString(1);
          Geometries g=Geometries.getForName(type);
          if (g != null) {
            return g.getBinding();
          }
          LOGGER.warning("Geometry type " + type + " not supported.");
        }
      }
  finally {
        dataStore.closeSafe(rs);
      }
    }
  finally {
      dataStore.closeSafe(st);
    }
    return byte[].class;
  }
  String remark=columnMetaData.getString("REMARKS");
  if (remark != null) {
    Geometries g=Geometries.getForName(remark);
    if (g != null) {
      return g.getBinding();
    }
  }
  return null;
}
