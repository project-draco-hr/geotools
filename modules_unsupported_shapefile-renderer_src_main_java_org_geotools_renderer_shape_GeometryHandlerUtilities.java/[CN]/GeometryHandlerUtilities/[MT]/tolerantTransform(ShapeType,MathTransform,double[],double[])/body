{
  boolean startPointTransformed=true;
  for (int i=0; i < dest.length; i+=2) {
    try {
      mt.transform(src,i,dest,i,1);
      if (!startPointTransformed) {
        startPointTransformed=true;
        for (int j=0; j < i; j+=2) {
          dest[j]=src[i];
          dest[j + 1]=src[i + 1];
        }
      }
    }
 catch (    TransformException e) {
      if (i == 0) {
        startPointTransformed=false;
      }
 else       if (startPointTransformed) {
        if ((i == (dest.length - 2)) && ((type == ShapeType.POLYGON) || (type == ShapeType.POLYGONZ) || (type == ShapeType.POLYGONM))) {
          dest[i]=dest[0];
          dest[i + 1]=dest[1];
        }
 else {
          dest[i]=dest[i - 2];
          dest[i + 1]=dest[i - 1];
        }
      }
    }
  }
  if (!startPointTransformed) {
    throw new TransformException("Unable to transform any of the points in the shape");
  }
}
