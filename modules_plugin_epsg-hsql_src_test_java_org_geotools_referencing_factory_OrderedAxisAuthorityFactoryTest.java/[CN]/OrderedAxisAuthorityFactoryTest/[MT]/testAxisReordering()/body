{
  final AbstractAuthorityFactory factory0, factory1;
  final Hints hints=new Hints(Hints.CRS_AUTHORITY_FACTORY,AbstractAuthorityFactory.class);
  factory0=(AbstractAuthorityFactory)ReferencingFactoryFinder.getCRSAuthorityFactory("EPSG",hints);
  assertFalse(factory0 instanceof OrderedAxisAuthorityFactory);
  assertFalse(factory0 instanceof LongitudeFirstFactory);
  hints.put(Hints.FORCE_LONGITUDE_FIRST_AXIS_ORDER,Boolean.TRUE);
  hints.put(Hints.FORCE_STANDARD_AXIS_DIRECTIONS,Boolean.TRUE);
  hints.put(Hints.FORCE_STANDARD_AXIS_UNITS,Boolean.TRUE);
  factory1=(AbstractAuthorityFactory)ReferencingFactoryFinder.getCRSAuthorityFactory("EPSG",hints);
  assertTrue(factory1 instanceof LongitudeFirstFactory);
  String code;
  CoordinateReferenceSystem crs0, crs1;
  CoordinateOperationFactory opFactory=ReferencingFactoryFinder.getCoordinateOperationFactory(null);
  MathTransform mt;
  Matrix matrix;
  code="4326";
  crs0=factory0.createCoordinateReferenceSystem(code);
  crs1=factory1.createCoordinateReferenceSystem(code);
  final CoordinateReferenceSystem cacheTest=crs1;
  assertNotSame(crs0,crs1);
  assertNotSame(crs0.getCoordinateSystem(),crs1.getCoordinateSystem());
  assertSame(((SingleCRS)crs0).getDatum(),((SingleCRS)crs1).getDatum());
  assertEquals("Expected a left-handed CS.",-90,getAngle(crs0),EPS);
  assertEquals("Expected a right-handed CS.",+90,getAngle(crs1),EPS);
  assertFalse(crs0.getIdentifiers().isEmpty());
  if (METADATA_ERASED) {
    assertTrue(crs1.getIdentifiers().isEmpty());
  }
 else {
    assertEquals(crs0.getIdentifiers(),crs1.getIdentifiers());
  }
  mt=opFactory.createOperation(crs0,crs1).getMathTransform();
  assertFalse(mt.isIdentity());
  assertTrue(mt instanceof LinearTransform);
  matrix=((LinearTransform)mt).getMatrix();
  assertEquals(new GeneralMatrix(new double[][]{{0,1,0},{1,0,0},{0,0,1}}),new GeneralMatrix(matrix));
  code="4329";
  crs0=factory0.createCoordinateReferenceSystem(code);
  crs1=factory1.createCoordinateReferenceSystem(code);
  assertNotSame(crs0,crs1);
  assertNotSame(crs0.getCoordinateSystem(),crs1.getCoordinateSystem());
  assertSame(((SingleCRS)crs0).getDatum(),((SingleCRS)crs1).getDatum());
  assertFalse(crs0.getIdentifiers().isEmpty());
  if (METADATA_ERASED) {
    assertTrue(crs1.getIdentifiers().isEmpty());
  }
 else {
    assertEquals(crs0.getIdentifiers(),crs1.getIdentifiers());
  }
  code="63266413";
  crs0=factory0.createCoordinateReferenceSystem(code);
  crs1=factory1.createCoordinateReferenceSystem(code);
  assertNotSame(crs0,crs1);
  assertNotSame(crs0.getCoordinateSystem(),crs1.getCoordinateSystem());
  assertSame(((SingleCRS)crs0).getDatum(),((SingleCRS)crs1).getDatum());
  assertFalse(crs0.getIdentifiers().isEmpty());
  if (METADATA_ERASED) {
    assertTrue(crs1.getIdentifiers().isEmpty());
  }
 else {
    assertEquals(crs0.getIdentifiers(),crs1.getIdentifiers());
  }
  mt=opFactory.createOperation(crs0,crs1).getMathTransform();
  assertFalse(mt.isIdentity());
  assertTrue(mt instanceof LinearTransform);
  matrix=((LinearTransform)mt).getMatrix();
  assertEquals(new GeneralMatrix(new double[][]{{0,1,0,0},{1,0,0,0},{0,0,1,0},{0,0,0,1}}),new GeneralMatrix(matrix));
  code="2027";
  crs0=factory0.createCoordinateReferenceSystem(code);
  crs1=factory1.createCoordinateReferenceSystem(code);
  assertNotSame(crs0,crs1);
  assertSame(crs0.getCoordinateSystem(),crs1.getCoordinateSystem());
  assertSame(((SingleCRS)crs0).getDatum(),((SingleCRS)crs1).getDatum());
  assertNotSame(((ProjectedCRS)crs0).getBaseCRS(),((ProjectedCRS)crs1).getBaseCRS());
  assertFalse(crs0.getIdentifiers().isEmpty());
  if (METADATA_ERASED) {
    assertTrue(crs1.getIdentifiers().isEmpty());
  }
 else {
    assertEquals(crs0.getIdentifiers(),crs1.getIdentifiers());
  }
  mt=opFactory.createOperation(crs0,crs1).getMathTransform();
  assertTrue(mt.isIdentity());
  code="22275";
  crs0=factory0.createCoordinateReferenceSystem(code);
  crs1=factory1.createCoordinateReferenceSystem(code);
  assertNotSame(crs0,crs1);
  assertNotSame(crs0.getCoordinateSystem(),crs1.getCoordinateSystem());
  assertSame(((SingleCRS)crs0).getDatum(),((SingleCRS)crs1).getDatum());
  assertFalse(crs0.getIdentifiers().isEmpty());
  if (METADATA_ERASED) {
    assertTrue(crs1.getIdentifiers().isEmpty());
  }
 else {
    assertEquals(crs0.getIdentifiers(),crs1.getIdentifiers());
  }
  mt=opFactory.createOperation(crs0,crs1).getMathTransform();
  assertFalse(mt.isIdentity());
  assertTrue(mt instanceof LinearTransform);
  matrix=((LinearTransform)mt).getMatrix();
  assertEquals(new GeneralMatrix(new double[][]{{-1,0,0},{0,-1,0},{0,0,1}}),new GeneralMatrix(matrix));
  assertSame(cacheTest,factory1.createCoordinateReferenceSystem("4326"));
}
