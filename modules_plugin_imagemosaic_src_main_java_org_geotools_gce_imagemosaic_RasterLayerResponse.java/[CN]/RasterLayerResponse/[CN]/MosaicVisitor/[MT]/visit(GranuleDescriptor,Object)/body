{
  final Geometry bb=JTS.toGeometry((BoundingBox)mosaicBBox);
  final Geometry inclusionGeometry=granuleDescriptor.inclusionGeometry;
  if (!footprintManagement || inclusionGeometry == null || footprintManagement && inclusionGeometry.intersects(bb)) {
    final GranuleLoader loader=new GranuleLoader(baseReadParameters,imageChoice,mosaicBBox,finalWorldToGridCorner,granuleDescriptor,request,hints);
    boolean found=false;
    for (int i=dimensionValueFilters.size() - 1; i >= 0; i--) {
      final Filter filter=dimensionValueFilters.get(i);
      if (filter != null && filter.evaluate(granuleDescriptor.originator)) {
        if (!dryRun) {
          if (multithreadingAllowed && rasterManager.parent.multiThreadedLoader != null) {
            granulesFutures.get(i).add(rasterManager.parent.multiThreadedLoader.submit(loader));
          }
 else {
            final FutureTask<GranuleLoadingResult> task=new FutureTask<GranuleLoadingResult>(loader);
            granulesFutures.get(i).add(task);
            task.run();
          }
        }
        granulesNumber++;
        found=true;
        break;
      }
    }
    if (!found) {
      throw new IllegalStateException("Unable to locate a filter for this granule:\n" + granuleDescriptor.toString());
    }
  }
}
