{
  try {
    chooseOverview();
    initBBOX();
    initTransformations();
    initRasterBounds();
    final Query query=initQuery();
    handleAdditionalFilters(query);
    handleSortByClause(query);
    final MosaicProducer visitor=new MosaicProducer();
    rasterManager.getGranuleDescriptors(query,visitor);
    RenderedImage returnValue=visitor.produce();
    if (returnValue != null) {
      if (LOGGER.isLoggable(Level.FINE)) {
        LOGGER.fine("Loaded bbox " + mosaicBBox.toString() + " while crop bbox "+ request.spatialRequestHelper.getCropBBox().toString());
      }
      return returnValue;
    }
    LOGGER.fine("We got no granules, let's do a dry run with no filters");
    final MosaicProducer dryRunVisitor=new MosaicProducer(true);
    final Utils.BBOXFilterExtractor bboxExtractor=new Utils.BBOXFilterExtractor();
    query.getFilter().accept(bboxExtractor,null);
    query.setFilter(FeatureUtilities.DEFAULT_FILTER_FACTORY.bbox(FeatureUtilities.DEFAULT_FILTER_FACTORY.property(rasterManager.getGranuleCatalog().getType(rasterManager.getTypeName()).getGeometryDescriptor().getName()),bboxExtractor.getBBox()));
    query.setMaxFeatures(1);
    rasterManager.getGranuleDescriptors(query,dryRunVisitor);
    if (dryRunVisitor.granulesNumber > 0) {
      LOGGER.fine("Dry run got a target granule, returning null as the additional filters did filter all the granules out");
      return null;
    }
    return createBlankResponse();
  }
 catch (  Exception e) {
    throw new DataSourceException("Unable to create this mosaic",e);
  }
}
