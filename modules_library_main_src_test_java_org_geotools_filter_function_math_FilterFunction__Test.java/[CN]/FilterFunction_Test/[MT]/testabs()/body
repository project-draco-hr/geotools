{
  try {
    FilterFunction_abs abs=(FilterFunction_abs)ff.function("abs",org.opengis.filter.expression.Expression.NIL);
    assertEquals("Name is, ","abs",abs.getName());
    assertEquals("Number of arguments, ",1,abs.getArgCount());
    Function absFunction=ff.function("abs",literal_1);
    assertEquals("abs of (1.0):",(int)Math.abs(1.0),((Integer)absFunction.evaluate(null)).intValue(),0.00001);
    absFunction=ff.function("abs",literal_m1);
    assertEquals("abs of (-1.0):",(int)Math.abs(-1.0),((Integer)absFunction.evaluate(null)).intValue(),0.00001);
    absFunction=ff.function("abs",literal_2);
    assertEquals("abs of (2.0):",(int)Math.abs(2.0),((Integer)absFunction.evaluate(null)).intValue(),0.00001);
    absFunction=ff.function("abs",literal_m2);
    assertEquals("abs of (-2.0):",(int)Math.abs(-2.0),((Integer)absFunction.evaluate(null)).intValue(),0.00001);
    absFunction=ff.function("abs",literal_pi);
    assertEquals("abs of (3.141592653589793):",(int)Math.abs(3.141592653589793),((Integer)absFunction.evaluate(null)).intValue(),0.00001);
    absFunction=ff.function("abs",literal_05pi);
    assertEquals("abs of (1.5707963267948966):",(int)Math.abs(1.5707963267948966),((Integer)absFunction.evaluate(null)).intValue(),0.00001);
  }
 catch (  FactoryRegistryException e) {
    e.printStackTrace();
    fail("Unexpected exception: " + e.getMessage());
  }
}
