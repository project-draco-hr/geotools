{
  try {
    FilterFunction_abs_2 abs_2=(FilterFunction_abs_2)ff.function("abs_2",org.opengis.filter.expression.Expression.NIL);
    assertEquals("Name is, ","abs_2",abs_2.getName());
    assertEquals("Number of arguments, ",1,abs_2.getArgCount());
    Function abs_2Function=ff.function("abs_2",literal_1);
    assertEquals("abs_2 of (1.0):",(long)Math.abs(1.0),((Long)abs_2Function.evaluate(null)).longValue(),0.00001);
    abs_2Function=ff.function("abs_2",literal_m1);
    assertEquals("abs_2 of (-1.0):",(long)Math.abs(-1.0),((Long)abs_2Function.evaluate(null)).longValue(),0.00001);
    abs_2Function=ff.function("abs_2",literal_2);
    assertEquals("abs_2 of (2.0):",(long)Math.abs(2.0),((Long)abs_2Function.evaluate(null)).longValue(),0.00001);
    abs_2Function=ff.function("abs_2",literal_m2);
    assertEquals("abs_2 of (-2.0):",(long)Math.abs(-2.0),((Long)abs_2Function.evaluate(null)).longValue(),0.00001);
    abs_2Function=ff.function("abs_2",literal_pi);
    assertEquals("abs_2 of (3.141592653589793):",(long)Math.abs(3.141592653589793),((Long)abs_2Function.evaluate(null)).longValue(),0.00001);
    abs_2Function=ff.function("abs_2",literal_05pi);
    assertEquals("abs_2 of (1.5707963267948966):",(long)Math.abs(1.5707963267948966),((Long)abs_2Function.evaluate(null)).longValue(),0.00001);
  }
 catch (  FactoryRegistryException e) {
    e.printStackTrace();
    fail("Unexpected exception: " + e.getMessage());
  }
}
