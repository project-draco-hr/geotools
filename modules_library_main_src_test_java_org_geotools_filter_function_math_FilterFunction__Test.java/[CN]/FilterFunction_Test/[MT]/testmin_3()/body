{
  try {
    FilterFunction_min_3 min_3=(FilterFunction_min_3)ff.function("min_3",new org.opengis.filter.expression.Expression[2]);
    assertEquals("Name is, ","min_3",min_3.getName());
    assertEquals("Number of arguments, ",2,min_3.getFunctionName().getArgumentCount());
    Function min_3Function=ff.function("min_3",literal_1,literal_m1);
    assertEquals("min of (1.0,-1.0):",(float)Math.min(1.0,-1.0),((Float)min_3Function.evaluate(null)).floatValue(),0.00001);
    min_3Function=ff.function("min_3",literal_m1,literal_2);
    assertEquals("min of (-1.0,2.0):",(float)Math.min(-1.0,2.0),((Float)min_3Function.evaluate(null)).floatValue(),0.00001);
    min_3Function=ff.function("min_3",literal_2,literal_m2);
    assertEquals("min of (2.0,-2.0):",(float)Math.min(2.0,-2.0),((Float)min_3Function.evaluate(null)).floatValue(),0.00001);
    min_3Function=ff.function("min_3",literal_m2,literal_pi);
    assertEquals("min of (-2.0,3.141592653589793):",(float)Math.min(-2.0,3.141592653589793),((Float)min_3Function.evaluate(null)).floatValue(),0.00001);
    min_3Function=ff.function("min_3",literal_pi,literal_05pi);
    assertEquals("min of (3.141592653589793,1.5707963267948966):",(float)Math.min(3.141592653589793,1.5707963267948966),((Float)min_3Function.evaluate(null)).floatValue(),0.00001);
    min_3Function=ff.function("min_3",literal_05pi,literal_1);
    assertEquals("min of (1.5707963267948966,1.0):",(float)Math.min(1.5707963267948966,1.0),((Float)min_3Function.evaluate(null)).floatValue(),0.00001);
  }
 catch (  FactoryRegistryException e) {
    e.printStackTrace();
    fail("Unexpected exception: " + e.getMessage());
  }
}
