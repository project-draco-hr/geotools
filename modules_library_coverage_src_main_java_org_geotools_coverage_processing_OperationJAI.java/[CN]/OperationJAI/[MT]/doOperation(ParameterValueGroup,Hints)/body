{
  final ParameterBlockJAI block=prepareParameters(parameters);
  final String[] sourceNames=operation.getSourceNames();
  final Collection<GridCoverage2D> sourceCollection=new ArrayList<GridCoverage2D>();
  extractSources(parameters,sourceCollection,sourceNames);
  int numSources=sourceCollection.size();
  final GridCoverage2D[] sources=sourceCollection.toArray(new GridCoverage2D[numSources]);
  resampleToCommonGeometry(sources,null,null,hints);
  GridCoverage2D coverage=sources[PRIMARY_SOURCE_INDEX];
  final CoordinateReferenceSystem crs=coverage.getCoordinateReferenceSystem2D();
  final MathTransform2D gridToCRS=coverage.getGridGeometry().getGridToCRS2D();
  for (int i=0; i < sources.length; i++) {
    if (sources[i] == null) {
      continue;
    }
    final GridCoverage2D source=sources[i];
    if (!CRS.equalsIgnoreMetadata(crs,source.getCoordinateReferenceSystem2D()) || !CRS.equalsIgnoreMetadata(gridToCRS,source.getGridGeometry().getGridToCRS2D())) {
      throw new IllegalArgumentException(Errors.format(ErrorKeys.INCOMPATIBLE_GRID_GEOMETRY));
    }
    block.setSource(source.getRenderedImage(),i);
  }
  coverage=deriveGridCoverage(sources,new Parameters(crs,gridToCRS,block,hints));
  return postProcessResult(coverage);
}
