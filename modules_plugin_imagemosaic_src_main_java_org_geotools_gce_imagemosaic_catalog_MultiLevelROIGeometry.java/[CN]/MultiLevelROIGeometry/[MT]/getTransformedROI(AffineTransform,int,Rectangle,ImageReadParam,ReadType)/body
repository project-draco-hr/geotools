{
  if (empty) {
    return null;
  }
  if (at == null) {
    at=new AffineTransform();
  }
  ROIGeometry roiGeometry=roiCache.get(at);
  if (roiGeometry == null) {
    Geometry rescaled;
    AffineTransformation geometryAT=new AffineTransformation(at.getScaleX(),at.getShearX(),at.getTranslateX(),at.getShearY(),at.getScaleY(),at.getTranslateY());
    if (inset > 0) {
      double scale=Math.min(Math.abs(at.getScaleX()),Math.abs(at.getScaleY()));
      double rescaledInset=scale * inset;
      if (rescaledInset < 1) {
        Geometry cloned=(Geometry)originalFootprint.clone();
        cloned.apply(geometryAT);
        Geometry bounds=(Geometry)granuleBounds.clone();
        bounds.apply(geometryAT);
        rescaled=insetPolicy.applyInset(cloned,bounds,1.5);
      }
 else {
        rescaled=(Geometry)insetFootprint.clone();
        rescaled.apply(geometryAT);
      }
    }
 else {
      rescaled=(Geometry)originalFootprint.clone();
      rescaled.apply(geometryAT);
    }
    if (!rescaled.isEmpty()) {
      Geometry simplified=TopologyPreservingSimplifier.simplify(rescaled,0.333);
      roiGeometry=new FastClipROIGeometry(simplified);
      roiCache.put(at,roiGeometry);
    }
 else {
      return null;
    }
  }
  return roiGeometry;
}
