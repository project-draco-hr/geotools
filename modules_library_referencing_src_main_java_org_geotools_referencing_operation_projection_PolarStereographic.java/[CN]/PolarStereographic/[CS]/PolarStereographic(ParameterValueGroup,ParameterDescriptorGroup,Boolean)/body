{
  super(parameters,descriptor);
  final ParameterDescriptor trueScaleDescriptor=Boolean.TRUE.equals(forceSouthPole) ? ProviderSouth.STANDARD_PARALLEL : ProviderNorth.STANDARD_PARALLEL;
  final Collection<GeneralParameterDescriptor> expected=descriptor.descriptors();
  double latitudeTrueScale;
  if (isExpectedParameter(expected,trueScaleDescriptor)) {
    latitudeTrueScale=doubleValue(expected,trueScaleDescriptor,parameters);
  }
 else {
    latitudeTrueScale=(latitudeOfOrigin < 0) ? -PI / 2 : PI / 2;
  }
  ensureLatitudeInRange(trueScaleDescriptor,latitudeTrueScale,true);
  poleForced=(forceSouthPole != null);
  if (poleForced) {
    southPole=forceSouthPole.booleanValue();
    latitudeTrueScale=abs(latitudeTrueScale);
    if (southPole) {
      latitudeTrueScale=-latitudeTrueScale;
    }
  }
 else {
    southPole=(latitudeTrueScale < 0);
  }
  this.latitudeOfOrigin=(southPole) ? -(PI / 2) : +(PI / 2);
  this.standardParallel=latitudeTrueScale;
  latitudeTrueScale=abs(latitudeTrueScale);
  if (abs(latitudeTrueScale - PI / 2) >= EPSILON) {
    final double t=sin(latitudeTrueScale);
    k0=msfn(t,cos(latitudeTrueScale)) / tsfn(latitudeTrueScale,t);
  }
 else {
    k0=2.0 / sqrt(pow(1 + excentricity,1 + excentricity) * pow(1 - excentricity,1 - excentricity));
  }
}
