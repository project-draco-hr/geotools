{
  return new LineString(){
    PointArray points;
    public List asLineSegments(){
      return null;
    }
    public PointArray getControlPoints(){
      return null;
    }
    public CurveBoundary getBoundary(){
      return null;
    }
    public Curve getCurve(){
      return null;
    }
    public CurveInterpolation getInterpolation(){
      return null;
    }
    public int getNumDerivativesAtEnd(){
      return 0;
    }
    public int getNumDerivativesAtStart(){
      return 0;
    }
    public int getNumDerivativesInterior(){
      return 0;
    }
    public PointArray getSamplePoints(){
      return null;
    }
    public CurveSegment reverse(){
      return null;
    }
    public LineString asLineString(    double maxSpacing,    double maxOffset){
      return this;
    }
    public DirectPosition forConstructiveParam(    double cp){
      return null;
    }
    public DirectPosition forParam(    double s){
      return null;
    }
    public double getEndConstructiveParam(){
      return 0;
    }
    public double getEndParam(){
      return 0;
    }
    public DirectPosition getEndPoint(){
      return points.getDirectPosition(points.size() - 1,null);
    }
    public ParamForPoint getParamForPoint(    DirectPosition p){
      return null;
    }
    public double getStartConstructiveParam(){
      return 0;
    }
    public double getStartParam(){
      return 0;
    }
    public DirectPosition getStartPoint(){
      return points.getDirectPosition(0,null);
    }
    public double[] getTangent(    double s){
      return null;
    }
    public double length(    Position point1,    Position point2){
      return 0;
    }
    public double length(    double cparam1,    double cparam2){
      return 0;
    }
  }
;
}
