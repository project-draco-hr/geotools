{
  FIDReader fidReader=null;
  final String tableName=reg.getTableName();
  try {
    final int rowIdColumnType=reg.getRowIdColumnType();
    final String rowIdColumnName=reg.getRowIdColumnName();
    int rowIdColumnIndex=-1;
    SeColumnDefinition[] schema=session.describe(table);
    for (int index=0; index < schema.length; index++) {
      if (schema[index].getName().equals(rowIdColumnName)) {
        rowIdColumnIndex=index;
        break;
      }
    }
    if (rowIdColumnType == SeRegistration.SE_REGISTRATION_ROW_ID_COLUMN_TYPE_SDE) {
      fidReader=new SdeManagedFidReader(tableName,rowIdColumnName);
    }
 else     if (rowIdColumnType == SeRegistration.SE_REGISTRATION_ROW_ID_COLUMN_TYPE_USER) {
      fidReader=new UserManagedFidReader(tableName,rowIdColumnName);
    }
 else     if (rowIdColumnType == SeRegistration.SE_REGISTRATION_ROW_ID_COLUMN_TYPE_NONE) {
      String shapeColName=layer.getSpatialColumn();
      String shapeIdColName=layer.getShapeAttributeName(SeLayer.SE_SHAPE_ATTRIBUTE_FID);
      fidReader=new ShapeFidReader(tableName,shapeColName,shapeIdColName);
    }
 else {
      throw new IllegalStateException("Unkown ArcSDE row ID registration type: " + rowIdColumnType + " for layer "+ tableName);
    }
    fidReader.setColumnIndex(rowIdColumnIndex);
    return fidReader;
  }
 catch (  SeException e) {
    throw new ArcSdeException("Obtaining FID strategy for " + tableName,e);
  }
}
