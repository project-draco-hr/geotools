{
  Filter filter=query.getFilter();
  if (Filter.EXCLUDE.equals(filter)) {
    return 0;
  }
  JDBC1DataStore jdbc=getJDBCDataStore();
  SQLBuilder sqlBuilder=jdbc.getSqlBuilder(featureType.getTypeName());
  Filter preFilter=(Filter)sqlBuilder.getPreQueryFilter(filter);
  Filter postFilter=(Filter)sqlBuilder.getPostQueryFilter(filter);
  if (postFilter != null && !Filter.INCLUDE.equals(postFilter)) {
    return -1;
  }
  Connection conn=null;
  try {
    conn=jdbc.getConnection(transaction);
    String typeName=getSchema().getTypeName();
    StringBuffer sql=new StringBuffer();
    sql.append("SELECT COUNT(*) as cnt");
    sqlBuilder.sqlFrom(sql,typeName);
    sqlBuilder.sqlWhere(sql,preFilter);
    LOGGER.finer("SQL: " + sql);
    Statement statement=conn.createStatement();
    ResultSet results=statement.executeQuery(sql.toString());
    results.next();
    int count=results.getInt("cnt");
    results.close();
    statement.close();
    return count;
  }
 catch (  SQLException sqlException) {
    JDBCUtils.close(conn,transaction,sqlException);
    conn=null;
    throw new DataSourceException("Could not count " + query.getHandle(),sqlException);
  }
catch (  SQLEncoderException e) {
    return -1;
  }
 finally {
    JDBCUtils.close(conn,transaction,null);
  }
}
