{
  org.opengis.filter.Filter filter=(org.opengis.filter.Filter)query.getFilter();
  if (org.opengis.filter.Filter.EXCLUDE.equals(filter)) {
    return null;
  }
  JDBC1DataStore jdbc=getDataStore();
  SQLBuilder sqlBuilder=jdbc.getSqlBuilder(this.getSchema().getTypeName());
  org.opengis.filter.Filter postFilter=(org.opengis.filter.Filter)sqlBuilder.getPostQueryFilter(query.getFilter());
  if (postFilter != null && !org.opengis.filter.Filter.INCLUDE.equals(postFilter)) {
    return null;
  }
  Connection conn=null;
  ResultSet results=null;
  Statement statement=null;
  try {
    conn=jdbc.getConnection(getFeatureSource().getTransaction());
    String typeName=getSchema().getTypeName();
    StringBuffer sql=new StringBuffer();
    sql.append("SELECT ");
    sql.append(aggregate);
    sql.append("(");
    if (expression == null) {
      sql.append("*");
    }
 else {
      expression=(Expression)expression.accept(new ExpressionSimplifier(),null);
      sqlBuilder.encode(sql,expression);
    }
    sql.append(") AS rslt");
    sqlBuilder.sqlFrom(sql,typeName);
    sqlBuilder.sqlWhere(sql,filter);
    statement=conn.createStatement();
    results=statement.executeQuery(sql.toString());
    if (results == null)     return null;
    results.next();
    Object answer=results.getObject("rslt");
    results.next();
    if (results.isAfterLast()) {
      return answer;
    }
    List list=new ArrayList();
    list.add(answer);
    while (!results.isAfterLast()) {
      list.add(results.getObject("rslt"));
      results.next();
    }
    return list;
  }
 catch (  SQLException sqlException) {
    JDBCUtils.close(conn,getFeatureSource().getTransaction(),sqlException);
    conn=null;
    throw new DataSourceException("Could not calculate " + aggregate + " with "+ query.getHandle(),sqlException);
  }
catch (  SQLEncoderException e) {
    return null;
  }
 finally {
    try {
      if (results != null)       results.close();
      if (statement != null)       statement.close();
    }
 catch (    SQLException ignore) {
    }
    JDBCUtils.close(conn,getFeatureSource().getTransaction(),null);
  }
}
