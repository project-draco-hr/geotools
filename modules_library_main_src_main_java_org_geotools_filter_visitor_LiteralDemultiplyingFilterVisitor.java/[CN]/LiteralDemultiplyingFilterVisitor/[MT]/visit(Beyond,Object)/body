{
  return demultiply(filter,new FilterReplacer<Beyond>(){
    @Override public Expression getExpression1(    Beyond filter){
      return filter.getExpression1();
    }
    @Override public Expression getExpression2(    Beyond filter){
      return filter.getExpression2();
    }
    @Override public Filter replaceExpressions(    Beyond filter,    Expression expression1,    Expression expression2){
      return ff.beyond(expression1,expression2,filter.getDistance(),filter.getDistanceUnits(),filter.getMatchAction());
    }
  }
);
}
