{
  Expression one=replacer.getExpression1(filter);
  Expression two=replacer.getExpression2(filter);
  if (two instanceof Literal) {
    Literal l=(Literal)two;
    Object value=l.getValue();
    if (value instanceof Collection) {
      List<Filter> filters=new ArrayList<Filter>();
      for (      Object valueElement : (Collection)value) {
        filters.add(demultiplyFirst((T)replacer.replaceExpressions(filter,one,ff.literal(valueElement)),replacer));
      }
      if (filter.getMatchAction() == MatchAction.ANY) {
        return ff.or(filters);
      }
 else       if (filter.getMatchAction() == MatchAction.ALL) {
        return ff.and(filters);
      }
 else       if (filter.getMatchAction() == MatchAction.ONE) {
        List<Filter> filters2=new ArrayList<Filter>();
        for (int i=0; i < filters.size(); i++) {
          List<Filter> filters3=new ArrayList<Filter>();
          for (int j=0; j < filters.size(); j++) {
            if (i == j) {
              filters3.add(filters.get(j));
            }
 else {
              filters3.add(ff.not(filters.get(j)));
            }
          }
          filters2.add(ff.and(filters3));
        }
        return ff.or(filters2);
      }
    }
  }
  return demultiplyFirst(filter,replacer);
}
