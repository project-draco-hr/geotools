{
  GeneralizationInfosProvider provider=new GeneralizationInfosProviderImpl();
  GeneralizationInfos ginfos=null;
  PreGeneralizedDataStore ds=null;
  SimpleFeatureCollection fCollection=null;
  String typeName="GenStreams";
  try {
    ginfos=provider.getGeneralizationInfos("src/test/resources/geninfo_vertical.xml");
    ds=new PreGeneralizedDataStore(ginfos,TestSetup.REPOSITORY);
    fCollection=ds.getFeatureSource(typeName).getFeatures();
  }
 catch (  IOException ex) {
    ex.printStackTrace();
    Assert.fail();
  }
  Iterator<SimpleFeature> it=fCollection.iterator();
  SimpleFeature feature1=it.next();
  assertTrue(feature1 instanceof PreGeneralizedSimpleFeature);
  boolean error;
  error=true;
  try {
    feature1.setAttribute(0,null);
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  try {
    feature1.setAttribute("CAT_ID",null);
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  try {
    feature1.setAttribute(new NameImpl("CAT_ID"),null);
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  try {
    feature1.setAttributes((List<Object>)null);
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  try {
    feature1.setAttributes(new Object[0]);
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  try {
    feature1.setDefaultGeometry(null);
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  try {
    feature1.setDefaultGeometryProperty(null);
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  try {
    feature1.setValue((Collection<Property>)null);
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  try {
    feature1.setValue((Object)null);
  }
 catch (  UnsupportedOperationException ex) {
    error=false;
  }
  if (error) {
    Assert.fail();
  }
  ds.dispose();
}
