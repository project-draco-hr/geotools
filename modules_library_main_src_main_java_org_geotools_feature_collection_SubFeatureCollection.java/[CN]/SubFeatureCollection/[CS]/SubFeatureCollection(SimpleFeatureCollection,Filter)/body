{
  super(collection.getSchema());
  if (subfilter == null) {
    subfilter=Filter.INCLUDE;
  }
  if (subfilter.equals(Filter.EXCLUDE)) {
    throw new IllegalArgumentException("A subcollection with Filter.EXCLUDE would be empty");
  }
  if (collection instanceof SubFeatureCollection) {
    SubFeatureCollection filtered=(SubFeatureCollection)collection;
    if (subfilter.equals(Filter.INCLUDE)) {
      this.collection=filtered.collection;
      this.filter=filtered.filter();
    }
 else {
      this.collection=filtered.collection;
      this.filter=ff.and(filtered.filter(),subfilter);
    }
  }
 else {
    this.collection=collection;
    this.filter=subfilter;
  }
}
