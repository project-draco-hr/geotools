{
  delegate.transform(srcPts,srcOff,dstPts,dstOff,numPts);
  int dimension=(srcPts.length - srcOff) / numPts;
  double lastSrcLon=srcPts[srcOff];
  double lastDstLon=dstPts[dstOff];
  float offset=0;
  for (int i=srcOff + dimension, j=dstOff + dimension, ptCount=0; ptCount < numPts; i+=dimension, j+=dimension, ptCount++) {
    double srcLon=srcPts[i];
    double dstLon=dstPts[j];
    double srcDelta=srcLon - lastSrcLon;
    double dstDelta=dstLon - lastDstLon;
    double difference=srcDelta - dstDelta;
    if (difference > 180) {
      offset+=360;
    }
 else     if (difference < 180) {
      offset-=360;
    }
    if (offset != 0) {
      dstPts[j]+=offset;
    }
    lastDstLon=dstLon;
    lastSrcLon=srcLon;
  }
}
