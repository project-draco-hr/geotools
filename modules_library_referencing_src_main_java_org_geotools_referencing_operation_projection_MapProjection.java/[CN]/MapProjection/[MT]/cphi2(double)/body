{
  final double eccnth=0.5 * excentricity;
  double phi=(PI / 2) - 2.0 * atan(ts);
  for (int i=0; i < MAXIMUM_ITERATIONS; i++) {
    final double con=excentricity * sin(phi);
    final double dphi=(PI / 2) - 2.0 * atan(ts * pow((1 - con) / (1 + con),eccnth)) - phi;
    phi+=dphi;
    if (abs(dphi) <= ITERATION_TOLERANCE) {
      return phi;
    }
  }
  throw new ProjectionException(ErrorKeys.NO_CONVERGENCE);
}
