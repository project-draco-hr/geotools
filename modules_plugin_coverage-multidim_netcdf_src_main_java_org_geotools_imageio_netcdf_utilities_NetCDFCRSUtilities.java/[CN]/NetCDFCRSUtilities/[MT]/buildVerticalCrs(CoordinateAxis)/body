{
  VerticalCRS verticalCRS=null;
  try {
    if (zAxis != null) {
      String axisName=zAxis.getFullName();
      if (!NetCDFCRSUtilities.VERTICAL_AXIS_NAMES.contains(axisName)) {
        return null;
      }
      String units=zAxis.getUnitsString();
      AxisType axisType=zAxis.getAxisType();
      String v_crsName="Unknown";
      String v_datumName="Unknown";
      String v_datumType=null;
      v_datumName=new Identification("Mean Sea Level",null,null,"EPSG:5100").getName();
      if (axisType == AxisType.RadialAzimuth || axisType == AxisType.GeoZ || axisType == AxisType.RadialElevation)       v_datumType="geoidal";
 else       if (axisType == AxisType.Height) {
        if (!zAxis.getShortName().equalsIgnoreCase("height")) {
          v_datumType="depth";
          v_crsName=new Identification("mean sea level depth",null,null,"EPSG:5715").getName();
        }
 else {
          v_datumType="geoidal";
          v_crsName=new Identification("mean sea level height",null,null,"EPSG:5714").getName();
        }
      }
 else       if (axisType == AxisType.Pressure)       v_datumType="barometric";
 else       v_datumType="other_surface";
      String direction=DIRECTIONS.get(axisType);
      if (direction != null) {
        if (CF.POSITIVE_DOWN.equalsIgnoreCase(zAxis.getPositive())) {
          direction=OPPOSITES.get(axisType);
        }
        final int offset=units.lastIndexOf('_');
        if (offset >= 0) {
          final String unitsDirection=units.substring(offset + 1).trim();
          final String opposite=OPPOSITES.get(axisType);
          if (unitsDirection.equalsIgnoreCase(opposite)) {
            direction=opposite;
          }
          if (unitsDirection.equalsIgnoreCase(direction)) {
            units=units.substring(0,offset).trim();
          }
        }
      }
      final Map<String,String> csMap=Collections.singletonMap("name","vertical_CS");
      VerticalCS verticalCS=NetCDFCRSUtilities.FACTORY_CONTAINER.getCSFactory().createVerticalCS(csMap,getAxis(zAxis.getShortName(),getDirection(direction),units));
      final Map<String,String> datumMap=Collections.singletonMap("name",v_datumName);
      final VerticalDatum verticalDatum=NetCDFCRSUtilities.FACTORY_CONTAINER.getDatumFactory().createVerticalDatum(datumMap,VerticalDatumType.valueOf(v_datumType));
      final Map<String,String> crsMap=Collections.singletonMap("name",v_crsName);
      verticalCRS=NetCDFCRSUtilities.FACTORY_CONTAINER.getCRSFactory().createVerticalCRS(crsMap,verticalDatum,verticalCS);
    }
  }
 catch (  FactoryException e) {
    if (LOGGER.isLoggable(Level.FINE))     LOGGER.log(Level.FINE,"Unable to parse vertical CRS",e);
    verticalCRS=null;
  }
  return verticalCRS;
}
