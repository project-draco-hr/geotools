{
  assertEquals(image1.getWidth(),image2.getWidth());
  assertEquals(image1.getHeight(),image2.getHeight());
  BufferedImage bi1=toBufferedImage(image1);
  BufferedImage bi2=toBufferedImage(image2);
  for (int i=0; i < bi1.getWidth(); i++) {
    for (int j=0; j < bi1.getHeight(); j++) {
      int c1=bi1.getRGB(i,j);
      int c2=bi2.getRGB(i,j);
      int a1=ColorUtils.alpha(c1);
      int a2=ColorUtils.alpha(c2);
      int r1=ColorUtils.red(c1);
      int r2=ColorUtils.red(c2);
      int g1=ColorUtils.green(c1);
      int g2=ColorUtils.green(c2);
      int b2=ColorUtils.blue(c2);
      int b1=ColorUtils.blue(c1);
      int dr=r1 - r2;
      int dg=g1 - g2;
      int db=b1 - b2;
      int da=a1 - a2;
      double d=Math.sqrt((1.5 * dr * dr + 2 * dg * dg + db * db + 2 * da * da) / (1.5 + 2 + 1+ 2));
      assertTrue("Color distance " + d + " excessive for pixels "+ i+ ","+ j,d <= maxColorDistance);
    }
  }
}
