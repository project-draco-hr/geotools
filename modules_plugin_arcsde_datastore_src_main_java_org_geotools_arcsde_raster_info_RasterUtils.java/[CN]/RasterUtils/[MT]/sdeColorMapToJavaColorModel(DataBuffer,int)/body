{
  if (colorMapData == null) {
    throw new NullPointerException("colorMapData");
  }
  if (colorMapData.getNumBanks() < 3 || colorMapData.getNumBanks() > 4) {
    throw new IllegalArgumentException("colorMapData shall have 3 or 4 banks: " + colorMapData.getNumBanks());
  }
  if (bitsPerSample != 8 && bitsPerSample != 16) {
    throw new IllegalAccessError("bits per sample shall be either 8 or 16. Got " + bitsPerSample);
  }
  final int numBanks=colorMapData.getNumBanks();
  final int mapSize=colorMapData.getSize();
  byte[] r=new byte[mapSize];
  byte[] g=new byte[mapSize];
  byte[] b=new byte[mapSize];
  byte[] a=new byte[mapSize];
  for (int i=0; i < mapSize; i++) {
    r[i]=(byte)(colorMapData.getElem(0,i) & 0xFF);
    g[i]=(byte)(colorMapData.getElem(1,i) & 0xFF);
    b[i]=(byte)(colorMapData.getElem(2,i) & 0xFF);
    a[i]=(byte)((numBanks == 3 ? 255 : colorMapData.getElem(3,i)) & 0xFF);
  }
  IndexColorModel colorModel=new IndexColorModel(bitsPerSample,mapSize,r,g,b,a);
  return colorModel;
}
