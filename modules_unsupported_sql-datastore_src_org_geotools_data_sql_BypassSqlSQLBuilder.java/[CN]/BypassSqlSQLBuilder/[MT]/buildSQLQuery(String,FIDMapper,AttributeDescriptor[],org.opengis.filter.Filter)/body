{
  String sqlStmt;
  if (this.ftHandler != null && this.ftHandler.isView(typeName)) {
    final StringBuffer sqlBuffer=new StringBuffer();
    final String sqlQuery=ftHandler.getQuery(typeName);
    fieldAliases=parseAliases(sqlQuery);
    UnaliasSQLEncoder encoder=(UnaliasSQLEncoder)super.encoder;
    encoder.setAliases(fieldAliases);
    SimpleFeatureType fType;
    try {
      fType=ftHandler.getFeatureTypeInfo(typeName).getSchema();
    }
 catch (    Exception e) {
      throw new RuntimeException("should not happen!: " + e.getMessage());
    }
    String select="select ";
    sqlBuffer.append(select);
    sqlColumns(sqlBuffer,mapper,attrTypes,fieldAliases);
    String from=getFrom(sqlQuery);
    sqlBuffer.append(from);
    String where=getWhere(sqlQuery,mapper,filter);
    sqlBuffer.append(where);
    String groupBy=getGroupBy(sqlQuery);
    if (groupBy != null) {
      sqlBuffer.append(groupBy);
    }
    String orderBy=getOrderBy(sqlQuery);
    if (orderBy != null) {
      sqlBuffer.append(orderBy);
    }
    sqlStmt=sqlBuffer.toString();
  }
 else {
    sqlStmt=super.buildSQLQuery(typeName,mapper,attrTypes,filter);
  }
  LOGGER.finer(sqlStmt);
  return sqlStmt;
}
