{
  if (imageMetadata == null) {
    throw new IllegalArgumentException(Errors.format(ErrorKeys.NULL_ARGUMENT_$1,"imageMetadata"));
  }
  iioMetadata=imageMetadata;
  Node rootNode=getRootNode();
  if (rootNode == null) {
    throw new NullPointerException("Unable to retrieve metadata");
  }
  IIOMetadataNode geoKeyDir=getTiffField(rootNode,GeoTIFFTagSet.TAG_GEO_KEY_DIRECTORY);
  geoKeys=new HashMap<Integer,GeoKeyEntry>();
  if (geoKeyDir != null) {
    NodeList geoKeyDirEntries=geoKeyDir.getFirstChild().getChildNodes();
    int length=geoKeyDirEntries.getLength();
    for (int i=4; i < length; i+=4) {
      int keyID=getIntValueAttribute(geoKeyDirEntries.item(i));
      GeoKeyEntry key=new GeoKeyEntry(keyID,getIntValueAttribute(geoKeyDirEntries.item(i + 1)),getIntValueAttribute(geoKeyDirEntries.item(i + 2)),getIntValueAttribute(geoKeyDirEntries.item(i + 3)));
      if (!geoKeys.containsKey(keyID)) {
        geoKeys.put(keyID,key);
      }
    }
    geoKeyDirVersion=getTiffShort(geoKeyDir,GeoTiffGCSCodes.GEO_KEY_DIRECTORY_VERSION_INDEX);
    geoKeyRevision=getTiffShort(geoKeyDir,GeoTiffGCSCodes.GEO_KEY_REVISION_INDEX);
    if (geoKeyRevision != 1) {
      geoKeyRevision=1;
    }
    geoKeyMinorRevision=getTiffShort(geoKeyDir,GeoTiffGCSCodes.GEO_KEY_MINOR_REVISION_INDEX);
    geoKeyDirTagsNum=getTiffShort(geoKeyDir,GeoTiffGCSCodes.GEO_KEY_NUM_KEYS_INDEX);
  }
  pixelScale=calculateModelPixelScales(rootNode);
  tiePoints=calculateTiePoints(rootNode);
  noData=calculateNoData(rootNode);
  modelTransformation=calculateModelTransformation(rootNode);
}
