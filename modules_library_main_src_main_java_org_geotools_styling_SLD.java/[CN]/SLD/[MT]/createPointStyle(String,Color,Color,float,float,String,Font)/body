{
  Stroke stroke=sf.createStroke(ff.literal(lineColor),ff.literal(1.0f));
  Fill fill=Fill.NULL;
  if (fillColor != null) {
    fill=sf.createFill(ff.literal(fillColor),ff.literal(opacity));
  }
  Mark mark=sf.createMark(ff.literal(wellKnownName),stroke,fill,ff.literal(size),ff.literal(0));
  Graphic graphic=sf.createDefaultGraphic();
  graphic.graphicalSymbols().clear();
  graphic.graphicalSymbols().add(mark);
  graphic.setSize(ff.literal(size));
  PointSymbolizer pointSym=sf.createPointSymbolizer(graphic,null);
  if (labelField == null) {
    return wrapSymbolizers(pointSym);
  }
 else {
    Font font=(labelFont == null ? sf.getDefaultFont() : labelFont);
    Fill labelFill=sf.createFill(ff.literal(Color.BLACK));
    AnchorPoint anchor=sf.createAnchorPoint(ff.literal(0.5),ff.literal(0.0));
    Displacement disp=sf.createDisplacement(ff.literal(0),ff.literal(5));
    LabelPlacement placement=sf.createPointPlacement(anchor,disp,ff.literal(0));
    TextSymbolizer textSym=sf.createTextSymbolizer(labelFill,new Font[]{font},null,ff.property(labelField),placement,null);
    return wrapSymbolizers(pointSym,textSym);
  }
}
