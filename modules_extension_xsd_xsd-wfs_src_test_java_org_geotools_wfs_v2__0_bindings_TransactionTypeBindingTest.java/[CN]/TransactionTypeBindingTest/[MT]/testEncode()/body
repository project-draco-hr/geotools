{
  Wfs20Factory factory=Wfs20Factory.eINSTANCE;
  FilterFactory ff=CommonFactoryFinder.getFilterFactory();
  TransactionType t=factory.createTransactionType();
  UpdateType update=factory.createUpdateType();
  update.setTypeName(new QName("http://blabla","MyFeature","bla"));
  PropertyType property=factory.createPropertyType();
  ValueReferenceType ref=factory.createValueReferenceType();
  ref.setValue(new QName("http://blabla","MyProperty","bla"));
  property.setValueReference(ref);
  property.setValue("myvalue");
  update.getProperty().add(property);
  Set<Identifier> ids=new HashSet<Identifier>();
  ids.add(ff.featureId("myid"));
  update.setFilter(ff.id(ids));
  t.getAbstractTransactionAction().add(update);
  DeleteType delete=factory.createDeleteType();
  delete.setTypeName(new QName("http://blabla","MyFeature","bla"));
  Set<Identifier> ids2=new HashSet<Identifier>();
  ids2.add(ff.featureId("myid2"));
  delete.setFilter(ff.id(ids2));
  t.getAbstractTransactionAction().add(delete);
  InsertType insert=factory.createInsertType();
  SimpleFeatureTypeBuilder tb=new SimpleFeatureTypeBuilder();
  tb.setName("MyFeature");
  tb.setNamespaceURI("http://blabla");
  tb.add("geometry",Point.class);
  tb.add("integer",Integer.class);
  SimpleFeatureBuilder b=new SimpleFeatureBuilder(tb.buildFeatureType());
  b.add(new GeometryFactory().createPoint(new Coordinate(0,0)));
  b.add(0);
  insert.getAny().add(b.buildFeature("zero"));
  t.getAbstractTransactionAction().add(insert);
  registerNamespaceMapping("bla","http://blabla");
  Document doc=encode(t,WFS.Transaction);
  print(doc);
  HashMap<String,String> m=new HashMap<String,String>();
  m.put("bla","http://blabla");
  m.put("wfs",WFS.NAMESPACE);
  m.put("gml",GML.NAMESPACE);
  m.put("fes",FES.NAMESPACE);
  m.put("xlink",XLINK.NAMESPACE);
  m.put("xsi","http://www.w3.org/2001/XMLSchema-instance");
  m.put("xsd","http://www.w3.org/2001/XMLSchema");
  m.put("xs","http://www.w3.org/2001/XMLSchema");
  XMLUnit.setXpathNamespaceContext(new SimpleNamespaceContext(m));
  XMLAssert.assertXpathExists("//wfs:Transaction/wfs:Update",doc);
  XMLAssert.assertXpathExists("//wfs:Transaction/wfs:Insert",doc);
  XMLAssert.assertXpathExists("//wfs:Transaction/wfs:Delete",doc);
  XMLAssert.assertXpathEvaluatesTo("bla:MyProperty","//wfs:Update//wfs:ValueReference",doc);
  XMLAssert.assertXpathEvaluatesTo("myvalue","//wfs:Update//wfs:Value",doc);
  XMLAssert.assertXpathExists("//wfs:Update//fes:Filter/fes:ResourceId",doc);
  XMLAssert.assertXpathEvaluatesTo("myid","//wfs:Update//fes:Filter/fes:ResourceId/@rid",doc);
  XMLAssert.assertXpathExists("//wfs:Delete//fes:Filter/fes:ResourceId",doc);
  XMLAssert.assertXpathEvaluatesTo("myid2","//wfs:Delete//fes:Filter/fes:ResourceId/@rid",doc);
  XMLAssert.assertXpathExists("//wfs:Insert//bla:MyFeature",doc);
  XMLAssert.assertXpathEvaluatesTo("zero","//wfs:Insert//bla:MyFeature/@gml:id",doc);
  XMLAssert.assertXpathExists("//wfs:Insert//bla:MyFeature/bla:geometry",doc);
  XMLAssert.assertXpathEvaluatesTo("0","//wfs:Insert//bla:MyFeature/bla:integer",doc);
}
