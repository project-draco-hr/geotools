{
  NumberRange scale=getRange(category.getName());
  if (scale == null) {
    if (category.isQuantitative()) {
      scale=getRange(ANY_QUANTITATIVE_CATEGORY);
    }
    if (scale == null) {
      return null;
    }
  }
  double minimum=scale.getMinimum();
  double maximum=scale.getMaximum();
  boolean minIncluded=scale.isMinIncluded();
  boolean maxIncluded=scale.isMaxIncluded();
  if (scale instanceof MeasurementRange) {
    try {
      scale=((MeasurementRange)scale).convertTo(units);
    }
 catch (    ConversionException e) {
      Logging.unexpectedException(CoverageProcessor.LOGGER,ColorMap.class,"recolor",e);
      return null;
    }
    MathTransform1D tr=category.getSampleToGeophysics();
    if (tr != null)     try {
      tr=tr.inverse();
      minimum=tr.transform(minimum);
      maximum=tr.transform(maximum);
    }
 catch (    TransformException e) {
      Logging.unexpectedException(CoverageProcessor.LOGGER,ColorMap.class,"recolor",e);
      return null;
    }
  }
 else {
    final NumberRange range=category.getRange();
    final double lower=range.getMinimum();
    final double extent=range.getMaximum() - lower;
    minimum=(minimum / 100) * extent + lower;
    maximum=(maximum / 100) * extent + lower;
    minIncluded&=range.isMinIncluded();
    maxIncluded&=range.isMaxIncluded();
  }
  final int lower, upper;
  if (minimum > maximum) {
    lower=round(maximum,maxIncluded);
    upper=round(minimum,!minIncluded);
  }
 else {
    lower=round(minimum,minIncluded);
    upper=round(maximum,!maxIncluded);
  }
  return NumberRange.create(lower,true,upper,false);
}
