{
  if (A.equals(B))   return distancePointLine(A,C,D);
  if (C.equals(D))   return distancePointLine(D,A,B);
  double r_top=(A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);
  double r_bot=(B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);
  double s_top=(A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);
  double s_bot=(B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);
  if ((r_bot == 0) || (s_bot == 0)) {
    return Math.min(distancePointLine(A,C,D),Math.min(distancePointLine(B,C,D),Math.min(distancePointLine(C,A,B),distancePointLine(D,A,B))));
  }
  double s=s_top / s_bot;
  double r=r_top / r_bot;
  if ((r < 0) || (r > 1) || (s < 0)|| (s > 1)) {
    return Math.min(distancePointLine(A,C,D),Math.min(distancePointLine(B,C,D),Math.min(distancePointLine(C,A,B),distancePointLine(D,A,B))));
  }
  return 0.0;
}
