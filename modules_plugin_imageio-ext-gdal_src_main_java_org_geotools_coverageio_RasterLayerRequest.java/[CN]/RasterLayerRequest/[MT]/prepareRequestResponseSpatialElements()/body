{
  try {
    if (requestedBBox != null) {
      adjustRequestedBBox();
      if (requestedBBox == null || requestedBBox.isEmpty()) {
        if (LOGGER.isLoggable(Level.FINE))         LOGGER.log(Level.FINE,"RequestedBBox empty or null");
        emptyRequest=true;
        return;
      }
      coverageRequestedRasterArea.setRect(getCropRegion());
      if (coverageRequestedRasterArea.isEmpty()) {
        if (LOGGER.isLoggable(Level.FINE))         LOGGER.log(Level.FINE,"Requested envelope too small resulting in empty cropped raster region");
        emptyRequest=true;
        return;
      }
      if (!coverageRequestedRasterArea.intersects(coverageRasterArea))       throw new DataSourceException("The crop region is invalid.");
      XRectangle2D.intersect(coverageRequestedRasterArea,coverageRasterArea,coverageRequestedRasterArea);
      if (LOGGER.isLoggable(Level.FINE)) {
        String message="Adjusted Requested Envelope = " + requestedBBox.toString() + "\nRequested raster dimension = "+ requestedRasterArea.toString()+ "\nCorresponding raster source region = "+ coverageRequestedRasterArea.toString();
        LOGGER.log(Level.FINE,message);
      }
      return;
    }
  }
 catch (  TransformException e) {
    throw new DataSourceException("Unable to create a coverage for this source",e);
  }
catch (  FactoryException e) {
    throw new DataSourceException("Unable to create a coverage for this source",e);
  }
  requestedBBox=coverageBBox;
  requestedRasterArea=(Rectangle)coverageRasterArea.clone();
  coverageRequestedRasterArea=(Rectangle)coverageRasterArea.clone();
  requestedResolution=coverageFullResolution.clone();
}
